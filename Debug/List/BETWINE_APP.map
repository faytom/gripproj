################################################################################
#                                                                              #
#      IAR Universal Linker V5.7.0.39                                          #
#                                                                              #
#           Link time     =  10/Mar/2015  17:33:40                             #
#           Target CPU    =  x51                                               #
#           List file     =  C:\Users\Tom\Desktop\新我握力器\0827\Debug\List\B #
#                            ETWINE_APP.map                                    #
#           Output file 1 =  C:\Users\Tom\Desktop\新我握力器\0827\Debug\Exe\BE #
#                            TWINE_APP.hex                                     #
#                            Format: intel-extended                            #
#           Output file 2 =  C:\Users\Tom\Desktop\新我握力器\0827\Debug\Exe\BE #
#                            TWINE_APP.d51                                     #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.5\8051\CONFIG\"                         #
#                            -D_NR_OF_BANKS=0x07 -D_CODEBANK_END=0xFFFF        #
#                            -D_CODEBANK_START=0x8000 -D?CBANK_MASK=0xFF       #
#                            -D?CBANK=0x9F                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\lib\CC2541_B #
#                            LE_peri.lib                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\lib\CC254x_B #
#                            LE_HCI_TL_None.lib                                #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL.r51                                            #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL_ClockBLE.r51                                   #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL_Memory.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL_PwrMgr.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL_Timers.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OS #
#                            AL_betwine.r51                                    #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\On #
#                            Board.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ap #
#                            p.r51                                             #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ba #
#                            ttservice.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\be #
#                            twine.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\be #
#                            twine_main.r51                                    #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\de #
#                            vinfoservice.r51                                  #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ep #
#                            b.r51                                             #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ep #
#                            b_MmBp.r51                                        #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ep #
#                            b_WristBand.r51                                   #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ga #
#                            p.r51                                             #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ga #
#                            pbondmgr.r51                                      #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ga #
#                            tt_uuid.r51                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_acc.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_adc.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_aes.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_assert.r51                                      #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_crc.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_dma.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_drivers.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_flash.r51                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_i2c.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_key.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_lcd.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_led.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_sleep.r51                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_startup.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_timer.r51                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ha #
#                            l_uart.r51                                        #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hi #
#                            storystep.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hi #
#                            tpoint.r51                                        #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\mo #
#                            torrun.r51                                        #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\os #
#                            al_bufmgr.r51                                     #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\os #
#                            al_cbtimer.r51                                    #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\os #
#                            al_snv.r51                                        #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\pe #
#                            dometer.r51                                       #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\pe #
#                            ripheral.r51                                      #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\sy #
#                            stemtest.r51                                      #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\ti #
#                            meset.r51                                         #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\we #
#                            chatprofile.r51                                   #
#                            -o                                                #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\Exe\BE #
#                            TWINE_APP.d51                                     #
#                            -l                                                #
#                            C:\Users\Tom\Desktop\新我握力器\0827\Debug\List\B #
#                            ETWINE_APP.map                                    #
#                            -xmsnio                                           #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.5\8051\LIB\"                            #
#                            -f                                                #
#                            C:\Users\Tom\Desktop\新我握力器\0827\config\cc254 #
#                            x_f256_imgB.xcl                                   #
#                            (-D_XDATA_BEG=0x0000 -D_XDATA_END=0x1EFF          #
#                            -D_IDATA_BEG=0x0A -D_IDATA_END=0xFF               #
#                            -D_CODE_BEG=0x3030 -D_CODE_END=0x7FFF             #
#                            -D_BANK1_BEG=0x18000 -D_BANK1_END=0x1FFFF         #
#                            -D_BANK2_BEG=0x28000 -D_BANK2_END=0x2FFFF         #
#                            -D_BANK3_BEG=0x38000 -D_BANK3_END=0x3FFFF         #
#                            -D_BANK4_BEG=0x48000 -D_BANK4_END=0x4DFFF         #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_BEG=0         #
#                            -D?PBANK_NUMBER=00 -D_BREG_BEG=0x00 -D?VB=0x20    #
#                            -Z(BIT)BREG=_BREG_BEG -Z(BIT)BIT_N=0-7F           #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_BEG            #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=_IDATA_BEG- #
#                            7F                                                #
#                            -Z(DATA)PSP,XSP=_IDATA_BEG-7F                     #
#                            -Z(DATA)DOVERLAY=_IDATA_BEG-7F                    #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=_IDATA_BEG-7F        #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=_IDATA_BEG-_IDAT #
#                            A_END                                             #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#_IDATA_BEG-_IDA #
#                            TA_END                                            #
#                            -Z(IDATA)IOVERLAY=_IDATA_BEG-FF                   #
#                            -Z(CODE)CHECKSUM=0x3000-0x3001                    #
#                            -Z(CODE)IMAGE_HEADER=0x3002-0x300F                #
#                            -Z(CODE)AES_HEADER=0x3010-0x302F                  #
#                            -Z(CODE)INTVEC=_CODE_BEG-_CODE_END                #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_BEG-_CODE_END           #
#                            -Z(CODE)CSTART,RCODE,DIFUNCT,NEAR_CODE=_CODE_BEG- #
#                            _CODE_END                                         #
#                            -Z(CODE)BANK_RELAYS=_CODE_BEG-_CODE_END           #
#                            -D_SLEEP_CODE_SPACE_START=(_CODE_END-7)           #
#                            -D_SLEEP_CODE_SPACE_END=(_CODE_END)               #
#                            -Z(CODE)SLEEP_CODE=_SLEEP_CODE_SPACE_START-_SLEEP #
#                            _CODE_SPACE_END                                   #
#                            -Z(CODE)CODE_C=_CODE_BEG-_CODE_END                #
#                            -P(CONST)XDATA_ROM_C=0x8000-0xFFFF                #
#                            -P(CODE)XDATA_ROM_C_FLASH=_BANK4_BEG-_BANK4_END   #
#                            -QXDATA_ROM_C=XDATA_ROM_C_FLASH                   #
#                            -Z(CODE)ALIGNED_CODE|2=_CODE_BEG-_CODE_END,_BANK1 #
#                            _BEG-_BANK1_END,_BANK2_BEG-_BANK2_END,_BANK3_BEG- #
#                            _BANK3_END,_BANK4_BEG-_BANK4_END                  #
#                            -P(CODE)BANKED_CODE=_CODE_BEG-_CODE_END,_BANK1_BE #
#                            G-_BANK1_END,_BANK2_BEG-_BANK2_END,_BANK3_BEG-_BA #
#                            NK3_END,_BANK4_BEG-_BANK4_END                     #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_BEG-_XDA #
#                            TA_END                                            #
#                            -Z(XDATA)XDATA_Z,XDATA_I,PDATA_Z=_XDATA_BEG-_XDAT #
#                            A_END                                             #
#                            -P(XDATA)XDATA_N=_XDATA_BEG-_XDATA_END -cx51      #
#                            -D_FIRST_BANK_ADDR=0x10000                        #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i -we18=i -HFFFF                            #
#                            -J2,crc=8005,=3004-_BANK4_END)                    #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?PBANK=0x93        #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read -rt                 #
#                            -Ointel-extended=C:\Users\Tom\Desktop\新我握力器\ #
#                            0827\Debug\Exe\BETWINE_APP.hex                    #
#                            -s __program_start                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.5\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51"  #
#                            -D_IDATA_STACK_SIZE=0xC0 -D?ESP=0 -D?ESP_MASK=0   #
#                            -D_EXTENDED_STACK_START=0                         #
#                            -D_EXTENDED_STACK_SIZE=0                          #
#                            -D_PDATA_STACK_SIZE=0x00                          #
#                            -D_XDATA_STACK_SIZE=0x280                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF                          #
#                                                                              #
#                           Copyright (C) 1987-2013 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000035E3  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = CLib
  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000280 
           _PDATA_STACK_SIZE       00000000 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           ?ESP_MASK               00000000 
           ?ESP                    00000000 
           _IDATA_STACK_SIZE       000000C0 
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _FIRST_BANK_ADDR        00010000 
           _SLEEP_CODE_SPACE_END   00007FFF 
           _SLEEP_CODE_SPACE_START
                                   00007FF8 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_BEG               00000000 
           ?PBANK_NUMBER           00000000 
           _REGISTER_BANK_BEG      00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _BANK4_END              00025FFF 
           _BANK4_BEG              00020000 
           _BANK3_END              0001FFFF 
           _BANK3_BEG              00018000 
           _BANK2_END              00017FFF 
           _BANK2_BEG              00010000 
           _BANK1_END              0000FFFF 
           _BANK1_BEG              00008000 
           _CODE_END               00007FFF 
           _CODE_BEG               00003030 
           _IDATA_END              000000FF 
           _IDATA_BEG              0000000A 
           _XDATA_END              00001EFF 
           _XDATA_BEG              00000000 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?CBANK_MASK             000000FF 
           _CODEBANK_START         00008000 
           _CODEBANK_END           0000FFFF 
           _NR_OF_BANKS            00000007 
    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\lib\CC2541_BLE_peri.lib
  LIBRARY MODULE, NAME : att_server

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000207FD - 00020813 (0x17 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp            000207FD 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020814 - 00020842 (0x2f bytes), align: 0
  Segment part 8.             Intra module refs:   ATT_ExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp      00020814 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020843 - 0002087B (0x39 bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_FindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp         00020843 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002087C - 000208A3 (0x28 bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_FindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp
                                   0002087C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000208A4 - 000208CB (0x28 bytes), align: 0
  Segment part 14.            Intra module refs:   ATT_ReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp       000208A4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000208CC - 000208D1 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000208D2 - 000208E8 (0x17 bytes), align: 0
  Segment part 17.            Intra module refs:   ATT_ReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp             000208D2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000208E9 - 000208FF (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_ReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp         000208E9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020900 - 00020915 (0x16 bytes), align: 0
  Segment part 21.            Intra module refs:   ATT_ReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp        00020900 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020916 - 0002093C (0x27 bytes), align: 0
  Segment part 23.            Intra module refs:   ATT_ReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp    00020916 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002093D - 0002094F (0x13 bytes), align: 0
  Segment part 25.            Intra module refs:   ATT_WriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp            0002093D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020950 - 00020965 (0x16 bytes), align: 0
  Segment part 27.            Intra module refs:   ATT_PrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp     00020950 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020966 - 00020978 (0x13 bytes), align: 0
  Segment part 29.            Intra module refs:   ATT_ExecuteWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp     00020966 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020979 - 00020988 (0x10 bytes), align: 0
  Segment part 31.            Intra module refs:   ATT_HandleValueNoti::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti     00020979 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020989 - 0002098E (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_HandleValueInd
                                                   ATT_HandleValueNoti
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002098F - 00020992 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_ExecuteWriteRsp
                                                   ATT_WriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020993 - 00020998 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_ErrorRsp
                                                   ATT_PrepareWriteRsp
                                                   ATT_ReadBlobRsp
                                                   ATT_ReadMultiRsp
                                                   ATT_ReadRsp
                                                   Segment part 33
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020999 - 0002099D (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002099E - 000209AF (0x12 bytes), align: 0
  Segment part 37.            Intra module refs:   ATT_HandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd      0002099E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048BF - 000048C4 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp::?relay    000048BF        gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048C5 - 000048CA (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp::?relay
                                   000048C5        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048CB - 000048D0 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp::?relay
                                   000048CB        gattProcessFindInfoReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048D1 - 000048D6 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp::?relay
                                   000048D1        gattServApp_ProcessFindByTypeValueReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048D7 - 000048DC (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp::?relay
                                   000048D7        gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048DD - 000048E2 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp::?relay     000048DD        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048E3 - 000048E8 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp::?relay
                                   000048E3        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048E9 - 000048EE (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp::?relay
                                   000048E9        gattServApp_ProcessReadMultiReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048EF - 000048F4 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp::?relay
                                   000048EF        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048F5 - 000048FA (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp::?relay    000048F5        gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000048FB - 00004900 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp::?relay
                                   000048FB        gattServApp_ProcessPrepareWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004901 - 00004906 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp::?relay
                                   00004901        gattServApp_ProcessExecuteWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004907 - 0000490C (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti::?relay
                                   00004907        GATT_Notification (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000490D - 00004912 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd::?relay
                                   0000490D        GATT_Indication (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : att_util

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080D9 - 000080E8 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ConvertUUIDto128
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btBaseUUID              000080D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018000 - 000180F9 (0xfa bytes), align: 0
  Segment part 7.             Intra module refs:   ATT_ParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket         00018000 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000180FA - 000180FE (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000180FF - 00018128 (0x2a bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_BuildErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp       000180FF 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseErrorRsp       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTUReq
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018129 - 00018133 (0xb bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_BuildExchangeMTURsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018134 - 00018154 (0x21 bytes), align: 0
  Segment part 17.            Intra module refs:   ATT_ParseExchangeMTUReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq
                                   00018134 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018155 - 00018156 (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_BuildExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp
                                   00018155 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018157 - 00018158 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018159 - 0001815F (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   Segment part 22
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTURsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018160 - 00018164 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoReq    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018165 - 00018185 (0x21 bytes), align: 0
  Segment part 29.            Intra module refs:   ATT_ParseFindInfoReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq    00018165 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018186 - 00018237 (0xb2 bytes), align: 0
  Segment part 31.            Intra module refs:   ATT_BuildFindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp    00018186 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018238 - 00018245 (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018246 - 00018261 (0x1c bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018262 - 00018262 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018263 - 00018266 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018267 - 0001826E (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   ATT_BuildFindByTypeValueRsp
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001826F - 0001826F (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018270 - 00018277 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018278 - 0001827E (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 34
                                                   Segment part 39
                                                   Segment part 47
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoRsp    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001827F - 00018288 (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018289 - 00018291 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018292 - 00018356 (0xc5 bytes), align: 0
  Segment part 48.            Intra module refs:   ATT_ParseFindByTypeValueReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq
                                   00018292 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018357 - 0001835E (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001835F - 000183B5 (0x57 bytes), align: 0
  Segment part 51.            Intra module refs:   ATT_BuildFindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp
                                   0001835F 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183B6 - 000183BA (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183BB - 000183C2 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183C3 - 000183C7 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183C8 - 000183CC (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183CD - 000183D1 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseWriteReq
                                                   Segment part 58
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000183D2 - 0001844E (0x7d bytes), align: 0
  Segment part 62.            Intra module refs:   ATT_ParseReadByTypeReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq
                                   000183D2 
               calls direct
               XSTACK = 00000004 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001844F - 00018457 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018458, align: 0
  Segment part 65.            Intra module refs:   ATT_BuildReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp
                                   00018458 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018458 - 00018490 (0x39 bytes), align: 0
  Segment part 67.            Intra module refs:   ATT_BuildReadByGrpTypeRsp
                                                   ATT_BuildReadByTypeRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018491 - 00018492 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018493 - 0001849A (0x8 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   Segment part 84
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 72. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadReq        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001849B - 000184BC (0x22 bytes), align: 0
  Segment part 74.            Intra module refs:   ATT_ParseReadReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq        0001849B 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184BD - 000184C3 (0x7 bytes), align: 0
  Segment part 76.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184C4 - 000184CB (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184CC - 000184D1 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184D2, align: 0
  Segment part 79.            Intra module refs:   ATT_BuildReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp        000184D2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184D2 - 000184F8 (0x27 bytes), align: 0
  Segment part 81.            Intra module refs:   ATT_BuildReadBlobRsp
                                                   ATT_BuildReadMultiRsp
                                                   ATT_BuildReadRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadRsp        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000184F9 - 0001851E (0x26 bytes), align: 0
  Segment part 84.            Intra module refs:   ATT_BuildPrepareWriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001851F - 00018523 (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 67
                                                   Segment part 84
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018524 - 00018528 (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   Segment part 81
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018529 - 0001852C (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001852D - 0001853A (0xe bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001853B - 00018548 (0xe bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018549 - 00018557 (0xf bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 54
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018558 - 000185D2 (0x7b bytes), align: 0
  Segment part 91.            Intra module refs:   ATT_ParseWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq       00018558 
               calls direct
               XSTACK = 00000004 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000185D3 - 000185D5 (0x3 bytes), align: 0
  Segment part 93.            Intra module refs:   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000185D6 - 000185DA (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   ATT_ConvertUUIDto128
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000185DB - 000185E0 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   ATT_ParsePacket
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildWriteReq       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000185E1 - 00018609 (0x29 bytes), align: 0
  Segment part 98.            Intra module refs:   ATT_BuildHandleValueInd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001860A - 0001860D (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 16
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001860E - 00018621 (0x14 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 89
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018622 - 00018622 (0x1 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018623 - 00018629 (0x7 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 100
                                                   Segment part 101
                                                   Segment part 159
                                                   Segment part 90
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteRsp       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobReq    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001862A - 0001864B (0x22 bytes), align: 0
  Segment part 107.           Intra module refs:   ATT_ParseReadBlobReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq    0001862A 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001864C - 00018652 (0x7 bytes), align: 0
  Segment part 109.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018653 - 00018674 (0x22 bytes), align: 0
  Segment part 110.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018675 - 00018687 (0x13 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 110
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018688 - 0001868A (0x3 bytes), align: 0
  Segment part 112.           Intra module refs:   ATT_BuildReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp    00018688 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobRsp    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 116. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiReq   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001868B - 0001869F (0x15 bytes), align: 0
  Segment part 118.           Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000186A0 - 0001870F (0x70 bytes), align: 0
  Segment part 119.           Intra module refs:   ATT_ParseReadMultiReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq   000186A0 
               XSTACK = 00000004 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018710 - 00018713 (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   ATT_ParseExecuteWriteReq
                                                   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018714 - 00018719 (0x6 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 109
                                                   Segment part 121
                                                   Segment part 178
                                                   Segment part 57
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001871A - 0001871C (0x3 bytes), align: 0
  Segment part 123.           Intra module refs:   ATT_BuildReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp   0001871A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 125. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiRsp   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 127. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001871D - 0001871F (0x3 bytes), align: 0
  Segment part 128.           Intra module refs:   ATT_BuildReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp
                                   0001871D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 130. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByGrpTypeRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 132. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 133. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 134. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018720 - 0001877F (0x60 bytes), align: 0
  Segment part 136.           Intra module refs:   ATT_ParsePrepareWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq
                                   00018720 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018780 - 0001878C (0xd bytes), align: 0
  Segment part 138.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001878D - 00018793 (0x7 bytes), align: 0
  Segment part 139.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018794 - 00018795 (0x2 bytes), align: 0
  Segment part 140.           Intra module refs:   Segment part 139
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018796 - 00018796 (0x1 bytes), align: 0
  Segment part 141.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   Segment part 140
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018797 - 0001879C (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   Segment part 141
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001879D - 000187A6 (0xa bytes), align: 0
  Segment part 143.           Intra module refs:   ATT_ParseReadMultiReq
                                                   Segment part 139
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187A7 - 000187A7 (0x1 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 142
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187A8 - 000187AD (0x6 bytes), align: 0
  Segment part 145.           Intra module refs:   Segment part 144
                                                   Segment part 186
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187AE - 000187BE (0x11 bytes), align: 0
  Segment part 146.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187BF - 000187C6 (0x8 bytes), align: 0
  Segment part 147.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187C7 - 000187C9 (0x3 bytes), align: 0
  Segment part 148.           Intra module refs:   ATT_BuildPrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp
                                   000187C7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 150. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187CA - 000187D2 (0x9 bytes), align: 0
  Segment part 152.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExecuteWriteReq
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187D3 - 000187D6 (0x4 bytes), align: 0
  Segment part 157.           Intra module refs:   ATT_BuildErrorRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187D7 - 000187DA (0x4 bytes), align: 0
  Segment part 158.           Intra module refs:   ATT_BuildErrorRsp
                                                   Segment part 157
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187DB - 000187DE (0x4 bytes), align: 0
  Segment part 159.           Intra module refs:   Segment part 118
                                                   Segment part 158
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000187DF - 0001880E (0x30 bytes), align: 0
  Segment part 160.           Intra module refs:   ATT_ParseExecuteWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq
                                   000187DF 
               XSTACK = 00000004 ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001880F - 00018811 (0x3 bytes), align: 0
  Segment part 164.           Intra module refs:   ATT_BuildHandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd
                                   0001880F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueInd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018812 - 0001881E (0xd bytes), align: 0
  Segment part 168.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001881F - 00018823 (0x5 bytes), align: 0
  Segment part 169.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018824 - 0001882E (0xb bytes), align: 0
  Segment part 170.           Intra module refs:   Segment part 169
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueCfm
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001882F - 00018917 (0xe9 bytes), align: 0
  Segment part 173.           Intra module refs:   attSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg              0001882F 
               calls direct
               XSTACK = 00000002 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018918 - 0001891C (0x5 bytes), align: 0
  Segment part 175.           Intra module refs:   ATT_BuildFindInfoRsp
                                                   attSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001891D - 000189CB (0xaf bytes), align: 0
  Segment part 176.           Intra module refs:   ATT_CompareUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID         0001891D 
               calls direct
               XSTACK = 00000004 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000189CC - 000189D2 (0x7 bytes), align: 0
  Segment part 178.           Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000189D3 - 00018A30 (0x5e bytes), align: 0
  Segment part 179.           Intra module refs:   ATT_ConvertUUIDto128::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128    000189D3 
               calls direct
               XSTACK = 0000001C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A31 - 00018A39 (0x9 bytes), align: 0
  Segment part 181.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto16     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 184. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A3A - 00018A3D (0x4 bytes), align: 0
  Segment part 186.           Intra module refs:   ATT_ConvertUUIDto128
                                                   Segment part 81
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_SetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_GetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004913 - 00004918 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket::?relay
                                   00004913        gattProcessRxData (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004919 - 0000491E (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp::?relay
                                   00004919        ATT_ErrorRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseErrorRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTUReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000491F - 00004924 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq::?relay
                                   0000491F        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004925 - 0000492A (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp::?relay
                                   00004925        ATT_ExchangeMTURsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTURsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000492B - 00004930 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq::?relay
                                   0000492B        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004931 - 00004936 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp::?relay
                                   00004931        ATT_FindInfoRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004937 - 0000493C (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq::?relay
                                   00004937        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000493D - 00004942 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp::?relay
                                   0000493D        ATT_FindByTypeValueRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004943 - 00004948 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq::?relay
                                   00004943        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004949 - 0000494E (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp::?relay
                                   00004949        ATT_ReadByTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 73. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000494F - 00004954 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq::?relay
                                   0000494F        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004955 - 0000495A (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp::?relay
                                   00004955        ATT_ReadRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000495B - 00004960 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq::?relay
                                   0000495B        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004961 - 00004966 (0x6 bytes), align: 0
  Segment part 108.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq::?relay
                                   00004961        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004967 - 0000496C (0x6 bytes), align: 0
  Segment part 113.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp::?relay
                                   00004967        ATT_ReadBlobRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 115. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000496D - 00004972 (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq::?relay
                                   0000496D        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004973 - 00004978 (0x6 bytes), align: 0
  Segment part 124.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp::?relay
                                   00004973        ATT_ReadMultiRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 126. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004979 - 0000497E (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp::?relay
                                   00004979        ATT_ReadByGrpTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByGrpTypeRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 135. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000497F - 00004984 (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq::?relay
                                   0000497F        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004985 - 0000498A (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp::?relay
                                   00004985        ATT_PrepareWriteRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 151. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 156. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExecuteWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000498B - 00004990 (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq::?relay
                                   0000498B        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004991 - 00004996 (0x6 bytes), align: 0
  Segment part 165.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd::?relay
                                   00004991        Segment part 33 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueInd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueCfm::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004997 - 0000499C (0x6 bytes), align: 0
  Segment part 174.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg::?relay      00004997        Segment part 16 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000499D - 000049A2 (0x6 bytes), align: 0
  Segment part 177.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID::?relay
                                   0000499D        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 39 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049A3 - 000049A8 (0x6 bytes), align: 0
  Segment part 180.           Intra module refs:   ATT_CompareUUID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128::?relay
                                   000049A3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto16::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200D9 - 000200E8 (0x10 bytes), align: 0
  Segment part 192.           Intra module refs:   btBaseUUID

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_configmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000A48 - 00000A48 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_ParamsInit
                                                   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAppTaskID            00000A48        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000280 - 00000280 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ParamsInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProfileRole          00000280        GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000281 - 00000281 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeviceAddrMode       00000281        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000282 - 00000283 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPrivateAddrChangeTimeout
                                   00000282        GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000284 - 00000284 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAutoAdvPrivateAddrChange
                                   00000284        GAP_ProcessEvent (gap_task)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000285 - 00000294 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   Segment part 58
                                                   gapGetDevAddress
                                                   gapGetIRK
                                                   gapGetSRK
                                                   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A49 - 00000A94 (0x4c bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000295 - 0000029A (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   gapGetDevAddress
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C48A - 0001C4B1 (0x28 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_SetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue       0001C48A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4B2 - 0001C4CD (0x1c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_GetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue       0001C4B2 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4CE - 0001C4DF (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4E0 - 0001C511 (0x32 bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_ParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit          0001C4E0 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C512 - 0001C516 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C517 - 0001C571 (0x5b bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_SecParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit       0001C517 
               calls direct
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C572 - 0001C578 (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   GAP_SecParamsInit
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ConfigDeviceAddr    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C579 - 0001C57E (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAP_GetParamValue
                                                   Segment part 28
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C57F - 0001C5C2 (0x44 bytes), align: 0
  Segment part 32.            Intra module refs:   gapReadBD_ADDRStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus    0001C57F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5C3 - 0001C5C7 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5C8 - 0001C612 (0x4b bytes), align: 0
  Segment part 35.            Intra module refs:   gapReadBufSizeCmdStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus
                                   0001C5C8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C613 - 0001C650 (0x3e bytes), align: 0
  Segment part 37.            Intra module refs:   gapProcessNewAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr       0001C613 
               calls direct
               XSTACK = 00000014 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C651 - 0001C683 (0x33 bytes), align: 0
  Segment part 39.            Intra module refs:   gapAddAddrAdj::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj           0001C651 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C684 - 0001C686 (0x3 bytes), align: 0
  Segment part 41.            Intra module refs:   gapGetIRK
                                                   gapGetSRK
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C687 - 0001C68D (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
                                                   Segment part 41
                                                   gapAddAddrAdj
                                                   gapDetermineAddrType
                                                   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapGetSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C68E - 0001C6BB (0x2e bytes), align: 0
  Segment part 43.            Intra module refs:   gapDetermineAddrType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType    0001C68E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C6BC - 0001C744 (0x89 bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessRandomAddrComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete
                                   0001C6BC 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C745 - 0001C749 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C74A - 0001C74A (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C74B - 0001C750 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_SecParamsInit
                                                   Segment part 48
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C751 - 0001C75A (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C75B - 0001C762 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C763 - 0001C76C (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   gapGetSRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK               0001C763 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C76D - 0001C779 (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   gapGetSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter       0001C76D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C77A - 0001C7A0 (0x27 bytes), align: 0
  Segment part 56.            Intra module refs:   gapIncSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter       0001C77A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7A1 - 0001C7AC (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   gapGetSignCounter
                                                   gapIncSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7AD - 0001C86E (0xc2 bytes), align: 0
  Segment part 59.            Intra module refs:   gapUpdateConnSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter
                                   0001C7AD 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C86F - 0001C87A (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   gapGetDevAddressMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode    0001C86F 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C87B - 0001C892 (0x18 bytes), align: 0
  Segment part 63.            Intra module refs:   gapGetDevAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress        0001C87B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C893 - 0001C89C (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   gapGetIRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK               0001C893 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C89D - 0001C90A (0x6e bytes), align: 0
  Segment part 67.            Intra module refs:   gapSendDeviceInitDoneEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent
                                   0001C89D 
               calls direct
               XSTACK = 0000000A ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C90B - 0001C91A (0x10 bytes), align: 0
  Segment part 69.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendSlaveSecurityReqEvent
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C91B - 0001C91E (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C91F - 0001C91F (0x1 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C920 - 0001C922 (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C923 - 0001C928 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C929 - 0001C931 (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000030B7 - 000030B7 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   gapAppTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000030B8 - 00003103 (0x4c bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049A9 - 000049AE (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue::?relay
                                   000049A9        Betwine_Init (betwine)
                                                   GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049AF - 000049B4 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapUpdateConnSignCounter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue::?relay
                                   000049AF        GAPRole_GetParameter (peripheral)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   SM_StartPairing (sm_pairing)
                                                   Segment part 40 (gap_peridevmgr)
                                                   Segment part 46 (gap_peridevmgr)
                                                   Segment part 88 (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   smStartRspTimer (sm_mgr)
                                                   smpParsePairingReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049B5 - 000049BA (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit::?relay
                                   000049B5        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049BB - 000049C0 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit::?relay
                                   000049BB        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ConfigDeviceAddr::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049C1 - 000049C6 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus::?relay
                                   000049C1        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049C7 - 000049CC (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus::?relay
                                   000049C7        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049CD - 000049D2 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr::?relay
                                   000049CD        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049D3 - 000049D8 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   gapProcessNewAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj::?relay   000049D3        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049D9 - 000049DE (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType::?relay
                                   000049D9        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049DF - 000049E4 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete::?relay
                                   000049DF        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049E5 - 000049EA (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK::?relay       000049E5        SM_GenerateAuthenSig (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049EB - 000049F0 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter::?relay
                                   000049EB        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049F1 - 000049F6 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter::?relay
                                   000049F1        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049F7 - 000049FC (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter::?relay
                                   000049F7        SM_VerifyAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000049FD - 00004A02 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode::?relay
                                   000049FD        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A03 - 00004A08 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress::?relay
                                   00004A03        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A09 - 00004A0E (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK::?relay       00004A09        GAP_ProcessEvent (gap_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A0F - 00004A14 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent::?relay
                                   00004A0F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendSlaveSecurityReqEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 78. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_devmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapDiscReq             
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000029B - 0000029C (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gapIsAdvertising
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapAdvertState         0000029B        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 41 (gap_peridevmgr)
                                                   Segment part 48 (gap_peridevmgr)
                                                   Segment part 87 (gap_peridevmgr)
                                                   Segment part 99 (gap_peridevmgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017F0D - 00017F13 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ResolvePrivateAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr
                                   00017F0D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017F14 - 00017F1A (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ResolvePrivateAddr
                                                   gapIsAdvertising
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017F1B - 00017F32 (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   gapIsAdvertising::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising        00017F1B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsScanning           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017F33 - 00017F4A (0x18 bytes), align: 0
  Segment part 15.            Intra module refs:   gapValidADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType          00017F33 
               XSTACK = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017F4B - 00017FE3 (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   gapFindADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType           00017F4B 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A15 - 00004A1A (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr::?relay
                                   00004A15        GAPBondMgr_ResolveAddr (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A1B - 00004A20 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising::?relay
                                   00004A1B        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsScanning::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A21 - 00004A26 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   gapFindADType
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType::?relay
                                   00004A21 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A27 - 00004A2C (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType::?relay   00004A27        isLimitedDiscoverableMode (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_linkmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000029D - 0000029E (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEstLink                0000029D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000029F - 000002A0 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_Authenticate
                                                   Segment part 102
                                                   Segment part 108
                                                   Segment part 111
                                                   Segment part 25
                                                   Segment part 49
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAuthLink               0000029F        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A1 - 000002A2 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_TerminateLinkReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnCentralConnCBs       000002A1        gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A3 - 000002A3 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010000 - 00010085 (0x86 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_TerminateLinkReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq    00010000 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010086 - 0001008A (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_TerminateAuth
                                                   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001008B - 0001008F (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010090 - 0001009D (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001009E - 0001010C (0x6f bytes), align: 0
  Segment part 19.            Intra module refs:   GAP_Signable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable            0001009E 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001010D - 0001010F (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   gapPairingCompleteCB
                                                   gapPasskeyNeededCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010110 - 00010115 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 21
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010116 - 00010212 (0xfd bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_Authenticate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate        00010116 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010213 - 00010218 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_Authenticate
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010219 - 0001021E (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001021F - 00010224 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010225 - 0001022A (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001022B - 00010264 (0x3a bytes), align: 0
  Segment part 29.            Intra module refs:   GAP_TerminateAuth::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth       0001022B 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasskeyUpdate       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010265 - 00010308 (0xa4 bytes), align: 0
  Segment part 33.            Intra module refs:   GAP_PasscodeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate      00010265 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010309 - 0001030D (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_Bond
                                                   GAP_PasscodeUpdate
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001030E - 000103E2 (0xd5 bytes), align: 0
  Segment part 36.            Intra module refs:   GAP_Bond::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond                0001030E 
               calls direct
               XSTACK = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000103E3 - 00010537 (0x155 bytes), align: 0
  Segment part 38.            Intra module refs:   gapProcessConnectionCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt
                                   000103E3 
               calls direct
               XSTACK = 00000000 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010538 - 0001053B (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001053C - 00010540 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_Bond
                                                   Segment part 40
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010541 - 00010546 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_Bond
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010547 - 0001059D (0x57 bytes), align: 0
  Segment part 43.            Intra module refs:   gapProcessConnUpdateCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt
                                   00010547 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001059E - 0001060D (0x70 bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessDisconnectCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt
                                   0001059E 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001060E - 00010612 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   gapProcessDisconnectCompleteEvt
                                                   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010613 - 00010619 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001061A - 0001061C (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_Authenticate
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001061D - 00010624 (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   GAP_TerminateLinkReq
                                                   Segment part 49
                                                   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010625 - 000106FB (0xd7 bytes), align: 0
  Segment part 51.            Intra module refs:   sendEstLinkEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent        00010625 
               calls direct
               XSTACK = 00000020 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000106FC - 00010700 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010701 - 0001070B (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   GAP_Signable
                                                   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001070C - 0001074F (0x44 bytes), align: 0
  Segment part 55.            Intra module refs:   sendTerminateEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent      0001070C 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010750 - 00010758 (0x9 bytes), align: 0
  Segment part 57.            Intra module refs:   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010759 - 000107CA (0x72 bytes), align: 0
  Segment part 58.            Intra module refs:   gapSendLinkUpdateEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent
                                   00010759 
               calls direct
               XSTACK = 0000000D ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000107CB - 000107DA (0x10 bytes), align: 0
  Segment part 60.            Intra module refs:   gapSendLinkUpdateEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000107DB - 000107E6 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapSendLinkUpdateEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000107E7 - 0001080A (0x24 bytes), align: 0
  Segment part 62.            Intra module refs:   disconnectNext::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext          000107E7 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001080B - 00010983 (0x179 bytes), align: 0
  Segment part 64.            Intra module refs:   sendAuthEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent           0001080B 
               calls direct
               XSTACK = 0000001A ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010984 - 00010988 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010989 - 0001098D (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001098E - 00010997 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010998 - 0001099D (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001099E - 000109B3 (0x16 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109B4 - 000109B9 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109BA - 000109BD (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   disconnectNext
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109BE - 000109C3 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 106
                                                   Segment part 48
                                                   Segment part 72
                                                   Segment part 75
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109C4 - 000109CB (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   gapPairingCompleteCB
                                                   gapSendLinkUpdateEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109CC - 000109DF (0x14 bytes), align: 0
  Segment part 75.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000109E0 - 00010A19 (0x3a bytes), align: 0
  Segment part 76.            Intra module refs:   gapFreeAuthLink::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink         000109E0 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010A1A - 00010A20 (0x7 bytes), align: 0
  Segment part 78.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010A21 - 00010A3B (0x1b bytes), align: 0
  Segment part 79.            Intra module refs:   gapFreeEstLink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink          00010A21 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010A3C - 00010A42 (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010A43 - 00010AAE (0x6c bytes), align: 0
  Segment part 82.            Intra module refs:   gapSendBondCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent
                                   00010A43 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010AAF - 00010AB9 (0xb bytes), align: 0
  Segment part 84.            Intra module refs:   GAP_Signable
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010ABA - 00010AC3 (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010AC4 - 00010B69 (0xa6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSendPairingReqEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent
                                   00010AC4 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B6A - 00010B78 (0xf bytes), align: 0
  Segment part 88.            Intra module refs:   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B79 - 00010B80 (0x8 bytes), align: 0
  Segment part 89.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B81 - 00010B84 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   gapSendPairingReqEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B85 - 00010B88 (0x4 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 90
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B89 - 00010B91 (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 91
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B92 - 00010B96 (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010B97 - 00010BA0 (0xa bytes), align: 0
  Segment part 94.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010BA1 - 00010BA6 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010BA7 - 00010BAD (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 94
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010BAE - 00010C67 (0xba bytes), align: 0
  Segment part 97.            Intra module refs:   gapPasskeyNeededCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB      00010BAE 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010C68 - 00010C73 (0xc bytes), align: 0
  Segment part 99.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010C74 - 00010E48 (0x1d5 bytes), align: 0
  Segment part 100.           Intra module refs:   gapPairingCompleteCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB    00010C74 
               calls direct
               XSTACK = 00000008 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E49 - 00010E56 (0xe bytes), align: 0
  Segment part 102.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E57 - 00010E59 (0x3 bytes), align: 0
  Segment part 103.           Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E5A - 00010E5E (0x5 bytes), align: 0
  Segment part 104.           Intra module refs:   GAP_Bond
                                                   GAP_Signable
                                                   Segment part 103
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E5F - 00010E64 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E65 - 00010E6A (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GAP_Bond
                                                   Segment part 105
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E6B - 00010E7C (0x12 bytes), align: 0
  Segment part 107.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E7D - 00010E82 (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E83 - 00010E8C (0xa bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E8D - 00010E98 (0xc bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 112
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E99 - 00010E9E (0x6 bytes), align: 0
  Segment part 111.           Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010E9F - 00010EA8 (0xa bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 111
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentralConn
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008233 - 00008236 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   LL_TimeToNextRfEvent (ll_sleep)
                                                   llAllocConnId (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            00008233 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000822F - 00008232 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            0000822F 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from gapbondmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A2D - 00004A32 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq::?relay
                                   00004A2D        GAPRole_TerminateConnection (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A33 - 00004A38 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable::?relay    00004A33        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A39 - 00004A3E (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate::?relay
                                   00004A39        gapBondMgrAuthenticate (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A3F - 00004A44 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth::?relay
                                   00004A3F        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasskeyUpdate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A45 - 00004A4A (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate::?relay
                                   00004A45        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A4B - 00004A50 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond::?relay        00004A4B        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A51 - 00004A56 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt::?relay
                                   00004A51        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A57 - 00004A5C (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt::?relay
                                   00004A57        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A5D - 00004A62 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt::?relay
                                   00004A5D        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A63 - 00004A68 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent::?relay
                                   00004A63 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A69 - 00004A6E (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent::?relay
                                   00004A69 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A6F - 00004A74 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   gapProcessConnUpdateCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent::?relay
                                   00004A6F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A75 - 00004A7A (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext::?relay
                                   00004A75 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A7B - 00004A80 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   gapPairingCompleteCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent::?relay   00004A7B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A81 - 00004A86 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink::?relay
                                   00004A81 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A87 - 00004A8C (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink::?relay
                                   00004A87 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A8D - 00004A92 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent::?relay
                                   00004A8D        smProcessEncryptChange (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A93 - 00004A98 (0x6 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent::?relay
                                   00004A93        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A99 - 00004A9E (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB::?relay
                                   00004A99        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004A9F - 00004AA4 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB::?relay
                                   00004A9F        smEndPairing (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentralConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020233 - 00020236 (0x4 bytes), align: 0
  Segment part 115.           Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 116. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002022F - 00020232 (0x4 bytes), align: 0
  Segment part 117.           Intra module refs:   __Constant_a
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 118. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_peridevmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000A95 - 00000A95 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_UpdateAdvertisingData
                                                   gapWriteAdvDataStatus
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A4 - 000002A5 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 35
                                                   Segment part 76
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A6 - 000002A7 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 75
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A8 - 000002A9 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 58
                                                   gapProcessAdvertisingEvt
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A96 - 00000A9B (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A9F6 - 0001AAC7 (0xd2 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable    0001A9F6 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAC8 - 0001AB70 (0xa9 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_UpdateAdvertisingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData
                                   0001AAC8 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB71 - 0001ABAC (0x3c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_EndDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable     0001AB71 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetAdvToken         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetAdvToken         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RemoveAdvToken      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvTokens     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABAD - 0001ABB3 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABB4 - 0001AC2D (0x7a bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_PeriDevMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit      0001ABB4 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC2E - 0001AC32 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC33 - 0001AC40 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC41 - 0001ACCC (0x8c bytes), align: 0
  Segment part 36.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt
                                   0001AC41 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACCD - 0001AD92 (0xc6 bytes), align: 0
  Segment part 38.            Intra module refs:   gapSetAdvParams::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams         0001ACCD 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD93 - 0001ADA0 (0xe bytes), align: 0
  Segment part 40.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADA1 - 0001ADAD (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADAE - 0001ADDC (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   gapSetAdvParamsStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus   0001ADAE 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADDD - 0001AEB7 (0xdb bytes), align: 0
  Segment part 44.            Intra module refs:   gapWriteAdvEnableStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus
                                   0001ADDD 
               calls direct
               XSTACK = 0000000A ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AEB8 - 0001AEC6 (0xf bytes), align: 0
  Segment part 46.            Intra module refs:   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AEC7 - 0001AEC7 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AEC8 - 0001AECD (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AECE - 0001AED2 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AED3 - 0001AED8 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 41
                                                   Segment part 49
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AED9 - 0001AF13 (0x3b bytes), align: 0
  Segment part 51.            Intra module refs:   gapWriteAdvDataStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus   0001AED9 
               calls direct
               XSTACK = 0000000A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF14 - 0001AF18 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
                                                   gapWriteAdvDataStatus
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF19 - 0001AF20 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvDataStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF21 - 0001AFBE (0x9e bytes), align: 0
  Segment part 55.            Intra module refs:   gapProcessAdvertisingEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt
                                   0001AF21 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFBF - 0001AFC6 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   GAP_EndDiscoverable
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFC7 - 0001AFD6 (0x10 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAdvToken          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFD7 - 0001AFDB (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeleteAdvToken       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFDC - 0001AFE4 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindAdvToken         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 68. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapCalcAdvTokenDataLen
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapBuildADTokens        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFE5 - 0001AFEA (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 100
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFEB - 0001AFF3 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFF4 - 0001B003 (0x10 bytes), align: 0
  Segment part 75.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B004 - 0001B013 (0x10 bytes), align: 0
  Segment part 76.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 78. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B014 - 0001B017 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B018 - 0001B022 (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B023 - 0001B05B (0x39 bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendMakeDiscEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent    0001B023 
               calls direct
               XSTACK = 00000014 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B05C - 0001B066 (0xb bytes), align: 0
  Segment part 87.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B067 - 0001B07F (0x19 bytes), align: 0
  Segment part 88.            Intra module refs:   gapFreeAdvertState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState      0001B067 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B080 - 0001B083 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   GAP_PeriDevMgrInit
                                                   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B084 - 0001B08C (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 35
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B08D - 0001B0E8 (0x5c bytes), align: 0
  Segment part 92.            Intra module refs:   isLimitedDiscoverableMode::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode
                                   0001B08D 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0E9 - 0001B0EA (0x2 bytes), align: 0
  Segment part 94.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0EB - 0001B0ED (0x3 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0EE - 0001B0F2 (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 95
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0F3 - 0001B0F4 (0x2 bytes), align: 0
  Segment part 97.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0F5 - 0001B0F8 (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 97
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0F9 - 0001B0FB (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 98
                                                   gapFreeAdvertState
                                                   gapProcessAdvertisingEvt
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0FC - 0001B101 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 99
                                                   gapProcessAdvertisingEvt
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003104 - 00003104 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003105 - 0000310A (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000822B - 0000822E (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   gapWriteAdvEnableStatus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000822B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AA5 - 00004AAA (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable::?relay
                                   00004AA5        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AAB - 00004AB0 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData::?relay
                                   00004AAB        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AB1 - 00004AB6 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapProcessAdvertisingEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable::?relay
                                   00004AB1        GAPRole_SetParameter (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RemoveAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvTokens::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AB7 - 00004ABC (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit::?relay
                                   00004AB7        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ABD - 00004AC2 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt::?relay
                                   00004ABD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AC3 - 00004AC8 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams::?relay
                                   00004AC3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AC9 - 00004ACE (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus::?relay
                                   00004AC9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ACF - 00004AD4 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus::?relay
                                   00004ACF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AD5 - 00004ADA (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus::?relay
                                   00004AD5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ADB - 00004AE0 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt::?relay
                                   00004ADB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeleteAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 69. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapCalcAdvTokenDataLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapBuildADTokens::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AE1 - 00004AE6 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent::?relay
                                   00004AE1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AE7 - 00004AEC (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState::?relay
                                   00004AE7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AED - 00004AF2 (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode::?relay
                                   00004AED 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002022B - 0002022E (0x4 bytes), align: 0
  Segment part 102.           Intra module refs:   __Constant_3e8

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_perilinkmgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021269 - 000212F1 (0x89 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_SendSlaveSecurityRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest
                                   00021269 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AF3 - 00004AF8 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest::?relay
                                   00004AF3        GAPBondMgr_LinkEst (gapbondmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002AA - 000002AA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_Init
                                                   GAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapTaskID               000002AA        GAP_Authenticate (gap_linkmgr)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 58 (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A9C - 00000A9C (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_ProcessEvent
                                                   GAP_RegisterForHCIMsgs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUnwantedTaskID       00000A9C        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002AB - 000002AC (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapRegisterPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnPeripheralCBs        000002AB        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002AD - 000002AE (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA46 - 0001DA4F (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_RegisterForHCIMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs
                                   0001DA46 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA50 - 0001DA53 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   gapRegisterPeripheral
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA54 - 0001DA54 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_RegisterForHCIMsgs
                                                   Segment part 13
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA55 - 0001DA5B (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_NumActiveConnections
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA5C - 0001DA81 (0x26 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init                0001DA5C 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA82 - 0001DBA4 (0x123 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent        0001DA82 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBA5 - 0001DBA9 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBAA - 0001DBB3 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_NumActiveConnections::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections
                                   0001DBAA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBB4 - 0001DCF6 (0x143 bytes), align: 0
  Segment part 23.            Intra module refs:   gapProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg       0001DBB4 
               calls direct
               XSTACK = 00000012 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCF7 - 0001DCFB (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCFC - 0001DD03 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_ProcessEvent
                                                   Segment part 25
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD04 - 0001DD0C (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD0D - 0001DDDC (0xd0 bytes), align: 0
  Segment part 28.            Intra module refs:   gapProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt
                                   0001DD0D 
               calls direct
               XSTACK = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDDD - 0001DDED (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDEE - 0001DDF3 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 25
                                                   Segment part 27
                                                   Segment part 30
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDF4 - 0001DDFA (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DDFB - 0001DE02 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 27
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE03 - 0001DE0C (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentral      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE0D - 0001DE16 (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   gapRegisterPeripheral::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral   0001DE0D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000310B - 0000310B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   gapUnwantedTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AF9 - 00004AFE (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs::?relay
                                   00004AF9        GAPRole_Init (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004AFF - 00004B04 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init::?relay        00004AFF        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B05 - 00004B0A (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent::?relay
                                   00004B05        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B0B - 00004B10 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections::?relay
                                   00004B0B        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B11 - 00004B16 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg::?relay
                                   00004B11 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B17 - 00004B1C (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   gapProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt::?relay
                                   00004B17 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentral::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B1D - 00004B22 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral::?relay
                                   00004B1D        GAP_PeriDevMgrInit (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gapgattserver

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002AF - 000002B0 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 64
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008243 - 00008245 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A9D - 00000A9D (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002B1 - 000002C6 (0x16 bytes), align: 0
  Segment part 10.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A9E - 00000A9E (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002C7 - 000002C8 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A9F - 00000A9F (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002C9 - 000002C9 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AA0 - 00000AA0 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002CA - 000002CF (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AA1 - 00000AA1 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AA2 - 00000AA9 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AAA - 00000B01 (0x58 bytes), align: 0
  Segment part 24.            Intra module refs:   GGS_AddService
                                                   GGS_SetParameter
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008164 - 00008169 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   GGS_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceCBs           00008164 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B102 - 0001B236 (0x135 bytes), align: 0
  Segment part 27.            Intra module refs:   GGS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter        0001B102 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParameter        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B237 - 0001B25D (0x27 bytes), align: 0
  Segment part 35.            Intra module refs:   GGS_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService          0001B237 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B25E - 0001B262 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   GGS_AddService
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_DelService          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_RegisterAppCBs      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B263 - 0001B269 (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   ggs_SetAttrWPermit
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B26A - 0001B2B3 (0x4a bytes), align: 0
  Segment part 43.            Intra module refs:   ggs_SetAttrWPermit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit      0001B26A 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2B4 - 0001B42F (0x17c bytes), align: 0
  Segment part 45.            Intra module refs:   ggs_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB          0001B2B4 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B430 - 0001B434 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B435 - 0001B43A (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B43B - 0001B43E (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B43F - 0001B448 (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B449 - 0001B44E (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   GGS_SetParameter
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B44F - 0001B454 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B455 - 0001B45A (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B45B - 0001B463 (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 53
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B464 - 0001B464 (0x1 bytes), align: 0
  Segment part 55.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B465 - 0001B46A (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GGS_SetParameter
                                                   Segment part 55
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B46B - 0001B46B (0x1 bytes), align: 0
  Segment part 57.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B46C - 0001B471 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GGS_SetParameter
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B472 - 0001B5F4 (0x183 bytes), align: 0
  Segment part 59.            Intra module refs:   ggs_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB         0001B472 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5F5 - 0001B5FA (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5FB - 0001B5FF (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 61
                                                   Segment part 63
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B600 - 0001B608 (0x9 bytes), align: 0
  Segment part 63.            Intra module refs:   ggs_ReadAttrCB
                                                   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B609 - 0001B60C (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B60D - 0001B614 (0x8 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   ggs_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B615 - 0001B627 (0x13 bytes), align: 0
  Segment part 66.            Intra module refs:   ggs_WriteAttrCB
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000310C - 0000310C (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000310D - 0000310D (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000310E - 0000310E (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000310F - 0000310F (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003110 - 00003110 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003111 - 00003118 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003119 - 00003170 (0x58 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B23 - 00004B28 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter::?relay
                                   00004B23        Betwine_Init (betwine)
                                                   gapBondSetupPrivFlag (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B29 - 00004B2E (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService::?relay
                                   00004B29        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_DelService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_RegisterAppCBs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B2F - 00004B34 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GGS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit::?relay
                                   00004B2F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B35 - 00004B3A (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB::?relay
                                   00004B35 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B3B - 00004B40 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   gapServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB::?relay
                                   00004B3B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020243 - 00020245 (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020164 - 00020169 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   gapServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_server

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002D0 - 000002D7 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_InitServer
                                                   Segment part 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serverInfoTbl           000002D0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B02 - 00000B02 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATT_RegisterForReq
                                                   gattServerProcessMsgCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reqTaskId               00000B02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002D8 - 000002D9 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B03 - 00000B04 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008000 - 0000802F (0x30 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E476 - 0000E4D8 (0x63 bytes), align: 0
  Segment part 13.            Intra module refs:   GATT_InitServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer         0000E476 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E4D9 - 0000E603 (0x12b bytes), align: 0
  Segment part 15.            Intra module refs:   GATT_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService    0000E4D9 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E604 - 0000E612 (0xf bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E613 - 0000E61D (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   GATT_RegisterService
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_DeregisterService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E61E - 0000E626 (0x9 bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_RegisterForReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq     0000E61E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E627 - 0000E62D (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   GATT_RegisterForReq
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E62E - 0000E64B (0x1e bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_VerifyReadPermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions
                                   0000E62E 
               calls direct
               XSTACK = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E64C - 0000E650 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_VerifyReadPermissions
                                                   GATT_VerifyWritePermissions
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E651 - 0000E69B (0x4b bytes), align: 0
  Segment part 27.            Intra module refs:   GATT_VerifyWritePermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions
                                   0000E651 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E69C - 0000E73B (0xa0 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_ServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd
                                   0000E69C 
               calls direct
               XSTACK = 00000000 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E73C - 0000E740 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   GATT_ServiceChangedInd
                                                   gattProcessWriteReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E741 - 0000E836 (0xf6 bytes), align: 0
  Segment part 32.            Intra module refs:   GATT_FindHandleUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID     0000E741 
               calls direct
               XSTACK = 0000002C ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E837 - 0000E900 (0xca bytes), align: 0
  Segment part 34.            Intra module refs:   GATT_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle         0000E837 
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E901 - 0000EA6A (0x16a bytes), align: 0
  Segment part 36.            Intra module refs:   GATT_FindNextAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr       0000E901 
               calls direct
               XSTACK = 00000004 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA6B - 0000EA72 (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   GATT_FindNextAttr
                                                   GATT_RegisterService
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA73 - 0000EA78 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
                                                   GATT_RegisterService
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA79 - 0000EAB2 (0x3a bytes), align: 0
  Segment part 40.            Intra module refs:   GATT_ServiceNumAttrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs    0000EA79 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAB3 - 0000EABA (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   GATT_RegisterService
                                                   GATT_ServiceNumAttrs
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EABB - 0000EB58 (0x9e bytes), align: 0
  Segment part 43.            Intra module refs:   GATT_Indication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication         0000EABB 
               calls direct
               XSTACK = 00000024 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB59 - 0000EBA5 (0x4d bytes), align: 0
  Segment part 45.            Intra module refs:   GATT_Notification::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification       0000EB59 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBA6 - 0000EBCB (0x26 bytes), align: 0
  Segment part 47.            Intra module refs:   gattServiceLastHandle::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle   0000EBA6 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBCC - 0000EDB0 (0x1e5 bytes), align: 0
  Segment part 49.            Intra module refs:   gattServerProcessMsgCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB
                                   0000EBCC 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000031 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDB1 - 0000EDB9 (0x9 bytes), align: 0
  Segment part 51.            Intra module refs:   GATT_FindHandleUUID
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDBA, align: 0
  Segment part 52.            Intra module refs:   gattProcessExchangeMTUReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq
                                   0000EDBA 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDBA - 0000EDBE (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   gattProcessExchangeMTUReq
                                                   gattProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDBF - 0000EF73 (0x1b5 bytes), align: 0
  Segment part 55.            Intra module refs:   gattProcessFindInfoReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq
                                   0000EDBF 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF74 - 0000EF79 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF7A - 0000EF82 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   GATT_RegisterService
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF83 - 0000EF86 (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF87 - 0000EF8C (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   GATT_RegisterService
                                                   Segment part 59
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF8D - 0000EF9F (0x13 bytes), align: 0
  Segment part 61.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EFA0 - 0000EFE6 (0x47 bytes), align: 0
  Segment part 62.            Intra module refs:   gattProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq
                                   0000EFA0 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EFE7 - 0000EFEC (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EFED - 0000EFF3 (0x7 bytes), align: 0
  Segment part 65.            Intra module refs:   GATT_Indication
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000EFF4 - 0000F038 (0x45 bytes), align: 0
  Segment part 66.            Intra module refs:   gattProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq
                                   0000EFF4 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F039 - 0000F03D (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
                                                   gattGetServerStatus
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
                                                   gattProcessReadReq
                                                   gattServiceLastHandle
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F03E - 0000F055 (0x18 bytes), align: 0
  Segment part 69.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F056 - 0000F07D (0x28 bytes), align: 0
  Segment part 70.            Intra module refs:   gattProcessReadReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq      0000F056 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F07E - 0000F0F8 (0x7b bytes), align: 0
  Segment part 72.            Intra module refs:   gattProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq
                                   0000F07E 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F0F9 - 0000F100 (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F101 - 0000F102 (0x2 bytes), align: 0
  Segment part 75.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_ServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F103 - 0000F104 (0x2 bytes), align: 0
  Segment part 76.            Intra module refs:   GATT_FindHandleUUID
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F105 - 0000F10A (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   GATT_FindHandle
                                                   Segment part 76
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F10B - 0000F119 (0xf bytes), align: 0
  Segment part 78.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F11A - 0000F11C (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F11D - 0000F121 (0x5 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 79
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F122 - 0000F1BE (0x9d bytes), align: 0
  Segment part 81.            Intra module refs:   gattProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq
                                   0000F122 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1BF - 0000F1C2 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1C3 - 0000F1C8 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   GATT_FindNextAttr
                                                   GATT_ServiceChangedInd
                                                   Segment part 83
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1C9 - 0000F1D8 (0x10 bytes), align: 0
  Segment part 85.            Intra module refs:   GATT_RegisterService
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1D9 - 0000F1D9 (0x1 bytes), align: 0
  Segment part 86.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1DA - 0000F1DD (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   GATT_FindNextAttr
                                                   Segment part 86
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerHandleTimerCB
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1DE - 0000F1E3 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 18
                                                   Segment part 69
                                                   Segment part 74
                                                   Segment part 78
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F1E4 - 0000F214 (0x31 bytes), align: 0
  Segment part 89.            Intra module refs:   gattProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq     0000F1E4 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F215 - 0000F217 (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   gattProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq
                                   0000F215 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F218 - 0000F253 (0x3c bytes), align: 0
  Segment part 93.            Intra module refs:   gattGetServerStatus::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus     0000F218 
               calls direct
               XSTACK = 0000000F ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F254 - 0000F259 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F25A - 0000F25F (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GATT_ServiceChangedInd
                                                   Segment part 95
                                                   gattGetServerStatus
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F260 - 0000F296 (0x37 bytes), align: 0
  Segment part 97.            Intra module refs:   gattFindServerInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo      0000F260 
               XSTACK = 0000002D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F297 - 0000F2A1 (0xb bytes), align: 0
  Segment part 99.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2A2 - 0000F2F1 (0x50 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServerHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB
                                   0000F2A2 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2F2 - 0000F2FA (0x9 bytes), align: 0
  Segment part 102.           Intra module refs:   gattServerHandleConnStatusCB
                                                   gattServerHandleTimerCB
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2FB - 0000F300 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   gattServerHandleConnStatusCB
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F301 - 0000F308 (0x8 bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 103
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F309 - 0000F3C4 (0xbc bytes), align: 0
  Segment part 105.           Intra module refs:   gattServerHandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB
                                   0000F309 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3C5 - 0000F3D2 (0xe bytes), align: 0
  Segment part 107.           Intra module refs:   gattGetServerStatus
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_SetNextHandle      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003171 - 00003171 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   reqTaskId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003172 - 00003173 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B41 - 00004B46 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer::?relay
                                   00004B41        GATT_Init (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B47 - 00004B4C (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService::?relay
                                   00004B47        GATTServApp_RegisterService (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_DeregisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B4D - 00004B52 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq::?relay
                                   00004B4D        GATTServApp_Init (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B53 - 00004B58 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions::?relay
                                   00004B53        Segment part 87 (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B59 - 00004B5E (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions::?relay
                                   00004B59 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B5F - 00004B64 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd::?relay
                                   00004B5F        GATTServApp_SendServiceChangedInd (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B65 - 00004B6A (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID::?relay
                                   00004B65        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B6B - 00004B70 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 78
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle::?relay
                                   00004B6B        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 102 (gattservapp)
                                                   Segment part 149 (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B71 - 00004B76 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr::?relay
                                   00004B71        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 89 (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B77 - 00004B7C (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   gattServiceLastHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs::?relay
                                   00004B77 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B7D - 00004B82 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GATT_ServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication::?relay
                                   00004B7D        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B83 - 00004B88 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification::?relay
                                   00004B83        GATTServApp_ProcessCharCfg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B89 - 00004B8E (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   GATT_FindNextAttr
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle::?relay
                                   00004B89 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B8F - 00004B94 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB::?relay
                                   00004B8F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B95 - 00004B9A (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq::?relay
                                   00004B95 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004B9B - 00004BA0 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq::?relay
                                   00004B9B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BA1 - 00004BA6 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq::?relay
                                   00004BA1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BA7 - 00004BAC (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq::?relay
                                   00004BA7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BAD - 00004BB2 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq::?relay
                                   00004BAD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BB3 - 00004BB8 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq::?relay
                                   00004BB3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BB9 - 00004BBE (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq::?relay
                                   00004BB9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BBF - 00004BC4 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq::?relay
                                   00004BBF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BC5 - 00004BCA (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq::?relay
                                   00004BC5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BCB - 00004BD0 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   GATT_Indication
                                                   GATT_Notification
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus::?relay
                                   00004BCB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BD1 - 00004BD6 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 107
                                                   gattServerHandleConnStatusCB
                                                   gattServerProcessMsgCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo::?relay
                                   00004BD1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BD7 - 00004BDC (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   GATT_Indication
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB::?relay
                                   00004BD7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BDD - 00004BE2 (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB::?relay
                                   00004BDD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_SetNextHandle::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020000 - 0002002F (0x30 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 12

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002DA - 000002DA (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_Init
                                                   GATT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattTaskID              000002DA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002DB - 000002DC (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gattProcessRxData
                                                   gattRegisterServer
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002DD - 000002DE (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F450 - 0001F456 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   gattRegisterServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer      0001F450 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F457 - 0001F462 (0xc bytes), align: 0
  Segment part 11.            Intra module refs:   gattRegisterServer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterClient      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F463 - 0001F476 (0x14 bytes), align: 0
  Segment part 14.            Intra module refs:   GATT_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init               0001F463 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F477 - 0001F47B (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   GATT_Init
                                                   gattStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F47C - 0001F4C1 (0x46 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent       0001F47C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4C2 - 0001F4C6 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   GATT_ProcessEvent
                                                   gattStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F4C7 - 0001F591 (0xcb bytes), align: 0
  Segment part 20.            Intra module refs:   gattProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData       0001F4C7 
               calls direct
               XSTACK = 0000000C ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F592 - 0001F59B (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F59C - 0001F5A1 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F5A2 - 0001F630 (0x8f bytes), align: 0
  Segment part 24.            Intra module refs:   gattNotifyEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent         0001F5A2 
               calls direct
               XSTACK = 00000002 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F631 - 0001F67B (0x4b bytes), align: 0
  Segment part 26.            Intra module refs:   gattStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer          0001F631 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F67C - 0001F6A5 (0x2a bytes), align: 0
  Segment part 28.            Intra module refs:   gattStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer           0001F67C 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BE3 - 00004BE8 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer::?relay
                                   00004BE3        GATT_InitServer (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterClient::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BE9 - 00004BEE (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init::?relay       00004BE9        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BEF - 00004BF4 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent::?relay
                                   00004BEF        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BF5 - 00004BFA (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData::?relay
                                   00004BF5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004BFB - 00004C00 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent::?relay
                                   00004BFB        Segment part 104 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C01 - 00004C06 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer::?relay
                                   00004C01        GATT_Indication (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C07 - 00004C0C (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer::?relay   00004C07        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gattservapp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002DF - 000002DF (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATTServApp_Init
                                                   GATTServApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_TaskID      000002DF 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B05 - 00000B05 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATTServApp_RegisterForMsg
                                                   GATTServApp_SendCCCUpdatedEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appTaskID               00000B05 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002E0 - 000002E3 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   GATTServApp_Init
                                                   Segment part 40
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002E4 - 000002E4 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002E5 - 000002E6 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002E7 - 000002E7 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002E8 - 000002FD (0x16 bytes), align: 0
  Segment part 13.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002FE - 00000316 (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 57
                                                   Segment part 63
                                                   Segment part 64
                                                   Segment part 67
                                                   Segment part 83
                                                   Segment part 88
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008246 - 00008248 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B06 - 00000B06 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000317 - 0000031C (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   Segment part 20
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B07 - 00000B26 (0x20 bytes), align: 0
  Segment part 19.            Intra module refs:   GATTServApp_AddService
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000816A - 0000816F (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceCBs          0000816A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A44 - 00005A4F (0xc bytes), align: 0
  Segment part 22.            Intra module refs:   GATTServApp_RegisterForMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg
                                   00005A44 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A50 - 00005A88 (0x39 bytes), align: 0
  Segment part 24.            Intra module refs:   GATTServApp_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init        00005A50 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A89 - 00005ACD (0x45 bytes), align: 0
  Segment part 26.            Intra module refs:   GATTServApp_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent
                                   00005A89 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005ACE - 00005B7D (0xb0 bytes), align: 0
  Segment part 28.            Intra module refs:   GATTServApp_RegisterService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService
                                   00005ACE 
               calls direct
               XSTACK = 0000000E ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B7E - 00005B7F (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   GATTServApp_RegisterService
                                                   Segment part 163
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B80 - 00005B84 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 142
                                                   Segment part 30
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DeregisterService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParameter
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParameter
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B85 - 00005BEE (0x6a bytes), align: 0
  Segment part 38.            Intra module refs:   gattServApp_SetNumPrepareWrites::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites
                                   00005B85 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005BEF - 00005C04 (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C05 - 00005C0A (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C0B - 00005C6F (0x65 bytes), align: 0
  Segment part 42.            Intra module refs:   GATTServApp_FindAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr    00005C0B 
               XSTACK = 00000033 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C70 - 00005C96 (0x27 bytes), align: 0
  Segment part 44.            Intra module refs:   GATTServApp_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService
                                   00005C70 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C97 - 00005C9B (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   GATTServApp_AddService
                                                   GATTServApp_FindAttr
                                                   GATTServApp_ProcessEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DelService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005C9C - 00005CC7 (0x2c bytes), align: 0
  Segment part 49.            Intra module refs:   gattServApp_FindServiceCBs::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs
                                   00005C9C 
               XSTACK = 0000001D ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CC8 - 00005CCE (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   GATTServApp_RegisterForMsg
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CCF - 00005CD4 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gattServApp_FindServiceCBs
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005CD5 - 00005EC7 (0x1f3 bytes), align: 0
  Segment part 53.            Intra module refs:   gattServApp_ProcessMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg
                                   00005CD5 
               calls direct
               XSTACK = 0000000C ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EC8 - 00005ED1 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005ED2 - 00005ED9 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   GATTServApp_RegisterService
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EDA - 00005EE8 (0xf bytes), align: 0
  Segment part 57.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EE9 - 000060C4 (0x1dc bytes), align: 0
  Segment part 58.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq
                                   00005EE9 
               calls direct
               XSTACK = 00000016 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000060C5 - 0000626E (0x1aa bytes), align: 0
  Segment part 60.            Intra module refs:   gattServApp_ProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq
                                   000060C5 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000626F - 00006276 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006277 - 0000627D (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000627E - 00006281 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 63
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006282 - 00006286 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006287 - 00006290 (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006291 - 00006293 (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006294 - 0000629C (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 67
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000629D - 000062A0 (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062A1 - 000062A2 (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062A3 - 000062A6 (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062A7 - 000062AF (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062B0 - 000063B9 (0x10a bytes), align: 0
  Segment part 73.            Intra module refs:   gattServApp_ProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq
                                   000062B0 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063BA - 000063BE (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   GATTServApp_WriteAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063BF - 000063C6 (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063C7 - 000063CF (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063D0 - 000063D8 (0x9 bytes), align: 0
  Segment part 78.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063D9 - 000063E6 (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063E7 - 000065F9 (0x213 bytes), align: 0
  Segment part 80.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq
                                   000063E7 
               calls direct
               XSTACK = 00000016 ( 00000022 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000065FA - 00006603 (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006604 - 00006607 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006608 - 0000660D (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000660E - 00006611 (0x4 bytes), align: 0
  Segment part 85.            Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   Segment part 84
                                                   gattServApp_FindAuthorizeAttrCB
                                                   gattServApp_FindServiceCBs
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006612 - 00006617 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 150
                                                   Segment part 182
                                                   Segment part 41
                                                   Segment part 57
                                                   Segment part 85
                                                   Segment part 87
                                                   Segment part 95
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006618 - 00006621 (0xa bytes), align: 0
  Segment part 87.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006622 - 00006633 (0x12 bytes), align: 0
  Segment part 88.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006634 - 0000663C (0x9 bytes), align: 0
  Segment part 89.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000663D - 00006646 (0xa bytes), align: 0
  Segment part 90.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006647 - 00006712 (0xcc bytes), align: 0
  Segment part 91.            Intra module refs:   gattServApp_ProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq
                                   00006647 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006713 - 00006717 (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006718 - 0000671D (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000671E - 00006724 (0x7 bytes), align: 0
  Segment part 95.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006725 - 00006732 (0xe bytes), align: 0
  Segment part 96.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006733 - 0000682A (0xf8 bytes), align: 0
  Segment part 97.            Intra module refs:   gattServApp_ProcessPrepareWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq
                                   00006733 
               calls direct
               XSTACK = 00000016 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000682B - 00006838 (0xe bytes), align: 0
  Segment part 99.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006839 - 0000684F (0x17 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006850 - 00006865 (0x16 bytes), align: 0
  Segment part 101.           Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006866 - 0000686E (0x9 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 101
                                                   Segment part 79
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000686F - 00006870 (0x2 bytes), align: 0
  Segment part 103.           Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006871 - 00006873 (0x3 bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 103
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006874 - 00006878 (0x5 bytes), align: 0
  Segment part 105.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   Segment part 104
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006879 - 0000695F (0xe7 bytes), align: 0
  Segment part 106.           Intra module refs:   gattServApp_ProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq
                                   00006879 
               calls direct
               XSTACK = 00000016 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006960 - 00006962 (0x3 bytes), align: 0
  Segment part 108.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006963 - 00006967 (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006968 - 00006968 (0x1 bytes), align: 0
  Segment part 110.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006969 - 0000696D (0x5 bytes), align: 0
  Segment part 111.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ReadAttr
                                                   Segment part 110
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000696E - 00006972 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   Segment part 111
                                                   Segment part 72
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006973 - 00006976 (0x4 bytes), align: 0
  Segment part 113.           Intra module refs:   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006977 - 0000697F (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006980 - 00006985 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_RegisterService
                                                   Segment part 114
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006986 - 000069A2 (0x1d bytes), align: 0
  Segment part 116.           Intra module refs:   gattServApp_FindPrepareWriteQ::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ
                                   00006986 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069A3 - 000069D5 (0x33 bytes), align: 0
  Segment part 118.           Intra module refs:   gattServApp_FindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem
                                   000069A3 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069D6 - 000069DA (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   gattServApp_FindCharCfgItem
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069DB - 000069F4 (0x1a bytes), align: 0
  Segment part 121.           Intra module refs:   gattServApp_FindAuthorizeAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB
                                   000069DB 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069F5 - 00006A54 (0x60 bytes), align: 0
  Segment part 123.           Intra module refs:   gattServApp_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB
                                   000069F5 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A55 - 00006A5C (0x8 bytes), align: 0
  Segment part 125.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006A5D - 00006E73 (0x417 bytes), align: 0
  Segment part 126.           Intra module refs:   GATTServApp_ReadAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr    00006A5D 
               calls direct
               XSTACK = 00000039 ( 00000023 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E74 - 00006E7A (0x7 bytes), align: 0
  Segment part 128.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 145
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E7B - 00006E7D (0x3 bytes), align: 0
  Segment part 129.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E7E - 00006E82 (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 129
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E83 - 00006E8B (0x9 bytes), align: 0
  Segment part 131.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E8C - 00006E93 (0x8 bytes), align: 0
  Segment part 132.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E94 - 00006E97 (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E98 - 00006E9C (0x5 bytes), align: 0
  Segment part 134.           Intra module refs:   GATTServApp_FindAttr
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006E9D - 00006EA2 (0x6 bytes), align: 0
  Segment part 135.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EA3 - 00006EA6 (0x4 bytes), align: 0
  Segment part 136.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EA7 - 00006EAC (0x6 bytes), align: 0
  Segment part 137.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 136
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EAD - 00006EBC (0x10 bytes), align: 0
  Segment part 138.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EBD - 00006EC4 (0x8 bytes), align: 0
  Segment part 139.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
                                                   GATTServApp_WriteAttr
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EC5 - 00006EC6 (0x2 bytes), align: 0
  Segment part 140.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EC7 - 00006ECD (0x7 bytes), align: 0
  Segment part 141.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
                                                   Segment part 140
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006ECE - 00006ED3 (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_RegisterService
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006ED4 - 00006EDC (0x9 bytes), align: 0
  Segment part 143.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EDD - 00006EE5 (0x9 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 143
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EE6 - 00006EEC (0x7 bytes), align: 0
  Segment part 145.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EED - 00006EF6 (0xa bytes), align: 0
  Segment part 146.           Intra module refs:   Segment part 133
                                                   Segment part 135
                                                   Segment part 145
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EF7 - 00006F79 (0x83 bytes), align: 0
  Segment part 147.           Intra module refs:   GATTServApp_WriteAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr   00006EF7 
               calls direct
               XSTACK = 0000001C ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F7A - 00006F84 (0xb bytes), align: 0
  Segment part 149.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F85 - 00006F8B (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F8C - 00006F97 (0xc bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 152. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParamValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParamValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F98 - 00006FE8 (0x51 bytes), align: 0
  Segment part 156.           Intra module refs:   GATTServApp_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg
                                   00006F98 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FE9 - 0000700F (0x27 bytes), align: 0
  Segment part 158.           Intra module refs:   GATTServApp_SendServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd
                                   00006FE9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007010 - 0000704C (0x3d bytes), align: 0
  Segment part 160.           Intra module refs:   GATTServApp_InitCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg
                                   00007010 
               calls direct
               XSTACK = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000704D - 00007051 (0x5 bytes), align: 0
  Segment part 162.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_UpdateCharCfg
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007052 - 0000705D (0xc bytes), align: 0
  Segment part 163.           Intra module refs:   GATTServApp_InitCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000705E - 0000707B (0x1e bytes), align: 0
  Segment part 164.           Intra module refs:   GATTServApp_ReadCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg
                                   0000705E 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000707C - 000070BC (0x41 bytes), align: 0
  Segment part 166.           Intra module refs:   GATTServApp_WriteCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg
                                   0000707C 
               calls direct
               XSTACK = 00000014 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070BD - 000070C1 (0x5 bytes), align: 0
  Segment part 168.           Intra module refs:   GATTServApp_RegisterService
                                                   GATTServApp_SendCCCUpdatedEvent
                                                   GATTServApp_WriteCharCfg
                                                   gattServApp_HandleConnStatusCB
                                                   gattServApp_SetNumPrepareWrites
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070C2 - 000070CF (0xe bytes), align: 0
  Segment part 169.           Intra module refs:   GATTServApp_WriteCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070D0 - 0000719A (0xcb bytes), align: 0
  Segment part 170.           Intra module refs:   GATTServApp_ProcessCCCWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq
                                   000070D0 
               calls direct
               XSTACK = 00000014 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000719B - 0000719E (0x4 bytes), align: 0
  Segment part 172.           Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000719F - 000071A2 (0x4 bytes), align: 0
  Segment part 173.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
                                                   Segment part 172
                                                   gattServApp_ProcessMsg
                                                   gattServApp_WriteAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071A3 - 000071A8 (0x6 bytes), align: 0
  Segment part 174.           Intra module refs:   Segment part 114
                                                   Segment part 134
                                                   Segment part 173
                                                   Segment part 52
                                                   Segment part 55
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071A9 - 00007300 (0x158 bytes), align: 0
  Segment part 175.           Intra module refs:   GATTServApp_ProcessCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg
                                   000071A9 
               calls direct
               XSTACK = 00000005 ( 00000039 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007301 - 00007308 (0x8 bytes), align: 0
  Segment part 177.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007309 - 00007312 (0xa bytes), align: 0
  Segment part 178.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007313 - 0000731E (0xc bytes), align: 0
  Segment part 179.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000731F - 00007320 (0x2 bytes), align: 0
  Segment part 180.           Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007321 - 00007326 (0x6 bytes), align: 0
  Segment part 181.           Intra module refs:   Segment part 180
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007327 - 0000732F (0x9 bytes), align: 0
  Segment part 182.           Intra module refs:   GATTServApp_ProcessCharCfg
                                                   Segment part 181
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007330 - 000073AC (0x7d bytes), align: 0
  Segment part 183.           Intra module refs:   gattServApp_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB
                                   00007330 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073AD - 000073B7 (0xb bytes), align: 0
  Segment part 185.           Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073B8 - 00007413 (0x5c bytes), align: 0
  Segment part 186.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent
                                   000073B8 
               calls direct
               XSTACK = 00000014 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007414 - 0000741E (0xb bytes), align: 0
  Segment part 188.           Intra module refs:   GATTServApp_SendCCCUpdatedEvent
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003174 - 00003174 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   appTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003175 - 00003175 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003176 - 00003195 (0x20 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C0D - 00004C12 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg::?relay
                                   00004C0D        GAPBondMgr_Register (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C13 - 00004C18 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init::?relay
                                   00004C13        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C19 - 00004C1E (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent::?relay
                                   00004C19        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C1F - 00004C24 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   GATTServApp_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService::?relay
                                   00004C1F        BT_AddService (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   GGS_AddService (gapgattserver)
                                                   HP_AddService (hitpoint)
                                                   HS_AddService (historystep)
                                                   MR_AddService (motorrun)
                                                   PM_AddService (pedometer)
                                                   ST_AddService (systemtest)
                                                   TS_AddService (timeset)
                                                   WC_AddService (wechatprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DeregisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C25 - 00004C2A (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites::?relay
                                   00004C25 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C2B - 00004C30 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   GATTServApp_ProcessCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr::?relay
                                   00004C2B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C31 - 00004C36 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService::?relay
                                   00004C31        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DelService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C37 - 00004C3C (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 151
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs::?relay
                                   00004C37 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C3D - 00004C42 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   GATTServApp_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg::?relay
                                   00004C3D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C43 - 00004C48 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq::?relay
                                   00004C43 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C49 - 00004C4E (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq::?relay
                                   00004C49 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C4F - 00004C54 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq::?relay
                                   00004C4F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C55 - 00004C5A (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq::?relay
                                   00004C55 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C5B - 00004C60 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq::?relay
                                   00004C5B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C61 - 00004C66 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq::?relay
                                   00004C61 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C67 - 00004C6C (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq::?relay
                                   00004C67 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C6D - 00004C72 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 185
                                                   Segment part 99
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ::?relay
                                   00004C6D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C73 - 00004C78 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   Segment part 169
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem::?relay
                                   00004C73 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C79 - 00004C7E (0x6 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 95
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB::?relay
                                   00004C79 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C7F - 00004C84 (0x6 bytes), align: 0
  Segment part 124.           Intra module refs:   gattServiceCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB::?relay
                                   00004C7F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C85 - 00004C8A (0x6 bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 182
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr::?relay
                                   00004C85        GAPBondMgr_ProcessEvent (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C8B - 00004C90 (0x6 bytes), align: 0
  Segment part 148.           Intra module refs:   GATTServApp_UpdateCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr::?relay
                                   00004C8B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C91 - 00004C96 (0x6 bytes), align: 0
  Segment part 157.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg::?relay
                                   00004C91        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C97 - 00004C9C (0x6 bytes), align: 0
  Segment part 159.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd::?relay
                                   00004C97        GAPBondMgr_LinkEst (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004C9D - 00004CA2 (0x6 bytes), align: 0
  Segment part 161.           Intra module refs:   GATTServApp_Init
                                                   gattServApp_HandleConnStatusCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg::?relay
                                   00004C9D        BT_AddService (battservice)
                                                   BT_HandleConnStatusCB (battservice)
                                                   HP_AddService (hitpoint)
                                                   HP_HandleConnStatusCB (hitpoint)
                                                   MR_AddService (motorrun)
                                                   MR_HandleConnStatusCB (motorrun)
                                                   PM_AddService (pedometer)
                                                   PM_HandleConnStatusCB (pedometer)
                                                   ST_AddService (systemtest)
                                                   ST_HandleConnStatusCB (systemtest)
                                                   WC_AddService (wechatprofile)
                                                   WC_HandleConnStatusCB (wechatprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CA3 - 00004CA8 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
                                                   GATTServApp_ReadAttr
                                                   GATTServApp_SendServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg::?relay
                                   00004CA3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CA9 - 00004CAE (0x6 bytes), align: 0
  Segment part 167.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg::?relay
                                   00004CA9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CAF - 00004CB4 (0x6 bytes), align: 0
  Segment part 171.           Intra module refs:   gattServApp_WriteAttrCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq::?relay
                                   00004CAF        BT_WriteAttrCB (battservice)
                                                   HP_WriteAttrCB (hitpoint)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_WriteAttrCB (pedometer)
                                                   ST_WriteAttrCB (systemtest)
                                                   WC_WriteAttrCB (wechatprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CB5 - 00004CBA (0x6 bytes), align: 0
  Segment part 176.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg::?relay
                                   00004CB5        BT_SetParameter (battservice)
                                                   HP_SetParameter (hitpoint)
                                                   MR_SetParameter (motorrun)
                                                   PM_SetParameter (pedometer)
                                                   WC_SetParameter (wechatprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CBB - 00004CC0 (0x6 bytes), align: 0
  Segment part 184.           Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB::?relay
                                   00004CBB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CC1 - 00004CC6 (0x6 bytes), align: 0
  Segment part 187.           Intra module refs:   GATTServApp_ProcessCCCWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent::?relay
                                   00004CC1 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020246 - 00020248 (0x3 bytes), align: 0
  Segment part 189.           Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002016A - 0002016F (0x6 bytes), align: 0
  Segment part 190.           Intra module refs:   gattServiceCBs

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci

  SEGMENTS IN THE MODULE
  ======================
XDATA_ROM_C
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           supportedCmdsTable      
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000031D - 0000031D (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_SendDataPkt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciPTMenabled           0000031D        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000031E - 0000031E (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ctrlToHostEnable        0000031E        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000031F - 00000320 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numHostBufs             0000031F        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000321 - 00000321 (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCtrlCmdToken         00000321        Segment part 35 (hci_event)
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFE0 - 0001BFE9 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc            0001BFE0 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ValidConnTimeParams
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFEA - 0001C0B4 (0xcb bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_SendDataPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt         0001BFEA 
               calls direct
               XSTACK = 00000002 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0B5 - 0001C0C8 (0x14 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_DisconnectCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd       0001C0B5 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRemoteVersionInfoCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetEventMaskCmd     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ResetCmd            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadTransmitPowerLevelCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetControllerToHostFlowCtrlCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostBufferSizeCmd   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalVersionInfoCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedCommandsCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0C9 - 0001C0CF (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_LE_RandCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0D0 - 0001C0F5 (0x26 bytes), align: 0
  Segment part 50.            Intra module refs:   HCI_ReadBDADDRCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd       0001C0D0 
               calls direct
               XSTACK = 00000000 ( 00000007 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0F6 - 0001C12D (0x38 bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_ReadRssiCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd         0001C0F6 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C12E - 0001C134 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetEventMaskCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C135 - 0001C139 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetRandomAddressCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C13A - 0001C16A (0x31 bytes), align: 0
  Segment part 59.            Intra module refs:   HCI_LE_ReadBufSizeCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd   0001C13A 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C16B - 0001C171 (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C172 - 0001C19A (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   HCI_LE_SetRandomAddressCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd
                                   0001C172 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C19B - 0001C20B (0x71 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_LE_SetAdvParamCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd   0001C19B 
               calls direct
               XSTACK = 00000006 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C20C - 0001C213 (0x8 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_LE_SetAdvParamCmd
                                                   Segment part 126
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C214 - 0001C228 (0x15 bytes), align: 0
  Segment part 69.            Intra module refs:   HCI_LE_SetAdvDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd    0001C214 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C229 - 0001C23D (0x15 bytes), align: 0
  Segment part 71.            Intra module refs:   HCI_LE_SetScanRspDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd
                                   0001C229 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C23E - 0001C252 (0x15 bytes), align: 0
  Segment part 73.            Intra module refs:   HCI_LE_SetAdvEnableCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd
                                   0001C23E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C253 - 0001C259 (0x7 bytes), align: 0
  Segment part 75.            Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetAdvParamCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C25A - 0001C261 (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   HCI_LE_SetRandomAddressCmd
                                                   Segment part 75
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadAdvChanTxPowerCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C262 - 0001C267 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C268 - 0001C274 (0xd bytes), align: 0
  Segment part 82.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadWhiteListSizeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C275 - 0001C288 (0x14 bytes), align: 0
  Segment part 85.            Intra module refs:   HCI_LE_ClearWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd
                                   0001C275 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C289 - 0001C29D (0x15 bytes), align: 0
  Segment part 87.            Intra module refs:   HCI_LE_AddWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd
                                   0001C289 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RemoveWhiteListCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 91. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadChannelMapCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C29E - 0001C2A1 (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2A2 - 0001C2A5 (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 54
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2A6 - 0001C2B1 (0xc bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 151
                                                   Segment part 94
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_EncryptCmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2B2 - 0001C2B9 (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_RandCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2BA - 0001C2F3 (0x3a bytes), align: 0
  Segment part 99.            Intra module refs:   HCI_LE_RandCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd          0001C2BA 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2F4 - 0001C31F (0x2c bytes), align: 0
  Segment part 101.           Intra module refs:   HCI_LE_LtkReqReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd   0001C2F4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C320 - 0001C34D (0x2e bytes), align: 0
  Segment part 103.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd
                                   0001C320 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadSupportedStatesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 107. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReceiverTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TransmitterTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 111. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TestEndCmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetRxGainCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C34E - 0001C350 (0x3 bytes), align: 0
  Segment part 115.           Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C351 - 0001C357 (0x7 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetTxPowerCmd   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 119. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 120. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 121. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 122. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 123. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ExtendRfRangeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 125. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C358 - 0001C35A (0x3 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C35B - 0001C35D (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   HCI_ReadBDADDRCmd
                                                   Segment part 126
                                                   Segment part 188
                                                   Segment part 49
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C35E - 0001C364 (0x7 bytes), align: 0
  Segment part 128.           Intra module refs:   HCI_bm_alloc
                                                   Segment part 127
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 129. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_HaltDuringRfCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C365 - 0001C366 (0x2 bytes), align: 0
  Segment part 131.           Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C367 - 0001C369 (0x3 bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C36A - 0001C36D (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   Segment part 132
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C36E - 0001C370 (0x3 bytes), align: 0
  Segment part 134.           Intra module refs:   Segment part 116
                                                   Segment part 133
                                                   Segment part 153
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C371 - 0001C375 (0x5 bytes), align: 0
  Segment part 135.           Intra module refs:   HCI_DisconnectCmd
                                                   Segment part 134
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_OnePktPerEvtCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C376 - 0001C3A0 (0x2b bytes), align: 0
  Segment part 138.           Intra module refs:   HCI_EXT_ClkDivOnHaltCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ClkDivOnHaltCmd
                                   0001C376 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DeclareNvUsageCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DecryptCmd      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 144. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 145. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFastTxResponseTimeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3A1 - 0001C3A1 (0x1 bytes), align: 0
  Segment part 149.           Intra module refs:   HCI_EXT_ClkDivOnHaltCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3A2 - 0001C3A5 (0x4 bytes), align: 0
  Segment part 150.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
                                                   Segment part 149
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3A6 - 0001C3AB (0x6 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
                                                   Segment part 156
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3AC - 0001C3B0 (0x5 bytes), align: 0
  Segment part 152.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B1 - 0001C3B7 (0x7 bytes), align: 0
  Segment part 153.           Intra module refs:   Segment part 152
                                                   Segment part 159
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSlaveLatencyOverrideCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B8 - 0001C3BD (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestTxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3BE - 0001C3C4 (0x7 bytes), align: 0
  Segment part 159.           Intra module refs:   HCI_EXT_ClkDivOnHaltCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemHopTestTxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestRxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EndModemTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetBDADDRCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSCACmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 170. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EnablePTMCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFreqTuneCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SaveFreqTuneCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 176. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetMaxDtmTxPowerCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_MapPmIoPortCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 180. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DisconnectImmedCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PacketErrorRateCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PERbyChanCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 186. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3C5 - 0001C3C9 (0x5 bytes), align: 0
  Segment part 188.           Intra module refs:   Segment part 199
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_AdvEventNoticeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ConnEventNoticeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_BuildRevisionCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3CA - 0001C412 (0x49 bytes), align: 0
  Segment part 195.           Intra module refs:   LL_RandCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback            0001C3CA 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C413 - 0001C434 (0x22 bytes), align: 0
  Segment part 197.           Intra module refs:   LL_EXT_SetRxGainCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback   0001C413 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C435 - 0001C43C (0x8 bytes), align: 0
  Segment part 199.           Intra module refs:   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C43D - 0001C461 (0x25 bytes), align: 0
  Segment part 200.           Intra module refs:   LL_EXT_SetTxPowerCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback
                                   0001C43D 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 202. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRateCback
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C462 - 0001C489 (0x28 bytes), align: 0
  Segment part 204.           Intra module refs:   LL_EXT_ExtendRfRangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback
                                   0001C462 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CC7 - 00004CCC (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc::?relay    00004CC7        L2CAP_bm_alloc (l2cap_util)
                                                   LL_RxReqDataBufCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ValidConnTimeParams::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CCD - 00004CD2 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt::?relay
                                   00004CCD        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CD3 - 00004CD8 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd::?relay
                                   00004CD3        GAP_TerminateLinkReq (gap_linkmgr)
                                                   disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRemoteVersionInfoCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetEventMaskCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ResetCmd::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadTransmitPowerLevelCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetControllerToHostFlowCtrlCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostBufferSizeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalVersionInfoCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedCommandsCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 46. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CD9 - 00004CDE (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd::?relay
                                   00004CD9        GAP_ParamsInit (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CDF - 00004CE4 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd::?relay
                                   00004CDF        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetEventMaskCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CE5 - 00004CEA (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd::?relay
                                   00004CE5        gapReadBD_ADDRStatus (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CEB - 00004CF0 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd::?relay
                                   00004CEB        gapProcessNewAddr (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CF1 - 00004CF6 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd::?relay
                                   00004CF1        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CF7 - 00004CFC (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd::?relay
                                   00004CF7        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004CFD - 00004D02 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd::?relay
                                   00004CFD        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D03 - 00004D08 (0x6 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd::?relay
                                   00004D03        GAP_EndDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadAdvChanTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadWhiteListSizeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D09 - 00004D0E (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd::?relay
                                   00004D09        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D0F - 00004D14 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd::?relay
                                   00004D0F        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RemoveWhiteListCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 92. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadChannelMapCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_EncryptCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D15 - 00004D1A (0x6 bytes), align: 0
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd::?relay
                                   00004D15        smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D1B - 00004D20 (0x6 bytes), align: 0
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd::?relay
                                   00004D1B        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D21 - 00004D26 (0x6 bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd::?relay
                                   00004D21        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadSupportedStatesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReceiverTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 110. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TransmitterTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 112. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TestEndCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetRxGainCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 124. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ExtendRfRangeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 130. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_HaltDuringRfCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 137. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_OnePktPerEvtCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D27 - 00004D2C (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ClkDivOnHaltCmd::?relay
                                   00004D27        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DeclareNvUsageCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DecryptCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 148. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFastTxResponseTimeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSlaveLatencyOverrideCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestTxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemHopTestTxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestRxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EndModemTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetBDADDRCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSCACmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EnablePTMCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFreqTuneCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SaveFreqTuneCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetMaxDtmTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 179. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_MapPmIoPortCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DisconnectImmedCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PacketErrorRateCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 185. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PERbyChanCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_AdvEventNoticeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ConnEventNoticeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_BuildRevisionCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D2D - 00004D32 (0x6 bytes), align: 0
  Segment part 196.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback::?relay    00004D2D        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D33 - 00004D38 (0x6 bytes), align: 0
  Segment part 198.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback::?relay
                                   00004D33        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D39 - 00004D3E (0x6 bytes), align: 0
  Segment part 201.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback::?relay
                                   00004D39        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 203. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRateCback::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D3F - 00004D44 (0x6 bytes), align: 0
  Segment part 205.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback::?relay
                                   00004D3F        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 206. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 207. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 208. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 209. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_data

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000322 - 00000341 (0x20 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_TxDataBufferInsert
                                                   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000342 - 00000342 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_TxDataBufferInsert
                                                   HCI_TxDataSend
                                                   LL_TxDataCompleteCback
                                                   Segment part 18
                                                   hciTxDataBufferReset
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000343 - 00000343 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_TxDataBufferInsert
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInit    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D65A - 0001D718 (0xbf bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_TxDataBufferInsert::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInsert
                                   0001D65A 
               calls direct
               XSTACK = 00000002 ( 0000000F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D719 - 0001D723 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_TxDataBufferInsert
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReverseBytes        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D724 - 0001D7E9 (0xc6 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_TxDataSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataSend          0001D724 
               calls direct
               XSTACK = 0000000F ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7EA - 0001D7F7 (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_TxDataSend
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7F8 - 0001D7FB (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_TxDataSend
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7FC - 0001D806 (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D807 - 0001D84F (0x49 bytes), align: 0
  Segment part 21.            Intra module refs:   hciTxDataBufferReset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hciTxDataBufferReset    0001D807 
               calls direct
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D850 - 0001D85B (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_TxDataBufferInsert
                                                   hciTxDataBufferReset
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D85C - 0001D871 (0x16 bytes), align: 0
  Segment part 24.            Intra module refs:   hciTxDataBufferReset
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D872 - 0001D87C (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D87D - 0001D8B9 (0x3d bytes), align: 0
  Segment part 26.            Intra module refs:   LL_RxReqDataBufCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxReqDataBufCback    0001D87D 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8BA - 0001D8BE (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   HCI_TxDataSend
                                                   LL_RxReqDataBufCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8BF - 0001D9C3 (0x105 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_RxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback
                                   0001D8BF 
               calls direct
               XSTACK = 00000002 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9C4 - 0001D9C7 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9C8 - 0001D9D5 (0xe bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9D6 - 0001D9DA (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9DB - 0001D9E4 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   LL_RxDataCompleteCback
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9E5 - 0001D9EB (0x7 bytes), align: 0
  Segment part 35.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9EC - 0001DA45 (0x5a bytes), align: 0
  Segment part 36.            Intra module refs:   LL_TxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxDataCompleteCback
                                   0001D9EC 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInit::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D45 - 00004D4A (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInsert::?relay
                                   00004D45        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReverseBytes::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D4B - 00004D50 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_TxDataBufferInsert
                                                   LL_TxDataCompleteCback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataSend::?relay
                                   00004D4B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D51 - 00004D56 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_TxDataSend
                                                   LL_TxDataCompleteCback
           LOCAL                   ADDRESS         
           =====                   =======         
           hciTxDataBufferReset::?relay
                                   00004D51 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D57 - 00004D5C (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxReqDataBufCback::?relay
                                   00004D57        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D5D - 00004D62 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback::?relay
                                   00004D5D        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D63 - 00004D68 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxDataCompleteCback::?relay
                                   00004D63        llConnCleanup (ll_common)
                                                   llProcessPendingTxData (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_event

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000344 - 00000344 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bleEvtMask              00000344 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000345 - 0000034C (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pHciEvtMask             00000345 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015429 - 0001544A (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   hciInitEventMasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks       00015429 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001544B - 00015451 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   hciInitEventMasks
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015452 - 00015465 (0x14 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_DataBufferOverflowEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DataBufferOverflowEvent
                                   00015452 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015466 - 0001546A (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_DataBufferOverflowEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001546B - 0001557D (0x113 bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_NumOfCompletedPacketsEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent
                                   0001546B 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001557E - 00015582 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015583 - 00015587 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015588 - 0001559E (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001559F - 000155A2 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000155A3 - 000155A9 (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000155AA - 000155AF (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000155B0 - 0001568D (0xde bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_CommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent
                                   000155B0 
               calls direct
               XSTACK = 00000003 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001568E - 000156AC (0x1f bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent
                                   0001568E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000156AD - 00015707 (0x5b bytes), align: 0
  Segment part 26.            Intra module refs:   HCI_CommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent
                                   000156AD 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HardwareErrorEvent
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015708 - 0001571D (0x16 bytes), align: 0
  Segment part 30.            Intra module refs:   HCI_DataBufferOverflowEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001571E - 00015735 (0x18 bytes), align: 0
  Segment part 31.            Intra module refs:   HCI_DataBufferOverflowEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015736 - 00015739 (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 30
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001573A - 00015776 (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HCI_SendCommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent
                                   0001573A 
               calls direct
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015777 - 0001577C (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_CommandStatusEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001577D - 0001587E (0x102 bytes), align: 0
  Segment part 36.            Intra module refs:   HCI_SendCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent
                                   0001577D 
               calls direct
               XSTACK = 00000014 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001587F - 00015883 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015884 - 0001588C (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001588D - 00015890 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015891 - 00015895 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015896 - 00015899 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 30
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001589A - 0001589E (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001589F - 000158A1 (0x3 bytes), align: 0
  Segment part 44.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158A2 - 000158A7 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 44
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158A8 - 000158A8 (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   HCI_CommandCompleteEvent
                                                   LL_EncLtkReqCback
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158A9 - 000158AE (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158AF - 000158B7 (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158B8 - 000158BB (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158BC - 000158C3 (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158C4 - 000158C9 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000158CA - 00015926 (0x5d bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_SendControllerToHostEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent
                                   000158CA 
               calls direct
               XSTACK = 0000000D ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015927 - 0001592A (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001592B - 00015930 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 110
                                                   Segment part 152
                                                   Segment part 54
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015931 - 0001593D (0xd bytes), align: 0
  Segment part 56.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001593E - 00015949 (0xc bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001594A - 0001594D (0x4 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001594E - 00015956 (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 50
                                                   Segment part 58
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AdvReportCback       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015957 - 0001595B (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001595C - 00015960 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015961 - 00015961 (0x1 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 100
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015962 - 00015968 (0x7 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 42
                                                   Segment part 69
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015969 - 00015B50 (0x1e8 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_ConnectionCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback
                                   00015969 
               calls direct
               XSTACK = 00000009 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B51 - 00015B54 (0x4 bytes), align: 0
  Segment part 74.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B55 - 00015B5F (0xb bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   Segment part 76
                                                   Segment part 77
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B60 - 00015B64 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B65 - 00015B6A (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B6B - 00015B70 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B71 - 00015B79 (0x9 bytes), align: 0
  Segment part 79.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B7A - 00015B7D (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B7E - 00015B81 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 138
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B82 - 00015B90 (0xf bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 147
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B91 - 00015B9E (0xe bytes), align: 0
  Segment part 83.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015B9F - 00015BA2 (0x4 bytes), align: 0
  Segment part 84.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BA3 - 00015BAB (0x9 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 84
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BAC - 00015BAF (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BB0 - 00015BB3 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BB4 - 00015BBA (0x7 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 87
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BBB - 00015BC0 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BC1 - 00015BC4 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BC5 - 00015BCC (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 90
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BCD - 00015BD6 (0xa bytes), align: 0
  Segment part 92.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BD7 - 00015BDA (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   Segment part 152
                                                   Segment part 92
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BDB - 00015BE0 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 101
                                                   Segment part 107
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BE1 - 00015BE7 (0x7 bytes), align: 0
  Segment part 95.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015BE8 - 00015C53 (0x6c bytes), align: 0
  Segment part 96.            Intra module refs:   LL_DisconnectCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback      00015BE8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C54 - 00015C58 (0x5 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C59 - 00015C5C (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C5D - 00015C63 (0x7 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 123
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C64 - 00015C67 (0x4 bytes), align: 0
  Segment part 101.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C68 - 00015C6B (0x4 bytes), align: 0
  Segment part 102.           Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C6C - 00015C78 (0xd bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 102
                                                   Segment part 104
                                                   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C79 - 00015C7E (0x6 bytes), align: 0
  Segment part 104.           Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015C7F - 00015D28 (0xaa bytes), align: 0
  Segment part 105.           Intra module refs:   LL_ConnParamUpdateCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback
                                   00015C7F 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D29 - 00015D2E (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D2F - 00015D32 (0x4 bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D33 - 00015D39 (0x7 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D3A - 00015D42 (0x9 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D43 - 00015D47 (0x5 bytes), align: 0
  Segment part 111.           Intra module refs:   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D48 - 00015D49 (0x2 bytes), align: 0
  Segment part 112.           Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 111
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D4A - 00015D4A (0x1 bytes), align: 0
  Segment part 113.           Intra module refs:   LL_ConnParamUpdateCback
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D4B - 00015D4C (0x2 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 113
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D4D - 00015D52 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   LL_EncChangeCback
                                                   Segment part 114
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015D53 - 00015DE5 (0x93 bytes), align: 0
  Segment part 116.           Intra module refs:   LL_ReadRemoteVersionInfoCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback
                                   00015D53 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015DE6 - 00015DEB (0x6 bytes), align: 0
  Segment part 118.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015DEC - 00015DEF (0x4 bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 118
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015DF0 - 00015DF0 (0x1 bytes), align: 0
  Segment part 120.           Intra module refs:   Segment part 119
                                                   Segment part 126
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015DF1 - 00015DF8 (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 120
                                                   Segment part 20
                                                   Segment part 70
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015DF9 - 00015E00 (0x8 bytes), align: 0
  Segment part 122.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E01 - 00015E0A (0xa bytes), align: 0
  Segment part 123.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E0B - 00015E0E (0x4 bytes), align: 0
  Segment part 124.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E0F - 00015E12 (0x4 bytes), align: 0
  Segment part 125.           Intra module refs:   Segment part 124
                                                   Segment part 127
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E13 - 00015E1C (0xa bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 129
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E1D - 00015E22 (0x6 bytes), align: 0
  Segment part 127.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E23 - 00015E26 (0x4 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E27 - 00015E2E (0x8 bytes), align: 0
  Segment part 129.           Intra module refs:   Segment part 128
                                                   Segment part 130
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E2F - 00015E34 (0x6 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015E35 - 00015F77 (0x143 bytes), align: 0
  Segment part 131.           Intra module refs:   LL_EncLtkReqCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback       00015E35 
               calls direct
               XSTACK = 00000002 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F78 - 00015F7B (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F7C - 00015F80 (0x5 bytes), align: 0
  Segment part 134.           Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 133
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F81 - 00015F8D (0xd bytes), align: 0
  Segment part 135.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F8E - 00015F8F (0x2 bytes), align: 0
  Segment part 136.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F90 - 00015F98 (0x9 bytes), align: 0
  Segment part 137.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
                                                   Segment part 136
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015F99 - 00015FA0 (0x8 bytes), align: 0
  Segment part 138.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FA1 - 00015FEC (0x4c bytes), align: 0
  Segment part 139.           Intra module refs:   LL_EncChangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback       00015FA1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FED - 00015FED (0x1 bytes), align: 0
  Segment part 141.           Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FEE - 00015FF0 (0x3 bytes), align: 0
  Segment part 142.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 141
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FF1 - 00015FF6 (0x6 bytes), align: 0
  Segment part 143.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   Segment part 142
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FF7 - 00015FF8 (0x2 bytes), align: 0
  Segment part 144.           Intra module refs:   HCI_DataBufferOverflowEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015FF9 - 00016000 (0x8 bytes), align: 0
  Segment part 145.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 144
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016001 - 00016010 (0x10 bytes), align: 0
  Segment part 146.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016011 - 0001602C (0x1c bytes), align: 0
  Segment part 147.           Intra module refs:   Segment part 146
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001602D - 00016033 (0x7 bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 103
                                                   Segment part 147
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016034 - 0001607B (0x48 bytes), align: 0
  Segment part 149.           Intra module refs:   LL_EncKeyRefreshCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback   00016034 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001607C - 00016086 (0xb bytes), align: 0
  Segment part 151.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016087 - 0001609E (0x18 bytes), align: 0
  Segment part 152.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEndDoneCback
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001609F - 000160AA (0xc bytes), align: 0
  Segment part 155.           Intra module refs:   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D69 - 00004D6E (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks::?relay
                                   00004D69        HCI_Init (hci_tl)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D6F - 00004D74 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DataBufferOverflowEvent::?relay
                                   00004D6F        HCI_TxDataBufferInsert (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D75 - 00004D7A (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent::?relay
                                   00004D75        HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   LL_TxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D7B - 00004D80 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent::?relay
                                   00004D7B        HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   LL_RandCback (hci)
                                                   Segment part 115 (hci)
                                                   Segment part 132 (hci)
                                                   Segment part 152 (hci)
                                                   Segment part 68 (hci)
                                                   Segment part 81 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D81 - 00004D86 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent::?relay
                                   00004D81        Segment part 159 (hci)
                                                   Segment part 199 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D87 - 00004D8C (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent::?relay
                                   00004D87        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HardwareErrorEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D8D - 00004D92 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HCI_CommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent::?relay
                                   00004D8D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D93 - 00004D98 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent::?relay
                                   00004D93 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D99 - 00004D9E (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   HCI_SendCommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent::?relay
                                   00004D99 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AdvReportCback::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004D9F - 00004DA4 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback::?relay
                                   00004D9F        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DA5 - 00004DAA (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback::?relay
                                   00004DA5        llConnTerminate (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DAB - 00004DB0 (0x6 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback::?relay
                                   00004DAB        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DB1 - 00004DB6 (0x6 bytes), align: 0
  Segment part 117.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback::?relay
                                   00004DB1        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DB7 - 00004DBC (0x6 bytes), align: 0
  Segment part 132.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback::?relay
                                   00004DB7        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DBD - 00004DC2 (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback::?relay
                                   00004DBD        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DC3 - 00004DC8 (0x6 bytes), align: 0
  Segment part 150.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback::?relay
                                   00004DC3        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEndDoneCback::?relay
                                   
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_if

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020E15 - 00020E7D (0x69 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_RegisterApp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp       00020E15 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020E7E - 00020ED1 (0x54 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_SendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData          00020E7E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020ED2 - 00020EF3 (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   L2CAP_CmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject         00020ED2 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_EchoReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_InfoReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020EF4 - 00020EF8 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   L2CAP_ConnParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020EF9 - 00020F1C (0x24 bytes), align: 0
  Segment part 17.            Intra module refs:   L2CAP_ConnParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq
                                   00020EF9 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020F1D - 00020F1F (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   L2CAP_CmdReject
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020F20 - 00020F24 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 16
                                                   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020F25 - 00020F29 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   L2CAP_SendData
                                                   Segment part 20
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DC9 - 00004DCE (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp::?relay
                                   00004DC9        GAP_Init (gap_task)
                                                   GATT_Init (gatt_task)
                                                   SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DCF - 00004DD4 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData::?relay
                                   00004DCF        attSendMsg (att_util)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DD5 - 00004DDA (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject::?relay
                                   00004DD5        gapProcessOSALMsg (gap_task)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_EchoReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_InfoReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DDB - 00004DE0 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq::?relay
                                   00004DDB        gapRole_startConnUpdate (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateRsp::?relay
                                   
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000034D - 0000034D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_Init
                                                   L2CAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capTaskID             0000034D        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000034E - 00000359 (0xc bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_Init
                                                   l2capProcessReq
                                                   l2capProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFixedChannels      0000034E        L2CAP_RegisterApp (l2cap_if)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035A - 00000371 (0x18 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capChannels           0000035A        Segment part 108 (l2cap_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CDB9 - 0001CE25 (0x6d bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init              0001CDB9 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE26 - 0001CE6B (0x46 bytes), align: 0
  Segment part 11.            Intra module refs:   L2CAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent      0001CE26 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE6C - 0001CE70 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   L2CAP_ProcessEvent
                                                   l2capProcessSignal
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE71 - 0001CF65 (0xf5 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData      0001CE71 
               calls direct
               XSTACK = 0000000C ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF66 - 0001D061 (0xfc bytes), align: 0
  Segment part 16.            Intra module refs:   l2capProcessSignal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal      0001CF66 
               calls direct
               XSTACK = 0000000F ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D062 - 0001D14B (0xea bytes), align: 0
  Segment part 18.            Intra module refs:   l2capProcessRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp         0001D062 
               calls direct
               XSTACK = 00000018 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D14C - 0001D206 (0xbb bytes), align: 0
  Segment part 20.            Intra module refs:   l2capProcessReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq         0001D14C 
               calls direct
               XSTACK = 00000018 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D207 - 0001D20D (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capProcessReq
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DE1 - 00004DE6 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init::?relay      00004DE1        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DE7 - 00004DEC (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent::?relay
                                   00004DE7        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DED - 00004DF2 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   L2CAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData::?relay
                                   00004DED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DF3 - 00004DF8 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capProcessRxData
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal::?relay
                                   00004DF3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DF9 - 00004DFE (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp::?relay
                                   00004DF9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004DFF - 00004E04 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq::?relay
                                   00004DFF 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000372 - 00000372 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A3E - 00018A65 (0x28 bytes), align: 0
  Segment part 7.             Intra module refs:   l2capParseSignalHdr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr     00018A3E 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A66 - 00018A66 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   l2capParsePacket
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A67 - 00018A6E (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A6F - 00018A70 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   l2capParseCmdReject
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A71 - 00018A74 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A75 - 00018A7F (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018A80 - 00018B54 (0xd5 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capSendReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq            00018A80 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018B55 - 00018B59 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   l2capNotifySignal
                                                   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018B5A - 00018C2A (0xd1 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capSendCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd            00018B5A 
               calls direct
               XSTACK = 00000016 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2B - 00018C32 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018C33 - 00018D0C (0xda bytes), align: 0
  Segment part 20.            Intra module refs:   l2capEncapSendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData      00018C33 
               calls direct
               XSTACK = 00000018 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018D0D - 00018D11 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capEncapSendData
                                                   l2capParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018D12 - 00018D15 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   l2capEncapSendData
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018D16 - 00018D24 (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018D25 - 00018D2D (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018D2E - 00018E02 (0xd5 bytes), align: 0
  Segment part 26.            Intra module refs:   l2capParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket        00018D2E 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E03 - 00018E04 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   l2capParsePacket
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E05 - 00018E0C (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E0D - 00018E61 (0x55 bytes), align: 0
  Segment part 30.            Intra module refs:   L2CAP_BuildCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject    00018E0D 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E62 - 00018E74 (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   L2CAP_BuildCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E75 - 00018E78 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 23
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018E79 - 00018EFA (0x82 bytes), align: 0
  Segment part 34.            Intra module refs:   l2capParseCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject     00018E79 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018EFB - 00018F05 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoReq       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F06 - 00018F06 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F07 - 00018F0E (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseEchoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildInfoReq       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F0F - 00018F15 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   l2capFreeChannel
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseInfoReq      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildInfoRsp      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F16 - 00018F1E (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 77
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F1F - 00018F23 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   L2CAP_bm_alloc
                                                   l2capFindLocalId
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseInfoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F24 - 00018F28 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   l2capAllocChannel
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F29 - 00018F2D (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F2E - 00018F37 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 67
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F38 - 00018F3F (0x8 bytes), align: 0
  Segment part 70.            Intra module refs:   l2capNotifySignal
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F40 - 00018F62 (0x23 bytes), align: 0
  Segment part 71.            Intra module refs:   l2capBuildParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq
                                   00018F40 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F63 - 00018F66 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F67 - 00018F75 (0xf bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F76 - 00018F7C (0x7 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 33
                                                   Segment part 58
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F7D - 00018F85 (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F86 - 00018F95 (0x10 bytes), align: 0
  Segment part 77.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F96 - 00018F99 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018F9A - 00018FA4 (0xb bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 74
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FA5 - 00018FA5 (0x1 bytes), align: 0
  Segment part 80.            Intra module refs:   l2capParseSignalHdr
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FA6 - 00018FAA (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 80
                                                   l2capBuildParamUpdateReq
                                                   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FAB - 00018FE2 (0x38 bytes), align: 0
  Segment part 82.            Intra module refs:   L2CAP_ParseParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq
                                   00018FAB 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FE3 - 00018FE8 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FE9 - 00018FFA (0x12 bytes), align: 0
  Segment part 85.            Intra module refs:   L2CAP_ParseParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FFB - 00018FFE (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00018FFF - 00019011 (0x13 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   Segment part 93
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildParamUpdateRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019012 - 0001902D (0x1c bytes), align: 0
  Segment part 90.            Intra module refs:   l2capParseParamUpdateRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp
                                   00019012 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001902E - 00019036 (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019037 - 0001903C (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001903D - 000190AD (0x71 bytes), align: 0
  Segment part 94.            Intra module refs:   l2capNotifyData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData         0001903D 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000190AE - 00019132 (0x85 bytes), align: 0
  Segment part 96.            Intra module refs:   l2capNotifySignal::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal       000190AE 
               calls direct
               XSTACK = 0000000D ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019133 - 0001913A (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 99
                                                   l2capNotifyData
                                                   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001913B - 00019140 (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019141 - 00019199 (0x59 bytes), align: 0
  Segment part 100.           Intra module refs:   l2capAllocChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel       00019141 
               XSTACK = 00000012 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001919A - 0001919E (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   l2capAllocChannel
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001919F - 000191A9 (0xb bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 102
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000191AA - 000191BE (0x15 bytes), align: 0
  Segment part 104.           Intra module refs:   l2capFreeChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel        000191AA 
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000191BF - 000191F6 (0x38 bytes), align: 0
  Segment part 106.           Intra module refs:   l2capFindLocalId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId        000191BF 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000191F7 - 00019206 (0x10 bytes), align: 0
  Segment part 108.           Intra module refs:   l2capAllocChannel
                                                   l2capFindLocalId
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019207 - 0001921F (0x19 bytes), align: 0
  Segment part 109.           Intra module refs:   l2capStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer          00019207 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019220 - 00019284 (0x65 bytes), align: 0
  Segment part 111.           Intra module refs:   l2capHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB      00019220 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019285 - 00019287 (0x3 bytes), align: 0
  Segment part 113.           Intra module refs:   l2capHandleRxError::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError      00019285 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019288 - 000192AB (0x24 bytes), align: 0
  Segment part 115.           Intra module refs:   L2CAP_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc          00019288 
               calls direct
               XSTACK = 00000018 ( 0000000A )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E05 - 00004E0A (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr::?relay
                                   00004E05        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E0B - 00004E10 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq::?relay    00004E0B        Segment part 16 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E11 - 00004E16 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd::?relay    00004E11        Segment part 19 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E17 - 00004E1C (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData::?relay
                                   00004E17        L2CAP_SendData (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E1D - 00004E22 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket::?relay
                                   00004E1D        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E23 - 00004E28 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject::?relay
                                   00004E23        L2CAP_CmdReject (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E29 - 00004E2E (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject::?relay
                                   00004E29        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseEchoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E2F - 00004E34 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq::?relay
                                   00004E2F        L2CAP_ConnParamUpdateReq (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E35 - 00004E3A (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq::?relay
                                   00004E35        l2capProcessReq (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildParamUpdateRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E3B - 00004E40 (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp::?relay
                                   00004E3B        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E41 - 00004E46 (0x6 bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData::?relay
                                   00004E41        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E47 - 00004E4C (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   l2capHandleTimerCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal::?relay
                                   00004E47        l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E4D - 00004E52 (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel::?relay
                                   00004E4D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E53 - 00004E58 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   l2capHandleTimerCB
                                                   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel::?relay
                                   00004E53        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E59 - 00004E5E (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId::?relay
                                   00004E59        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E5F - 00004E64 (0x6 bytes), align: 0
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer::?relay
                                   00004E5F        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E65 - 00004E6A (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   l2capSendReq
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB::?relay
                                   00004E65 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E6B - 00004E70 (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError::?relay
                                   00004E6B        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E71 - 00004E76 (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc::?relay
                                   00004E71        attSendMsg (att_util)
                                                   smSendSMMsg (smp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : linkdb

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000373 - 00000395 (0x23 bytes), align: 0
  Segment part 6.             Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000396 - 000003AD (0x18 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 37
                                                   linkDB_Register
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4AF - 0001E4D6 (0x28 bytes), align: 0
  Segment part 8.             Intra module refs:   linkDB_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init             0001E4AF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4D7 - 0001E514 (0x3e bytes), align: 0
  Segment part 10.            Intra module refs:   linkDB_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register         0001E4D7 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E515 - 0001E5D2 (0xbe bytes), align: 0
  Segment part 12.            Intra module refs:   linkDB_Add::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add              0001E515 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E5D3 - 0001E634 (0x62 bytes), align: 0
  Segment part 14.            Intra module refs:   linkDB_Remove::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove           0001E5D3 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Update           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E635 - 0001E63D (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E63E - 0001E659 (0x1c bytes), align: 0
  Segment part 19.            Intra module refs:   linkDB_Find::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find             0001E63E 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E65A - 0001E67A (0x21 bytes), align: 0
  Segment part 21.            Intra module refs:   linkDB_FindFirst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst        0001E65A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E67B - 0001E681 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E682 - 0001E6AC (0x2b bytes), align: 0
  Segment part 24.            Intra module refs:   linkDB_State::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State            0001E682 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E6AD - 0001E6B1 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   linkDB_Remove
                                                   linkDB_State
                                                   reportStatusChange
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E6B2 - 0001E6C0 (0xf bytes), align: 0
  Segment part 27.            Intra module refs:   linkDB_NumActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive        0001E6B2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E6C1 - 0001E731 (0x71 bytes), align: 0
  Segment part 29.            Intra module refs:   linkDB_Authen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen           0001E6C1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E732 - 0001E735 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   linkDB_Add
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E736 - 0001E73A (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   linkDB_Authen
                                                   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E73B - 0001E760 (0x26 bytes), align: 0
  Segment part 33.            Intra module refs:   linkDB_PerformFunc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc      0001E73B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E761 - 0001E797 (0x37 bytes), align: 0
  Segment part 35.            Intra module refs:   reportStatusChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange      0001E761 
               XSTACK = 00000014 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E798 - 0001E7A8 (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   linkDB_Init
                                                   reportStatusChange
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E77 - 00004E7C (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init::?relay     00004E77        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E7D - 00004E82 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register::?relay
                                   00004E7D        BT_AddService (battservice)
                                                   GATTServApp_Init (gattservapp)
                                                   GATT_InitServer (gatt_server)
                                                   HP_AddService (hitpoint)
                                                   MR_AddService (motorrun)
                                                   PM_AddService (pedometer)
                                                   SM_Init (sm_task)
                                                   ST_AddService (systemtest)
                                                   WC_AddService (wechatprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E83 - 00004E88 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add::?relay      00004E83        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E89 - 00004E8E (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove::?relay   00004E89        gapProcessDisconnectCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Update::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E8F - 00004E94 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   linkDB_Add
                                                   linkDB_Authen
                                                   linkDB_Remove
                                                   linkDB_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find::?relay     00004E8F        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 48 (gap_linkmgr)
                                                   Segment part 61 (gap_linkmgr)
                                                   Segment part 84 (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E95 - 00004E9A (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst::?relay
                                   00004E95        disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004E9B - 00004EA0 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State::?relay    00004E9B        BT_HandleConnStatusCB (battservice)
                                                   HP_HandleConnStatusCB (hitpoint)
                                                   L2CAP_SendData (l2cap_if)
                                                   MR_HandleConnStatusCB (motorrun)
                                                   PM_HandleConnStatusCB (pedometer)
                                                   ST_HandleConnStatusCB (systemtest)
                                                   WC_HandleConnStatusCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EA1 - 00004EA6 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive::?relay
                                   00004EA1        GAP_NumActiveConnections (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EA7 - 00004EAC (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen::?relay   00004EA7        GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EAD - 00004EB2 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc::?relay
                                   00004EAD        GAPBondMgr_ServiceChangeInd (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EB3 - 00004EB8 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 18
                                                   linkDB_Add
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange::?relay
                                   00004EB3 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PMUX                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APCFG                   000000F2 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 14. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 15. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 16. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 17. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003AE - 000003B3 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_Init
                                                   LL_ReadBDADDR
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownPublicAddr           000003AE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003B4 - 000003B9 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_Init
                                                   LL_SetAdvParam
                                                   LL_SetRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownRandomAddr           000003B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003BA - 000003BF (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownSavedPublicAddr      000003BA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C0 - 000003C0 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TaskID               000003C0        LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C1 - 000003C1 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_Rand
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llState                 000003C1        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFreeTask (ll_scheduler)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C2 - 000003C2 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCause            000003C2        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C3 - 000003C4 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_Rand
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           postRfOperations        000003C3        llProcessPostRfOps (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C5 - 000003C5 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_ReadRssi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rssiCorrection          000003C5        llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C6 - 000003C6 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_EXT_ClkDivOnHalt
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clkDivOnHalt            000003C6        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C7 - 000003C7 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nvInUse                 000003C7        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003C8 - 000003D3 (0xc bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfCounters              000003C8        llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003D4 - 000003DC (0x9 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceFeatureSet        000003D4        llAllocConnId (ll_common)
                                                   llInitFeatureSet (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003DD - 000003DD (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maxTxPwrForDTM          000003DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003DE - 000003E2 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           verInfo                 000003DE        llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003E3 - 000003EA (0x8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dtmInfo                 000003E3        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003EB - 000003EC (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buildInfo               000003EB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000003ED - 000004F4 (0x108 bytes), align: 0
  Segment part 39.            Intra module refs:   LL_ConnActive
                                                   LL_Disconnect
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_ReadRssi
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConns                 000003ED        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llGetNextConn (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000004F5 - 000004FB (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           peerInfo                000004F5        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000004FC - 00000500 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chanMapUpdate           000004FC        llAllocConnId (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000501 - 00000501 (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onePktPerEvt            00000501        llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000502 - 00000502 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fastTxRespTime          00000502 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000503 - 00000503 (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           slOverride              00000503        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000504 - 00000558 (0x55 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_Init
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           advInfo                 00000504        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCheckWhiteListUsage (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llStartAdvSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000559 - 0000055A (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dcdcData                00000559        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055B - 0000055B (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extendRfRange           0000055B        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055C - 0000055C (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   LL_CtrlToHostFlowControl
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rxFifoFlowCtrl          0000055C        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055D - 0000055D (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_EXT_ClkDivOnHalt
                                                   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           haltDuringRf            0000055D        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B27 - 00000B34 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCauses           00000B27        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B35 - 00000B40 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskErrorEndCauses      00000B35        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           psbs9Data               
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055E - 0000055E (0x1 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trngCounter             0000055E        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
IDATA_Z
  Relative segment, address: IDATA 00000029 - 0000002A (0x2 bytes), align: 0
  Segment part 56. ROOT.      Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           myPC                    00000029        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D27 - 00011F03 (0x1dd bytes), align: 0
  Segment part 68.            Intra module refs:   LL_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init                 00011D27 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011F04 - 000120FE (0x1fb bytes), align: 0
  Segment part 70.            Intra module refs:   LL_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent         00011F04 
               calls direct
               XSTACK = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000120FF - 000121D1 (0xd3 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset                000120FF 
               calls direct
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000121D2 - 0001221C (0x4b bytes), align: 0
  Segment part 74.            Intra module refs:   LL_ReadBDADDR::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR           000121D2 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001221D - 00012267 (0x4b bytes), align: 0
  Segment part 76.            Intra module refs:   LL_SetRandomAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress     0001221D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012268 - 00012279 (0x12 bytes), align: 0
  Segment part 78.            Intra module refs:   LL_ClearWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList       00012268 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001227A - 000122B9 (0x40 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_AddWhiteListDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice   0001227A 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RemoveWhiteListDevice
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadWlSize           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_NumEmptyWlEntries    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000122BA - 000122EE (0x35 bytes), align: 0
  Segment part 88.            Intra module refs:   LL_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt              000122BA 
               calls direct
               XSTACK = 00000002 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000122EF - 0001233A (0x4c bytes), align: 0
  Segment part 90.            Intra module refs:   LL_Rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand                 000122EF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001233B - 00012369 (0x2f bytes), align: 0
  Segment part 92.            Intra module refs:   LL_PseudoRand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand           0001233B 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 94. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadSupportedStates
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalSupportedFeatures
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalVersionInfo
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001236A - 0001238C (0x23 bytes), align: 0
  Segment part 100.           Intra module refs:   LL_CtrlToHostFlowControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl
                                   0001236A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfo
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadTxPowerLevel     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadChanMap          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001238D - 000123D9 (0x4d bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ReadRssi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi             0001238D 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000123DA - 0001245D (0x84 bytes), align: 0
  Segment part 110.           Intra module refs:   LL_Disconnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect           000123DA 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 112. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001245E - 00012462 (0x5 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_AddWhiteListDevice
                                                   LL_Disconnect
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012463 - 0001266F (0x20d bytes), align: 0
  Segment part 115.           Intra module refs:   LL_TxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData               00012463 
               calls direct
               XSTACK = 00000001 ( 00000016 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestTxTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 119. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestRxTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 121. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEnd        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012670 - 0001285A (0x1eb bytes), align: 0
  Segment part 123.           Intra module refs:   LL_SetAdvParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam          00012670 
               calls direct
               XSTACK = 00000006 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001285B - 00012898 (0x3e bytes), align: 0
  Segment part 125.           Intra module refs:   LL_SetAdvData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData           0001285B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012899 - 0001289D (0x5 bytes), align: 0
  Segment part 127.           Intra module refs:   LL_Encrypt
                                                   LL_ProcessEvent
                                                   LL_PseudoRand
                                                   LL_SetAdvData
                                                   LL_SetScanRspData
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001289E - 000129FD (0x160 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_SetAdvControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl        0001289E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000129FE - 00012A02 (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_Init
                                                   LL_Rand
                                                   LL_SetAdvControl
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadAdvChanTxPower   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012A03 - 00012A43 (0x41 bytes), align: 0
  Segment part 133.           Intra module refs:   LL_SetScanRspData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData       00012A03 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012A44 - 00012AB6 (0x73 bytes), align: 0
  Segment part 135.           Intra module refs:   LL_EncLtkReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply          00012A44 
               calls direct
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012AB7 - 00012B02 (0x4c bytes), align: 0
  Segment part 137.           Intra module refs:   LL_EncLtkNegReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply       00012AB7 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B03 - 00012B23 (0x21 bytes), align: 0
  Segment part 139.           Intra module refs:   LL_ConnActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnActive           00012B03 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGain        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPower       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 145. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_OnePacketPerEvent
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B24 - 00012B24 (0x1 bytes), align: 0
  Segment part 148.           Intra module refs:   LL_ReadBDADDR
                                                   LL_SetRandomAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B25 - 00012B26 (0x2 bytes), align: 0
  Segment part 149.           Intra module refs:   Segment part 148
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B27 - 00012B2D (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   LL_ClearWhiteList
                                                   LL_ConnActive
                                                   LL_CtrlToHostFlowControl
                                                   LL_EXT_ClkDivOnHalt
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   Segment part 149
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B2E - 00012B57 (0x2a bytes), align: 0
  Segment part 151.           Intra module refs:   LL_EXT_ClkDivOnHalt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ClkDivOnHalt     00012B2E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DeclareNvUsage   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_Decrypt          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetLocalSupportedFeatures
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 159. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFastTxResponseTime
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSlaveLatencyOverride
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestTx      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemHopTestTx   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestRx      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_EndModemTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetBDADDR        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSCA           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFreqTune      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SaveFreqTune     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 179. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetMaxDtmTxPower
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_MapPmIoPort      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DisconnectImmed
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRate
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PERbyChan        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRange    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_HaltDuringRf     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_AdvEventNotice   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 195. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ConnEventNotice
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 197. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_BuildRevision    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003196 - 000031A3 (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   taskEndCauses
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031A4 - 000031AF (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   taskErrorEndCauses
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 57. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 58. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081A7 - 000081AA (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_190          000081A7 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000819F - 000081A2 (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_Reset
                                                   llSetupAdv (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_555555       0000819F 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 61. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000819B - 0000819E (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_6            0000819B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000823B - 0000823E (0x4 bytes), align: 0
  Segment part 63.            Intra module refs:   LL_SetAdvControl
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData
                                                   Segment part 94 (ll_timer2)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       0000823B 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_71764129     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081EF - 000081F2 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   LL_SetAdvControl
                                                   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3            000081EF 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_b            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff00     
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EB9 - 00004EBE (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init::?relay         00004EB9        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EBF - 00004EC4 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent::?relay
                                   00004EBF        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EC5 - 00004ECA (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset::?relay        00004EC5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ECB - 00004ED0 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR::?relay   00004ECB        HCI_ReadBDADDRCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ED1 - 00004ED6 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress::?relay
                                   00004ED1        HCI_LE_SetRandomAddressCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004ED7 - 00004EDC (0x6 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList::?relay
                                   00004ED7        HCI_LE_ClearWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EDD - 00004EE2 (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice::?relay
                                   00004EDD        HCI_LE_AddWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RemoveWhiteListDevice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadWlSize::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_NumEmptyWlEntries::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EE3 - 00004EE8 (0x6 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt::?relay      00004EE3        Segment part 82 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EE9 - 00004EEE (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand::?relay         00004EE9        HCI_LE_RandCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EEF - 00004EF4 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand::?relay   00004EEF        Onboard_rand (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadSupportedStates::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalSupportedFeatures::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalVersionInfo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EF5 - 00004EFA (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl::?relay
                                   00004EF5        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadTxPowerLevel::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 107. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadChanMap::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004EFB - 00004F00 (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi::?relay     00004EFB        HCI_ReadRssiCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F01 - 00004F06 (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect::?relay   00004F01        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F07 - 00004F0C (0x6 bytes), align: 0
  Segment part 116.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData::?relay       00004F07        HCI_TxDataSend (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestTxTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 120. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestRxTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 122. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEnd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F0D - 00004F12 (0x6 bytes), align: 0
  Segment part 124.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam::?relay
                                   00004F0D        HCI_LE_SetAdvParamCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F13 - 00004F18 (0x6 bytes), align: 0
  Segment part 126.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData::?relay   00004F13        HCI_LE_SetAdvDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F19 - 00004F1E (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl::?relay
                                   00004F19        HCI_LE_SetAdvEnableCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 132. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadAdvChanTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F1F - 00004F24 (0x6 bytes), align: 0
  Segment part 134.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData::?relay
                                   00004F1F        HCI_LE_SetScanRspDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F25 - 00004F2A (0x6 bytes), align: 0
  Segment part 136.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply::?relay
                                   00004F25        HCI_LE_LtkReqReplyCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F2B - 00004F30 (0x6 bytes), align: 0
  Segment part 138.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply::?relay
                                   00004F2B        HCI_LE_LtkReqNegReplyCmd (hci)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F31 - 00004F36 (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnActive::?relay   00004F31        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGain::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 144. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_OnePacketPerEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F37 - 00004F3C (0x6 bytes), align: 0
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ClkDivOnHalt::?relay
                                   00004F37        HCI_EXT_ClkDivOnHaltCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DeclareNvUsage::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 156. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_Decrypt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetLocalSupportedFeatures::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFastTxResponseTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSlaveLatencyOverride::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestTx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemHopTestTx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestRx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 170. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_EndModemTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetBDADDR::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSCA::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 176. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFreqTune::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SaveFreqTune::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 180. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetMaxDtmTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_MapPmIoPort::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DisconnectImmed::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 186. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PERbyChan::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRange::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_HaltDuringRf::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_AdvEventNotice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 196. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ConnEventNotice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 198. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_BuildRevision::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 199. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 200. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 201. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201A7 - 000201AA (0x4 bytes), align: 0
  Segment part 202.           Intra module refs:   __Constant_190
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002019F - 000201A2 (0x4 bytes), align: 0
  Segment part 203.           Intra module refs:   __Constant_555555
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 204. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002019B - 0002019E (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   __Constant_6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002023B - 0002023E (0x4 bytes), align: 0
  Segment part 206.           Intra module refs:   __Constant_ffffff
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 207. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201EF - 000201F2 (0x4 bytes), align: 0
  Segment part 208.           Intra module refs:   __Constant_3
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 209. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 210. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_advEndCauses

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016D29 - 00016D49 (0x21 bytes), align: 0
  Segment part 16.            Intra module refs:   llDirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk
                                   00016D29 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016D4A - 00016D53 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   llAdvEvt_TaskAbort
                                                   llDirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016D54 - 0001743A (0x6e7 bytes), align: 0
  Segment part 19.            Intra module refs:   llAdvEvt_TaskConnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect    00016D54 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001743B - 00017656 (0x21c bytes), align: 0
  Segment part 21.            Intra module refs:   llUndirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk
                                   0001743B 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017657 - 0001765E (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk
                                                   llNonConnAdvEvt_TaskEndOk
                                                   llUndirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001765F - 00017819 (0x1bb bytes), align: 0
  Segment part 24.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk
                                   0001765F 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001781A - 00017976 (0x15d bytes), align: 0
  Segment part 26.            Intra module refs:   llNonConnAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk
                                   0001781A 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017977 - 00017999 (0x23 bytes), align: 0
  Segment part 28.            Intra module refs:   llAdvEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort      00017977 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from ll_common
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F3D - 00004F42 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk::?relay
                                   00004F3D        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F43 - 00004F48 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect::?relay
                                   00004F43        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F49 - 00004F4E (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk::?relay
                                   00004F49        llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F4F - 00004F54 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk::?relay
                                   00004F4F        llSetupScannableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F55 - 00004F5A (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk::?relay
                                   00004F55        llSetupNonConnectableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F5B - 00004F60 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort::?relay
                                   00004F5B        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 34. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_common

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from betwine_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AF - 000000AF (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1STAT                  000000AF 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                
    -------------------------------------------------------------------------
SFR_AN
  Segment part 14. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DA - 000000DA (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0L                  000000DA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0H                  000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 18. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTL                  000000E2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTH                  000000E3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 23. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 24. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 25. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008000 - 00008096 (0x97 bytes), align: 0
  Segment part 42.            Intra module refs:   llRfInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit                00008000 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008097 - 000080C3 (0x2d bytes), align: 0
  Segment part 44.            Intra module refs:   llSetFreqTune::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune           00008097 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000080C4 - 00008109 (0x46 bytes), align: 0
  Segment part 46.            Intra module refs:   llClearSetInts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts          000080C4 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableRfInts         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearRfInts           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnableRfInts          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000810A - 00008239 (0x130 bytes), align: 0
  Segment part 54.            Intra module refs:   llProcessPostRfOps::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps      0000810A 
               calls direct
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000823A - 0000823E (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   llProcessPostRfOps
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetRxGain             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000823F - 00008240 (0x2 bytes), align: 0
  Segment part 59.            Intra module refs:   llStartAdvSetup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008241 - 00008241 (0x1 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   Segment part 82
                                                   llExtendRfRange
                                                   llSetupNonConnectableAdvEvt
                                                   llSetupScannableAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008242 - 00008248 (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 56
                                                   Segment part 60
                                                   llCheckWhiteListUsage
                                                   llClearSetInts
                                                   llGetNextConn
                                                   llMemCopySrc
                                                   llReleaseAllConnId
                                                   llReplaceCtrlPkt
                                                   llRfInit
                                                   llSetFreqTune
                                                   llSetupAdv
                                                   llSetupStartEncReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetTxPower            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTxPower            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008249 - 000083DA (0x192 bytes), align: 0
  Segment part 66.            Intra module refs:   llFindTxPowerSettings::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings   00008249 
               calls direct
               XSTACK = 00000000 ( 00000022 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000083DB - 000083DF (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000083E0 - 00008454 (0x75 bytes), align: 0
  Segment part 69.            Intra module refs:   llExtendRfRange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange         000083E0 
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimeToStableXOSC   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008455 - 00008459 (0x5 bytes), align: 0
  Segment part 73.            Intra module refs:   llSetupDirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000845A - 00008474 (0x1b bytes), align: 0
  Segment part 74.            Intra module refs:   llCheckWhiteListUsage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage   0000845A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008475 - 000084E9 (0x75 bytes), align: 0
  Segment part 76.            Intra module refs:   llSetupAdv::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv              00008475 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000084EA - 00008618 (0x12f bytes), align: 0
  Segment part 78.            Intra module refs:   llSetupDirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt   000084EA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008619 - 0000876E (0x156 bytes), align: 0
  Segment part 80.            Intra module refs:   llSetupUndirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt
                                   00008619 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000876F - 00008773 (0x5 bytes), align: 0
  Segment part 82.            Intra module refs:   llInitFeatureSet
                                                   llSetupUndirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008774 - 00008875 (0x102 bytes), align: 0
  Segment part 83.            Intra module refs:   llSetupNonConnectableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt
                                   00008774 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008876 - 000089D2 (0x15d bytes), align: 0
  Segment part 85.            Intra module refs:   llSetupScannableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt
                                   00008876 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupInit             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupConn             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000089D3 - 000089EB (0x19 bytes), align: 0
  Segment part 91.            Intra module refs:   llStartAdvSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup         000089D3 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000089EC - 00008A48 (0x5d bytes), align: 0
  Segment part 93.            Intra module refs:   llStartSlaveSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup       000089EC 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartRawSetup         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateParamReq   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateChanReq    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008A49 - 00008B2A (0xe2 bytes), align: 0
  Segment part 103.           Intra module refs:   llSetupEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp           00008A49 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008B2B - 00008B5D (0x33 bytes), align: 0
  Segment part 105.           Intra module refs:   llSetupStartEncReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq      00008B2B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008B5E - 00008BCD (0x70 bytes), align: 0
  Segment part 107.           Intra module refs:   llSetupStartEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp      00008B5E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncReq      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008BCE - 00008C47 (0x7a bytes), align: 0
  Segment part 111.           Intra module refs:   llSetupPauseEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp      00008BCE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008C48 - 00008C90 (0x49 bytes), align: 0
  Segment part 113.           Intra module refs:   llSetupRejectInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd        00008C48 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008C91 - 00008C91 (0x1 bytes), align: 0
  Segment part 115.           Intra module refs:   llStartSlaveSetup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008C92 - 00008C96 (0x5 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   llAllocConnId
                                                   llConnTerminate
                                                   llProcessPendingTxData
                                                   llSetupEncRsp
                                                   llSetupRejectInd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetReq    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008C97 - 00008D5D (0xc7 bytes), align: 0
  Segment part 119.           Intra module refs:   llSetupFeatureSetRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp    00008C97 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008D5E - 00008D62 (0x5 bytes), align: 0
  Segment part 121.           Intra module refs:   llConnCleanup
                                                   llConvertCtrlProcTimeoutToEvent
                                                   llConvertLstoToEvent
                                                   llDequeueCtrlPkt
                                                   llSetupFeatureSetRsp
                                                   llSetupPauseEncRsp
                                                   llSetupStartEncRsp
                                                   llSetupTermInd
                                                   llSetupUnknownRsp
                                                   llSetupVersionIndReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008D63 - 00008E67 (0x105 bytes), align: 0
  Segment part 122.           Intra module refs:   llSetupVersionIndReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq    00008D63 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008E68 - 00008F46 (0xdf bytes), align: 0
  Segment part 124.           Intra module refs:   llSetupTermInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd          00008E68 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008F47 - 00008FD1 (0x8b bytes), align: 0
  Segment part 126.           Intra module refs:   llSetupUnknownRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp       00008F47 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00008FD2 - 0000903F (0x6e bytes), align: 0
  Segment part 128.           Intra module refs:   llEnqueueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt        00008FD2 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009040 - 000090B3 (0x74 bytes), align: 0
  Segment part 130.           Intra module refs:   llDequeueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt        00009040 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000090B4 - 000090DC (0x29 bytes), align: 0
  Segment part 132.           Intra module refs:   llReplaceCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt        000090B4 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000090DD - 0000919B (0xbf bytes), align: 0
  Segment part 134.           Intra module refs:   llProcessChanMap::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap        000090DD 
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003D90 - 00003E3C (0xad bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextDataChan       00003D90        llAdvEvt_TaskConnect (ll_advEndCauses)
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003E3D - 00003E41 (0x5 bytes), align: 0
  Segment part 171.           Intra module refs:   llGetNextDataChan
                                                   llSetNextDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003E42 - 00003FB5 (0x174 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetNextDataChan       00003E42        LL_TxData (ll)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAtLeastTwoChans       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000919C - 00009315 (0x17a bytes), align: 0
  Segment part 138.           Intra module refs:   llAllocConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId           0000919C 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseConnId         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009316 - 00009332 (0x1d bytes), align: 0
  Segment part 142.           Intra module refs:   llReleaseAllConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId      00009316 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009333 - 00009351 (0x1f bytes), align: 0
  Segment part 144.           Intra module refs:   llGetNextConn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn           00009333 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009352 - 000093E2 (0x91 bytes), align: 0
  Segment part 146.           Intra module refs:   llConnCleanup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup           00009352 
               calls direct
               XSTACK = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000093E3 - 00009407 (0x25 bytes), align: 0
  Segment part 148.           Intra module refs:   llConnTerminate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate         000093E3 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 150. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llPendingUpdateParam    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009408 - 0000942F (0x28 bytes), align: 0
  Segment part 152.           Intra module refs:   llInitFeatureSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet        00009408 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGenerateCRC           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003FB6 - 00003FF2 (0x3d bytes), align: 0
  Segment part 173.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventInRange          00003FB6        llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003FF3 - 00003FFA (0x8 bytes), align: 0
  Segment part 174.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventDelta            00003FF3        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009430 - 000094AA (0x7b bytes), align: 0
  Segment part 156.           Intra module refs:   llConvertLstoToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent    00009430 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000094AB - 00009504 (0x5a bytes), align: 0
  Segment part 158.           Intra module refs:   llConvertCtrlProcTimeoutToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent
                                   000094AB 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009505 - 00009658 (0x154 bytes), align: 0
  Segment part 160.           Intra module refs:   llAdjustForMissedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent
                                   00009505 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009659 - 00009715 (0xbd bytes), align: 0
  Segment part 162.           Intra module refs:   llProcessPendingTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPendingTxData
                                   00009659 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009716 - 000097E8 (0xd3 bytes), align: 0
  Segment part 164.           Intra module refs:   llWriteTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData           00009716 
               calls direct
               XSTACK = 0000000A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000097E9 - 00009816 (0x2e bytes), align: 0
  Segment part 166.           Intra module refs:   llMemCopySrc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc            000097E9 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopyDst            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F61 - 00004F66 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit::?relay        00004F61        LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F67 - 00004F6C (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune::?relay   00004F67        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F6D - 00004F72 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts::?relay
                                   00004F6D        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableRfInts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearRfInts::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnableRfInts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F73 - 00004F78 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps::?relay
                                   00004F73        RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetRxGain::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetTxPower::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTxPower::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F79 - 00004F7E (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings::?relay
                                   00004F79        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F7F - 00004F84 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   llProcessPostRfOps
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange::?relay
                                   00004F7F        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 72. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimeToStableXOSC::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F85 - 00004F8A (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage::?relay
                                   00004F85        LL_AddWhiteListDevice (ll)
                                                   LL_ClearWhiteList (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F8B - 00004F90 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv::?relay      00004F8B        LL_SetAdvControl (ll)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F91 - 00004F96 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt::?relay
                                   00004F91 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F97 - 00004F9C (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt::?relay
                                   00004F97 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004F9D - 00004FA2 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt::?relay
                                   00004F9D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FA3 - 00004FA8 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt::?relay
                                   00004FA3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupInit::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupConn::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FA9 - 00004FAE (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup::?relay
                                   00004FA9        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FAF - 00004FB4 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup::?relay
                                   00004FAF        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartRawSetup::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateParamReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 100. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateChanReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FB5 - 00004FBA (0x6 bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp::?relay   00004FB5        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FBB - 00004FC0 (0x6 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq::?relay
                                   00004FBB        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FC1 - 00004FC6 (0x6 bytes), align: 0
  Segment part 108.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp::?relay
                                   00004FC1        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 110. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FC7 - 00004FCC (0x6 bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp::?relay
                                   00004FC7        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FCD - 00004FD2 (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd::?relay
                                   00004FCD        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FD3 - 00004FD8 (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp::?relay
                                   00004FD3        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FD9 - 00004FDE (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq::?relay
                                   00004FD9        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FDF - 00004FE4 (0x6 bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd::?relay
                                   00004FDF        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FE5 - 00004FEA (0x6 bytes), align: 0
  Segment part 127.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp::?relay
                                   00004FE5        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FEB - 00004FF0 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt::?relay
                                   00004FEB        LL_Disconnect (ll)
                                                   LL_EncLtkNegReply (ll)
                                                   LL_EncLtkReply (ll)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FF1 - 00004FF6 (0x6 bytes), align: 0
  Segment part 131.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt::?relay
                                   00004FF1        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FF7 - 00004FFC (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt::?relay
                                   00004FF7        LL_Disconnect (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00004FFD - 00005002 (0x6 bytes), align: 0
  Segment part 135.           Intra module refs:   llSetNextDataChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap::?relay
                                   00004FFD        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 137. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAtLeastTwoChans::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005003 - 00005008 (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId::?relay   00005003        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseConnId::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005009 - 0000500E (0x6 bytes), align: 0
  Segment part 143.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId::?relay
                                   00005009        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000500F - 00005014 (0x6 bytes), align: 0
  Segment part 145.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn::?relay   0000500F        llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005015 - 0000501A (0x6 bytes), align: 0
  Segment part 147.           Intra module refs:   llConnTerminate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup::?relay   00005015        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000501B - 00005020 (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate::?relay
                                   0000501B        LL_ProcessEvent (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 151. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llPendingUpdateParam::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005021 - 00005026 (0x6 bytes), align: 0
  Segment part 153.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet::?relay
                                   00005021        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGenerateCRC::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005027 - 0000502C (0x6 bytes), align: 0
  Segment part 157.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent::?relay
                                   00005027        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000502D - 00005032 (0x6 bytes), align: 0
  Segment part 159.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent::?relay
                                   0000502D        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005033 - 00005038 (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent::?relay
                                   00005033        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005039 - 0000503E (0x6 bytes), align: 0
  Segment part 163.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPendingTxData::?relay
                                   00005039        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000503F - 00005044 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   llProcessPendingTxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData::?relay   0000503F        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005045 - 0000504A (0x6 bytes), align: 0
  Segment part 167.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc::?relay    00005045        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopyDst::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008217 - 0000821A (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000812A - 00008131 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 33. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff0000     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081AB - 000081AE (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_8e89bed6     000081AB 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 36. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_555555       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081BF - 000081C2 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          000081BF 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 38. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 40. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081C3 - 000081C6 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   llAdjustForMissedEvent
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            000081C3 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020217 - 0002021A (0x4 bytes), align: 0
  Segment part 175.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002012A - 00020131 (0x8 bytes), align: 0
  Segment part 176.           Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 177. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 178. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201AB - 000201AE (0x4 bytes), align: 0
  Segment part 179.           Intra module refs:   __Constant_8e89bed6
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 180. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201BF - 000201C2 (0x4 bytes), align: 0
  Segment part 181.           Intra module refs:   __Constant_800
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 182. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 183. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 184. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201C3 - 000201C6 (0x4 bytes), align: 0
  Segment part 185.           Intra module refs:   __Constant_2

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_constData

  SEGMENTS IN THE MODULE
  ======================
CODE_C
  Relative segment, address: CODE 00005A3C - 00005A3F (0x4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedTxPowerSetting     00005A3C        llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           txOutputPower           
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00005A40 - 00005A43 (0x4 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ptmFreqTune             00005A40        LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
CODE_C
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timeToStableXOSC        
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 10. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_enc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_adc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_crc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_crc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from hal_flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_MoveData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000055F - 0000057E (0x20 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dataPkt                 0000055F        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000057F - 0000058A (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cachedTRNGdata          0000057F        LL_Init (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008030 - 0000804F (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_LoadEmptyIV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeroBlock               00008030 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012B58 - 00012BA7 (0x50 bytes), align: 0
  Segment part 18.            Intra module refs:   LL_ENC_ReverseBytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes     00012B58 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012BA8 - 00012BB3 (0xc bytes), align: 0
  Segment part 20.            Intra module refs:   LL_ENC_GeneratePseudoRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum
                                   00012BA8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012BB4 - 00012C90 (0xdd bytes), align: 0
  Segment part 22.            Intra module refs:   LL_ENC_GenerateTrueRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum
                                   00012BB4 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012C91 - 00012CC0 (0x30 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_ENC_GenDeviceSKD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD     00012C91 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012CC1 - 00012CF0 (0x30 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_ENC_GenDeviceIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV      00012CC1 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012CF1 - 00012CF1 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_ENC_InitAesDMA
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012CF2 - 00012CF8 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
                                                   LL_ENC_GeneratePseudoRandNum
                                                   LL_ENC_LoadEmptyIV
                                                   Segment part 28
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateNonce    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012CF9 - 00012D72 (0x7a bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ENC_AES128_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt   00012CF9 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Decrypt   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012D73 - 00012D77 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_ENC_AES128_Encrypt
                                                   LL_ENC_GenerateTrueRandNum
                                                   LL_ENC_MoveData
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012D78 - 00012DAF (0x38 bytes), align: 0
  Segment part 37.            Intra module refs:   LL_ENC_InitAesDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA       00012D78 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitDMA0         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012DB0 - 00012E01 (0x52 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_ENC_MoveData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData         00012DB0 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupLoadDMA     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupCryptoDMA   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_StartAES         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012E02 - 00012E3E (0x3d bytes), align: 0
  Segment part 49.            Intra module refs:   LL_ENC_LoadEmptyIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV      00012E02 
               XSTACK = 0000002F ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadKey          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00012E3F - 00013059 (0x21b bytes), align: 0
  Segment part 53.            Intra module refs:   LL_ENC_EncryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg       00012E3F 
               XSTACK = 0000001A ( 0000002C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001305A - 00013063 (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   LL_ENC_DecryptMsg
                                                   LL_ENC_EncryptMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013064 - 0001328F (0x22c bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ENC_DecryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg       00013064 
               XSTACK = 0000001E ( 0000002C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013290 - 0001348A (0x1fb bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ENC_GenerateMIC::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC      00013290 
               calls direct
               XSTACK = 00000020 ( 0000002F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001348B - 0001365D (0x1d3 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_ENC_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt          0001348B 
               calls direct
               XSTACK = 00000002 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001365E - 00013665 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013666 - 00013926 (0x2c1 bytes), align: 0
  Segment part 63.            Intra module refs:   LL_ENC_Decrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt          00013666 
               calls direct
               XSTACK = 00000002 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000504B - 00005050 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes::?relay
                                   0000504B        llSetupEncRsp (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005051 - 00005056 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum::?relay
                                   00005051        LL_PseudoRand (ll)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005057 - 0000505C (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum::?relay
                                   00005057        LL_Init (ll)
                                                   LL_Rand (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000505D - 00005062 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD::?relay
                                   0000505D        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005063 - 00005068 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV::?relay
                                   00005063        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateNonce::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005069 - 0000506E (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt::?relay
                                   00005069        LL_Encrypt (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Decrypt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000506F - 00005074 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA::?relay
                                   0000506F        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitDMA0::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005075 - 0000507A (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData::?relay
                                   00005075        llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupLoadDMA::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 46. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupCryptoDMA::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_StartAES::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000507B - 00005080 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   LL_ENC_GenerateMIC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV::?relay
                                   0000507B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadKey::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005081 - 00005086 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg::?relay
                                   00005081 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005087 - 0000508C (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   LL_ENC_Decrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg::?relay
                                   00005087 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000508D - 00005092 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC::?relay
                                   0000508D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005093 - 00005098 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt::?relay
                                   00005093        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005099 - 0000509E (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt::?relay
                                   00005099        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020030 - 0002004F (0x20 bytes), align: 0
  Segment part 65.            Intra module refs:   zeroBlock
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 66. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_errorEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFF3 - 0000FFF5 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   llUnexpectedEndCauseHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler
                                   0000FFF3 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000509F - 000050A4 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler::?relay
                                   0000509F        Segment part 51 (ll)
                                                   Segment part 53 (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_halt

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00003FFC - 00004002 (0x7 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HaltMcuUsingPhyFlag     00003FFC        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000021 - 00000022 (0x2 bytes), align: 0
  Segment part 1.             Intra module refs:   HaltMcuUsingPhyFlag
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           phyState                00000021        LL_Reset (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llT2OVFC1_ISR (ll_isr)
           clkState                00000022        llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_isr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_SetAdvControl (ll)
                                                   RF_NormalIsr
                                                   llClearSetInts (ll_common)
                                                   llScheduleTask (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009F - 0000009F (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    0000009F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalFlashRead (hal_flash)
                                                   LL_Init (ll)
                                                   LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   RF_NormalIsr
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   llClearSetInts (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDisableT2E1 (ll_timer2)
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llGetFullCTandST (ll_timer2)
                                                   llGetTimer2Capture (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llReplaceCtrlPkt (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartTimer2 (ll_timer2)
                                                   llStopTimer2 (ll_timer2)
                                                   llT2OVFC1_ISR
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   main (betwine_main)
                                                   motorrunChangeCB (betwine)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_int_disable (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep (hal_sleep)
                                                   llT2OVFC1_ISR
                                                   main (betwine_main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BF - 000000BF (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   RF_ErrorIsr
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llClearSetInts (ll_common)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  000000BF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   llT2OVFC1_ISR
                                                   main (betwine_main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004003 - 00004137 (0x135 bytes), align: 0
  Segment part 21.            Intra module refs:   RF_NormalIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr            00004003 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004138 - 00004149 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   RF_NormalIsr
                                                   T2_Isr
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000414A - 0000414E (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   RF_ErrorIsr
                                                   Segment part 22
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000414F - 000041C1 (0x73 bytes), align: 0
  Segment part 24.            Intra module refs:   RF_ErrorIsr::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr             0000414F 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000041C2 - 00004226 (0x65 bytes), align: 0
  Segment part 25.            Intra module refs:   T2_Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr                  000041C2 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004227 - 000042AA (0x84 bytes), align: 0
  Segment part 26.            Intra module refs:   T2_Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llT2OVFC1_ISR           00004227 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 00003035 (0x6 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr::??INTVEC 3
                                   00003033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 00003085 (0x56 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr::??INTVEC 83     00003083 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 000030B5 (0x86 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr::??INTVEC 131
                                   000030B3 
    -------------------------------------------------------------------------
ISTACK
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081F3 - 000081F6 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         000081F3 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081F7 - 000081FA (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     000081F7 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201F3 - 000201F6 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_ffff
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201F7 - 000201FA (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __Constant_ffff7fff

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_math

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: DATA 00000023 - 00000028 (0x6 bytes), align: 0
  Segment part 0.             Intra module refs:   llDivide31By16To16
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000042AC - 000042FC (0x51 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDivide31By16To16      000042AC        LL_TxData (ll)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_scheduler

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058B - 000005BF (0x35 bytes), align: 0
  Segment part 8.             Intra module refs:   llAllocTask
                                                   llFindNextSecTask
                                                   llFreeTask
                                                   llGetActiveTasks
                                                   llGetCurrentTask
                                                   llGetNumTasks
                                                   llGetTaskState
                                                   llScheduleTask
                                                   llScheduler
                                                   llSchedulerInit
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C0 - 00000749 (0x18a bytes), align: 0
  Segment part 9.             Intra module refs:   llRestoreConnState
                                                   llScheduler
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000AE5C - 0000AEA5 (0x4a bytes), align: 0
  Segment part 22.            Intra module refs:   llSchedulerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit         0000AE5C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000AEA6 - 0000B484 (0x5df bytes), align: 0
  Segment part 24.            Intra module refs:   llScheduler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler             0000AEA6 
               calls direct
               XSTACK = 00000000 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000B485 - 0000B600 (0x17c bytes), align: 0
  Segment part 26.            Intra module refs:   llScheduleTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask          0000B485 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000B601 - 0000B605 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   llFindNextSecTask
                                                   llScheduleTask
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindStartType         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000B606 - 0000BC64 (0x65f bytes), align: 0
  Segment part 31.            Intra module refs:   llFindNextSecTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask       0000B606 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BC65 - 0000BD5A (0xf6 bytes), align: 0
  Segment part 33.            Intra module refs:   llAllocTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask             0000BC65 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD5B - 0000BD5F (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   llAllocTask
                                                   llSave_rxFIFO
                                                   llSave_txFIFO
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD60 - 0000BD9C (0x3d bytes), align: 0
  Segment part 37.            Intra module refs:   llFreeTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask              0000BD60 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BD9D - 0000BDB6 (0x1a bytes), align: 0
  Segment part 39.            Intra module refs:   llGetCurrentTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask        0000BD9D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDB7 - 0000BDB8 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   llGetActiveTasks
                                                   llGetNumTasks
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDB9 - 0000BDBF (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 41
                                                   llFreeTask
                                                   llGetCurrentTask
                                                   llGetTaskState
                                                   llSchedulerInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BDC0 - 0000BE01 (0x42 bytes), align: 0
  Segment part 43.            Intra module refs:   llGetTaskState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState          0000BDC0 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE02 - 0000BE0A (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   llGetActiveTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks        0000BE02 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTask               
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE0B - 0000BE14 (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   llGetNumTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks           0000BE0B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BE15 - 0000BF00 (0xec bytes), align: 0
  Segment part 51.            Intra module refs:   llSave_txFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO           0000BE15 
               calls direct
               XSTACK = 00000018 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BF01 - 0000BFF4 (0xf4 bytes), align: 0
  Segment part 53.            Intra module refs:   llSave_rxFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO           0000BF01 
               calls direct
               XSTACK = 00000018 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_txFIFO        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_rxFIFO        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveRfRegs            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreRfRegs         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveConnState         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000BFF5 - 0000C20C (0x218 bytes), align: 0
  Segment part 65.            Intra module refs:   llRestoreConnState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState      0000BFF5 
               calls direct
               XSTACK = 00000018 ( 00000010 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008227 - 0000822A (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1a           00008227 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008237 - 0000823A (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7            00008237 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008223 - 00008226 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff1     00008223 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 18. TENTATIVE. Used definition from ll_common
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 19. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 20. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000821B - 0000821E (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   llFindNextSecTask
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff6     0000821B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050A5 - 000050AA (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit::?relay
                                   000050A5        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050AB - 000050B0 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler::?relay     000050AB        LL_SetAdvControl (ll)
                                                   Segment part 18 (ll_advEndCauses)
                                                   Segment part 23 (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnTerminate (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050B1 - 000050B6 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask::?relay
                                   000050B1        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindStartType::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050B7 - 000050BC (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask::?relay
                                   000050B7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050BD - 000050C2 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask::?relay     000050BD        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050C3 - 000050C8 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask::?relay      000050C3        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnCleanup (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050C9 - 000050CE (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask::?relay
                                   000050C9        LL_PowerOnReq (ll_sleep)
                                                   LL_Rand (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050CF - 000050D4 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState::?relay
                                   000050CF        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050D5 - 000050DA (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks::?relay
                                   000050D5        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTask::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050DB - 000050E0 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks::?relay   000050DB        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050E1 - 000050E6 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO::?relay   000050E1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050E7 - 000050EC (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO::?relay   000050E7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_txFIFO::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_rxFIFO::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveRfRegs::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreRfRegs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveConnState::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050ED - 000050F2 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState::?relay
                                   000050ED 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020227 - 0002022A (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   __Constant_1a
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020237 - 0002023A (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   __Constant_7
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020223 - 00020226 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   __Constant_fffffff1
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 76. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002021B - 0002021E (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   __Constant_fffffff6

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_slaveEndCauses

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00009817 - 0000A28E (0xa78 bytes), align: 0
  Segment part 17.            Intra module refs:   llSlaveEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk    00009817 
               calls direct
               XSTACK = 00000000 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000A28F - 0000A294 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   llSlaveEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort    0000A28F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000A295 - 0000A9A0 (0x70c bytes), align: 0
  Segment part 21.            Intra module refs:   llSetupNextSlaveEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent   0000A295 
               calls direct
               XSTACK = 00000016 ( 00000016 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000A9A1 - 0000AE5B (0x4bb bytes), align: 0
  Segment part 23.            Intra module refs:   llProcessSlaveControlProcedures::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures
                                   0000A9A1 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckForLstoDuringSL
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081D7 - 000081DA (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   llSetupNextSlaveEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_50           000081D7 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050F3 - 000050F8 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk::?relay
                                   000050F3        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050F9 - 000050FE (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort::?relay
                                   000050F9        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000050FF - 00005104 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent::?relay
                                   000050FF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005105 - 0000510A (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures::?relay
                                   00005105 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckForLstoDuringSL::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201D7 - 000201DA (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   __Constant_50
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from betwine_main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000042FD - 00004478 (0x17c bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TimeToNextRfEvent    000042FD        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004479 - 0000450C (0x94 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOffReq          00004479        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000450D - 00004511 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_PowerOffReq
                                                   LL_PowerOnReq
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004512 - 000045E1 (0xd0 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOnReq           00004512        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081D3 - 000081D6 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_TimeToNextRfEvent
                                                   ll24BitTimeCompare (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c801         000081D3 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081CF - 000081D2 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   LL_TimeToNextRfEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_19           000081CF 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081CB - 000081CE (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   LL_TimeToNextRfEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_d            000081CB 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008193 - 00008196 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   LL_TimeToNextRfEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff4     00008193 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 20. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201D3 - 000201D6 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_c801
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201CF - 000201D2 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __Constant_19
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201CB - 000201CE (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   __Constant_d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020193 - 00020196 (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   __Constant_fffffff4
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timer2

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llInitTimer2
                                                   llStartTimer2
                                                   llStopTimer2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CTRL                  00000094 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   llDisableT2E1
                                                   llDisableT2IntsEvts
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CSPCFG                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M0                    000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M1                    000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF0                 000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF1                 000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF2                 000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MSEL                  000000C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE17 - 0001DEAC (0x96 bytes), align: 0
  Segment part 24.            Intra module refs:   llInitTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2            0001DE17 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEAD - 0001DEBC (0x10 bytes), align: 0
  Segment part 26.            Intra module refs:   llStopTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2            0001DEAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEBD - 0001DEC2 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   llStartTimer2
                                                   llStopTimer2
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEC3 - 0001DED4 (0x12 bytes), align: 0
  Segment part 29.            Intra module refs:   llStartTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2           0001DEC3 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Timeout        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DED5 - 0001DEDC (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   llSetT2C1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEDD - 0001DF12 (0x36 bytes), align: 0
  Segment part 34.            Intra module refs:   llGetCurrentTime
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF13 - 0001DF14 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF15 - 0001DF17 (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF18 - 0001DF1E (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   Segment part 74
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C2Timeout        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF1F - 0001DF2E (0x10 bytes), align: 0
  Segment part 40.            Intra module refs:   ll_McuPrecisionCount
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF2F - 0001DF32 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 33
                                                   Segment part 40
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Timeout     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Timeout     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF33 - 0001DF34 (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   llSetT2LongC1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF35 - 0001DF3C (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
                                                   llSetT2LongC1Timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF3D - 0001DF92 (0x56 bytes), align: 0
  Segment part 48.            Intra module refs:   llSetT2LongC1Timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout    0001DF3D 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC2Timeout    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DF93 - 0001DFD0 (0x3e bytes), align: 0
  Segment part 52.            Intra module refs:   llSetT2C1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1         0001DF93 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Event1      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001DFD1 - 0001E02D (0x5d bytes), align: 0
  Segment part 56.            Intra module refs:   llSetT2LongC1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1     0001DFD1 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E02E - 0001E0AA (0x7d bytes), align: 0
  Segment part 58.            Intra module refs:   llSetT2OVFC2Event2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2      0001E02E 
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2Delta            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0AB - 0001E0B3 (0x9 bytes), align: 0
  Segment part 62.            Intra module refs:   llDisableT2Ints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints         0001E0AB 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0B4 - 0001E0BF (0xc bytes), align: 0
  Segment part 64.            Intra module refs:   llDisableT2IntsEvts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts     0001E0B4 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0C0 - 0001E0C8 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   llDisableT2E1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1           0001E0C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0C9 - 0001E0CB (0x3 bytes), align: 0
  Segment part 68.            Intra module refs:   llDisableT2Ints
                                                   llDisableT2IntsEvts
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0CC - 0001E0CD (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   llDisableT2E1
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0CE - 0001E0D2 (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 28
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0D3 - 0001E0DE (0xc bytes), align: 0
  Segment part 71.            Intra module refs:   llGetTimer2Capture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture      0001E0D3 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0DF - 0001E101 (0x23 bytes), align: 0
  Segment part 73.            Intra module refs:   llGetTimer2Capture
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E102 - 0001E10E (0xd bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   llGetFullCTandST
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E10F - 0001E124 (0x16 bytes), align: 0
  Segment part 75.            Intra module refs:   llGetCurrentTime::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime        0001E10F 
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentFineTime    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCurrentTime    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E125 - 0001E183 (0x5f bytes), align: 0
  Segment part 81.            Intra module refs:   llGetFullCTandST::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST        0001E125 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC1            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC2            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000045E2 - 00004639 (0x58 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeCompare      000045E2        LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000463A - 0000463E (0x5 bytes), align: 0
  Segment part 90.            Intra module refs:   ll24BitTimeCompare
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000463F - 000046A6 (0x68 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeDelta        0000463F        LL_TxData (ll)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 92. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitAbsTimeDelta     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 93. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeForward     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000046A7 - 000046BC (0x16 bytes), align: 0
  Segment part 94.            Intra module refs:   llAdjustTimeBackward
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000046BD - 00004726 (0x6a bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeBackward    000046BD        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E184 - 0001E1B3 (0x30 bytes), align: 0
  Segment part 87.            Intra module refs:   ll_McuPrecisionCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount    0001E184 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 20. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 21. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 22. TENTATIVE. Used definition from ll_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c801         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 23. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000510B - 00005110 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2::?relay    0000510B        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005111 - 00005116 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2::?relay    00005111        LL_PowerOffReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005117 - 0000511C (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2::?relay   00005117        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000511D - 00005122 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout::?relay
                                   0000511D        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005123 - 00005128 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1::?relay
                                   00005123        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Event1::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005129 - 0000512E (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1::?relay
                                   00005129        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000512F - 00005134 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2::?relay
                                   0000512F        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2Delta::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005135 - 0000513A (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints::?relay
                                   00005135        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000513B - 00005140 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts::?relay
                                   0000513B        LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005141 - 00005146 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1::?relay   00005141        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005147 - 0000514C (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture::?relay
                                   00005147        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000514D - 00005152 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime::?relay
                                   0000514D        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentFineTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCurrentTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005153 - 00005158 (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST::?relay
                                   00005153        LL_TimeToNextRfEvent (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC1::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC2::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005159 - 0000515E (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount::?relay
                                   00005159        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 96. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 97. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 98. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 99. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timerDrift

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080E9 - 000080F8 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   llCalcScaFactor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCA                     000080E9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008124 - 00008129 (0x6 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OverheadJitter          00008124        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004727 - 0000477A (0x54 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcScaFactor         00004727        llAdvEvt_TaskConnect (ll_advEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000477B - 0000483C (0xc2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcTimerDrift        0000477B        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000006 ( 00000011 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from gapbondmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008197 - 0000819A (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   llCalcTimerDrift
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_271          00008197 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200E9 - 000200F8 (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   SCA
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020124 - 00020129 (0x6 bytes), align: 2
  Segment part 13.            Intra module refs:   OverheadJitter
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020197 - 0002019A (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_271

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000074A - 0000074A (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   PHY_AddWlEntry
                                                   PHY_ClearWhitelist
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numWLEntries            0000074A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D20E - 0001D21A (0xd bytes), align: 0
  Segment part 12.            Intra module refs:   PHY_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init                0001D20E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetChipID           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D21B - 0001D234 (0x1a bytes), align: 0
  Segment part 16.            Intra module refs:   PHY_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset               0001D21B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_LoadNR              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_VerifyNR            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D235 - 0001D263 (0x2f bytes), align: 0
  Segment part 23.            Intra module refs:   PHY_ClearAllRegsAndFifos::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos
                                   0001D235 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D264 - 0001D268 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D269 - 0001D273 (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetSem              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReleaseSem          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D274 - 0001D2B1 (0x3e bytes), align: 0
  Segment part 31.            Intra module refs:   PHY_SetOwnAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr          0001D274 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2B2 - 0001D2EF (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   PHY_SetPeerAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr         0001D2B2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2F0 - 0001D2F8 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2F9 - 0001D2FD (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D2FE - 0001D302 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D303 - 0001D308 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D309 - 0001D30D (0x5 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 37
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D30E - 0001D316 (0x9 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 36
                                                   Segment part 39
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D317 - 0001D324 (0xe bytes), align: 0
  Segment part 41.            Intra module refs:   PHY_SetCRCInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit          0001D317 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D325 - 0001D32B (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   PHY_SetCRCInit
                                                   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D32C - 0001D336 (0xb bytes), align: 0
  Segment part 44.            Intra module refs:   PHY_GetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans         0001D32C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D337 - 0001D343 (0xd bytes), align: 0
  Segment part 46.            Intra module refs:   PHY_SetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans         0001D337 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000483D - 00004845 (0x9 bytes), align: 0
  Segment part 236.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDataChan         0000483D        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetNextDataChan (ll_common)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004846 - 0000484A (0x5 bytes), align: 0
  Segment part 237.           Intra module refs:   PHY_SetDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 238. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetDataChan         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D344 - 0001D35A (0x17 bytes), align: 0
  Segment part 48.            Intra module refs:   PHY_SetEndConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection    0001D344 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D35B - 0001D368 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   PHY_ConfigureMD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD         0001D35B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBackoffCnt       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanMode         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanEnd          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D369 - 0001D373 (0xb bytes), align: 0
  Segment part 58.            Intra module refs:   PHY_GetEndCause::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause         0001D369 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AnchorValid         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D374 - 0001D37F (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   PHY_InitSeqStat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat         0001D374 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_FirstPktReceived    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CtrlAckPending      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D380 - 0001D38E (0xf bytes), align: 0
  Segment part 68.            Intra module refs:   PHY_SetSyncWord::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord         0001D380 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D38F - 0001D399 (0xb bytes), align: 0
  Segment part 70.            Intra module refs:   PHY_SetMaxNack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack          0001D38F 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D39A - 0001D3B2 (0x19 bytes), align: 0
  Segment part 72.            Intra module refs:   PHY_ClearWhitelist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist      0001D39A 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 74. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlEntry        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 76. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlBasedOnBl    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3B3 - 0001D3B3 (0x1 bytes), align: 0
  Segment part 78.            Intra module refs:   PHY_ClearBlacklistIndex
                                                   PHY_SetBlacklistIndex
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3B4 - 0001D3B8 (0x5 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 78
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetNumFreeWlEntries
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3B9 - 0001D3BC (0x4 bytes), align: 0
  Segment part 84.            Intra module refs:   PHY_GetAdvChans
                                                   PHY_GetEndCause
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetWlSize           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3BD - 0001D458 (0x9c bytes), align: 0
  Segment part 87.            Intra module refs:   PHY_AddWlEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry          0001D3BD 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RemoveWlEntry       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 91. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D459 - 0001D465 (0xd bytes), align: 0
  Segment part 92.            Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D466 - 0001D475 (0x10 bytes), align: 0
  Segment part 93.            Intra module refs:   PHY_SetAdvWlPolicy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy      0001D466 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanWlPolicy     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetInitWlPolicy     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D476 - 0001D48F (0x1a bytes), align: 0
  Segment part 99.            Intra module refs:   PHY_SetBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex   0001D476 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistEntry   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D490 - 0001D4AC (0x1d bytes), align: 0
  Segment part 104.           Intra module refs:   PHY_ClearBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex
                                   0001D490 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4AD - 0001D4B7 (0xb bytes), align: 0
  Segment part 106.           Intra module refs:   PHY_ClearBlacklist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist      0001D4AD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveWhiteList       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 110. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 111. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreWhiteList    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 114. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4B8 - 0001D4BD (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4BE - 0001D4C2 (0x5 bytes), align: 0
  Segment part 116.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4C3 - 0001D4C8 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   Segment part 116
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 118. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4C9 - 0001D4DE (0x16 bytes), align: 0
  Segment part 119.           Intra module refs:   PHY_ClearSavedWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList
                                   0001D4C9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4DF - 0001D4E4 (0x6 bytes), align: 0
  Segment part 121.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 122. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Command             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 124. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearCounters       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 126. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 127. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadCounters        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4E5 - 0001D4E8 (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4E9 - 0001D4ED (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 131. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4EE - 0001D4F7 (0xa bytes), align: 0
  Segment part 132.           Intra module refs:   PHY_ConfigureFifoDataProcessing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing
                                   0001D4EE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4F8 - 0001D50B (0x14 bytes), align: 0
  Segment part 134.           Intra module refs:   PHY_ConfigureAppendRfStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus
                                   0001D4F8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D50C - 0001D515 (0xa bytes), align: 0
  Segment part 136.           Intra module refs:   PHY_SetFifoConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig       0001D50C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 138. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitLastRssi        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetLastRssi         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRssi             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 144. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWinConfig      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDynamicWinOffset
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D516 - 0001D51E (0x9 bytes), align: 0
  Segment part 148.           Intra module refs:   PHY_SetSyncWord
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D51F - 0001D520 (0x2 bytes), align: 0
  Segment part 150.           Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D521 - 0001D521 (0x1 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D522 - 0001D522 (0x1 bytes), align: 0
  Segment part 152.           Intra module refs:   Segment part 151
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D523 - 0001D523 (0x1 bytes), align: 0
  Segment part 153.           Intra module refs:   PHY_ClearBlacklist
                                                   PHY_ConfigureAppendRfStatus
                                                   PHY_ConfigureFifoDataProcessing
                                                   PHY_ConfigureMD
                                                   PHY_InitSeqStat
                                                   PHY_SetAdvChans
                                                   PHY_SetAdvWlPolicy
                                                   PHY_SetEndConnection
                                                   PHY_SetFifoConfig
                                                   PHY_SetMaxNack
                                                   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   PHY_SetRfFreq
                                                   Segment part 121
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D524 - 0001D52A (0x7 bytes), align: 0
  Segment part 154.           Intra module refs:   PHY_ClearWhitelist
                                                   PHY_ConfigWhitener
                                                   PHY_Init
                                                   PHY_Reset
                                                   Segment part 153
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D52B - 0001D58B (0x61 bytes), align: 0
  Segment part 155.           Intra module refs:   PHY_ConfigWhitener::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener      0001D52B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxFifo         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 159. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetRxFifo         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxRxFifo       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoBytesFree     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoLen           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RxFifoLen           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D58C - 0001D591 (0x6 bytes), align: 0
  Segment part 169.           Intra module refs:   PHY_RetryTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo         0001D58C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D592 - 0001D597 (0x6 bytes), align: 0
  Segment part 171.           Intra module refs:   PHY_RetryRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo         0001D592 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitTxFifo        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D598 - 0001D59D (0x6 bytes), align: 0
  Segment part 175.           Intra module refs:   PHY_CommitRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo        0001D598 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DiscardTxFifo       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D59E - 0001D5A3 (0x6 bytes), align: 0
  Segment part 179.           Intra module refs:   PHY_DeallocateRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo    0001D59E 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRxFifoThreshold
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetTxSWP            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 186. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRxSRP            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByte           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByteVal        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByte            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByteVal         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 196. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_MapDataBank         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 198. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveRestoreConn     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 200. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreConn         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 202. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawTxInit           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 204. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawRxInit           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 206. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 207. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumTxPkts     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 209. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5A4 - 0001D5A9 (0x6 bytes), align: 0
  Segment part 210.           Intra module refs:   Segment part 130
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 211. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumRxPkts     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 213. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetRxData        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 215. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5AA - 0001D5DC (0x33 bytes), align: 0
  Segment part 216.           Intra module refs:   PHY_SetRfFreq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq           0001D5AA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5DD - 0001D654 (0x78 bytes), align: 0
  Segment part 218.           Intra module refs:   phyFindWlEntry::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry          0001D5DD 
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001D655 - 0001D659 (0x5 bytes), align: 0
  Segment part 220.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 221. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phyCopyFIFO             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 223. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 224. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phySaveFifo             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 226. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 227. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 228. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 229. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 230. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phyRestoreFifo          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 232. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 233. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 234. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 235. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000515F - 00005164 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init::?relay        0000515F        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetChipID::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005165 - 0000516A (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset::?relay       00005165        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_LoadNR::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_VerifyNR::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000516B - 00005170 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos::?relay
                                   0000516B        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetSem::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReleaseSem::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005171 - 00005176 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr::?relay
                                   00005171        llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005177 - 0000517C (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr::?relay
                                   00005177        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000517D - 00005182 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit::?relay
                                   0000517D        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005183 - 00005188 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans::?relay
                                   00005183        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005189 - 0000518E (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans::?relay
                                   00005189        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000518F - 00005194 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection::?relay
                                   0000518F        RF_NormalIsr (ll_isr)
                                                   llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005195 - 0000519A (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD::?relay
                                   00005195        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBackoffCnt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanMode::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanEnd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000519B - 000051A0 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause::?relay
                                   0000519B        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AnchorValid::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051A1 - 000051A6 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat::?relay
                                   000051A1        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_FirstPktReceived::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CtrlAckPending::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051A7 - 000051AC (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord::?relay
                                   000051A7        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051AD - 000051B2 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack::?relay
                                   000051AD        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051B3 - 000051B8 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist::?relay
                                   000051B3        LL_ClearWhiteList (ll)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 75. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlBasedOnBl::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetNumFreeWlEntries::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetWlSize::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051B9 - 000051BE (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry::?relay
                                   000051B9        LL_AddWhiteListDevice (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RemoveWlEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051BF - 000051C4 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy::?relay
                                   000051BF        LL_SetAdvParam (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanWlPolicy::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetInitWlPolicy::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051C5 - 000051CA (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex::?relay
                                   000051C5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051CB - 000051D0 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex::?relay
                                   000051CB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051D1 - 000051D6 (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist::?relay
                                   000051D1        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveWhiteList::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 112. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreWhiteList::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051D7 - 000051DC (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList::?relay
                                   000051D7        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 123. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Command::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 125. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearCounters::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 128. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadCounters::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051DD - 000051E2 (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing::?relay
                                   000051DD        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051E3 - 000051E8 (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus::?relay
                                   000051E3        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051E9 - 000051EE (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig::?relay
                                   000051E9        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 139. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitLastRssi::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetLastRssi::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRssi::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 145. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWinConfig::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDynamicWinOffset::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051EF - 000051F4 (0x6 bytes), align: 0
  Segment part 156.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener::?relay
                                   000051EF        llRfInit (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetRxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxRxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoBytesFree::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoLen::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RxFifoLen::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051F5 - 000051FA (0x6 bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo::?relay
                                   000051F5        llSave_txFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000051FB - 00005200 (0x6 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo::?relay
                                   000051FB        llSave_rxFIFO (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005201 - 00005206 (0x6 bytes), align: 0
  Segment part 176.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo::?relay
                                   00005201        llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DiscardTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005207 - 0000520C (0x6 bytes), align: 0
  Segment part 180.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo::?relay
                                   00005207        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRxFifoThreshold::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetTxSWP::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 187. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRxSRP::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByte::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByteVal::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByte::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 195. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByteVal::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 197. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_MapDataBank::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 199. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveRestoreConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 201. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 203. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawTxInit::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 205. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawRxInit::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 208. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumTxPkts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 212. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumRxPkts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 214. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetRxData::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000520D - 00005212 (0x6 bytes), align: 0
  Segment part 217.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq::?relay   0000520D        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005213 - 00005218 (0x6 bytes), align: 0
  Segment part 219.           Intra module refs:   PHY_AddWlEntry
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry::?relay
                                   00005213 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 222. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 225. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 231. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy_image

  SEGMENTS IN THE MODULE
  ======================
XDATA_ROM_C
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NanoRiscImage           
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_mgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000074B - 0000074C (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 31
                                                   Segment part 40
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080C9 - 000080D8 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_NewRandKey           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013927 - 0001392B (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   sm_xor
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001392C - 000139AD (0x82 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_CalcRandomAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr       0001392C 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000139AE - 00013A4E (0xa1 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_ResolveRandomAddrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs   000139AE 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Encrypt              
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013A4F - 00013A51 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013A52 - 00013A56 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smGenerateRandBuf
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013A57 - 00013B94 (0x13e bytes), align: 0
  Segment part 21.            Intra module refs:   SM_GenerateAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig    00013A57 
               calls direct
               XSTACK = 00000000 ( 00000032 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013B95 - 00013B9E (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   SM_GenerateAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013B9F - 00013D9B (0x1fd bytes), align: 0
  Segment part 24.            Intra module refs:   SM_VerifyAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig      00013B9F 
               calls direct
               XSTACK = 00000003 ( 0000003F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013D9C - 00013DAC (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013DAD - 00013E74 (0xc8 bytes), align: 0
  Segment part 27.            Intra module refs:   smProcessRandComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete   00013DAD 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013E75 - 00013E80 (0xc bytes), align: 0
  Segment part 29.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013E81 - 00013E86 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   SM_VerifyAuthenSig
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013E87 - 00013E8C (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013E8D - 00013E92 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013E93 - 00013EC7 (0x35 bytes), align: 0
  Segment part 33.            Intra module refs:   smStartRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer         00013E93 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013EC8 - 00013ED7 (0x10 bytes), align: 0
  Segment part 35.            Intra module refs:   smStopRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer          00013EC8 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013ED8 - 00013EDE (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   smAuthReqToUint8
                                                   smStopRspTimer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smInProcess             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013EDF - 00013EE9 (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_d1                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013EEA - 00013F3B (0x52 bytes), align: 0
  Segment part 43.            Intra module refs:   sm_ah::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah                   00013EEA 
               calls direct
               XSTACK = 00000014 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F3C - 00013F41 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 64
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F42 - 00013F4B (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F4C - 00013F6E (0x23 bytes), align: 0
  Segment part 47.            Intra module refs:   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F6F - 00013F75 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F76 - 00013F88 (0x13 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F89 - 00013F8D (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F8E - 00013F92 (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smStartRspTimer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_dm                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00013F93 - 00014148 (0x1b6 bytes), align: 0
  Segment part 54.            Intra module refs:   sm_c1new::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new                00013F93 
               calls direct
               XSTACK = 0000000B ( 0000006A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014149 - 00014150 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_CMAC
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014151 - 00014154 (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_ah
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014155 - 0001415A (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   Segment part 49
                                                   Segment part 57
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001415B - 00014162 (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014163 - 0001418B (0x29 bytes), align: 0
  Segment part 60.            Intra module refs:   sm_xor::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor                  00014163 
               XSTACK = 00000068 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001418C - 000141FC (0x71 bytes), align: 0
  Segment part 62.            Intra module refs:   sm_s1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1                   0001418C 
               calls direct
               XSTACK = 00000004 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000141FD - 00014203 (0x7 bytes), align: 0
  Segment part 64.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014204 - 00014235 (0x32 bytes), align: 0
  Segment part 65.            Intra module refs:   smGenerateRandBuf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf       00014204 
               calls direct
               XSTACK = 0000000F ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014236 - 00014242 (0xd bytes), align: 0
  Segment part 67.            Intra module refs:   smAuthReqToUint8::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8        00014236 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014243 - 00014288 (0x46 bytes), align: 0
  Segment part 69.            Intra module refs:   smUint8ToAuthReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq        00014243 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014289 - 0001428D (0x5 bytes), align: 0
  Segment part 71.            Intra module refs:   smEncrypt
                                                   smUint8ToAuthReq
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001428E - 000142B1 (0x24 bytes), align: 0
  Segment part 72.            Intra module refs:   smEncrypt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt               0001428E 
               calls direct
               XSTACK = 00000068 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000142B2 - 000144EE (0x23d bytes), align: 0
  Segment part 74.            Intra module refs:   sm_CMAC::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC                 000142B2 
               calls direct
               XSTACK = 0000003D ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000144EF - 000144F2 (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   SM_ResolveRandomAddrs
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000144F3 - 000144F8 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   SM_CalcRandomAddr
                                                   Segment part 76
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000144F9 - 00014502 (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014503 - 000145DD (0xdb bytes), align: 0
  Segment part 79.            Intra module refs:   generate_subkey::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey         00014503 
               calls direct
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000145DE - 000145E5 (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000145E6 - 000145EB (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   generate_subkey
                                                   smEncrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000145EC - 000145F3 (0x8 bytes), align: 0
  Segment part 83.            Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000145F4 - 000145F9 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000145FA - 0001460C (0x13 bytes), align: 0
  Segment part 85.            Intra module refs:   generate_subkey
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001460D - 0001465A (0x4e bytes), align: 0
  Segment part 86.            Intra module refs:   xor_128::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128                 0001460D 
               XSTACK = 0000002D ( 0000000A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001465B - 00014663 (0x9 bytes), align: 0
  Segment part 88.            Intra module refs:   smGenerateRandBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014664 - 00014668 (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   SM_VerifyAuthenSig
                                                   Segment part 88
                                                   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014669 - 000146B5 (0x4d bytes), align: 0
  Segment part 90.            Intra module refs:   leftshift_onebit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit        00014669 
               XSTACK = 00000012 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_NewRandKey::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005219 - 0000521E (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr::?relay
                                   00005219        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000521F - 00005224 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs::?relay
                                   0000521F        GAP_ResolvePrivateAddr (gap_devmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Encrypt::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005225 - 0000522A (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig::?relay
                                   00005225        attSendMsg (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000522B - 00005230 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig::?relay
                                   0000522B        ATT_ParsePacket (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005231 - 00005236 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete::?relay
                                   00005231        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005237 - 0000523C (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer::?relay
                                   00005237        smProcessDataMsg (sm_pairing)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000523D - 00005242 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer::?relay
                                   0000523D        smFreePairingParams (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smInProcess::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_d1::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005243 - 00005248 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah::?relay           00005243 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_dm::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005249 - 0000524E (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new::?relay        00005249        sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000524F - 00005254 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor::?relay          0000524F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005255 - 0000525A (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1::?relay           00005255        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000525B - 00005260 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   SM_CalcRandomAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf::?relay
                                   0000525B        SM_PasskeyUpdate (sm_pairing)
                                                   Segment part 28 (gap_configmgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005261 - 00005266 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8::?relay
                                   00005261        smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005267 - 0000526C (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq::?relay
                                   00005267        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smpParsePairingReq (smp)
                                                   smpParseSecurityReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000526D - 00005272 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 46
                                                   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt::?relay       0000526D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005273 - 00005278 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC::?relay         00005273 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005279 - 0000527E (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey::?relay
                                   00005279 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000527F - 00005284 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128::?relay         0000527F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005285 - 0000528A (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   generate_subkey
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit::?relay
                                   00005285 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200C9 - 000200D8 (0x10 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 93. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_pairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000074D - 0000074E (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 13
                                                   Segment part 17
                                                   Segment part 21
                                                   Segment part 22
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 61
                                                   Segment part 69
                                                   Segment part 76
                                                   Segment part 77
                                                   Segment part 78
                                                   Segment part 86
                                                   smDetermineKeySize
                                                   smEndPairing
                                                   smFreePairingParams
                                                   smGenerateConfirm
                                                   smProcessEncryptChange
                                                   smSavePairInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pPairingParams          0000074D        Segment part 17 (sm_rsppairing)
                                                   Segment part 18 (sm_rsppairing)
                                                   Segment part 20 (sm_rsppairing)
                                                   Segment part 26 (sm_rsppairing)
                                                   Segment part 36 (sm_rsppairing)
                                                   Segment part 41 (sm_rsppairing)
                                                   Segment part 43 (sm_rsppairing)
                                                   Segment part 44 (sm_rsppairing)
                                                   Segment part 50 (sm_rsppairing)
                                                   Segment part 58 (sm_rsppairing)
                                                   Segment part 61 (sm_rsppairing)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 69 (sm_rsppairing)
                                                   Segment part 73 (sm_rsppairing)
                                                   Segment part 76 (sm_rsppairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000074F - 00000750 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smRegisterResponder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnResponderCBs         0000074F        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000751 - 00000752 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smStartEncryption
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008050 - 00008068 (0x19 bytes), align: 0
  Segment part 9.             Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010EA9 - 00010F91 (0xe9 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_StartPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing         00010EA9 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010F92 - 00010F95 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010F96 - 00010F9C (0x7 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 15
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010F9D - 00010FA6 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010FA7 - 00010FAC (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010FAD - 00010FAE (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010FAF - 00010FB1 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 16
                                                   smFreePairingParams
                                                   smGeneratePairingReqRsp
                                                   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSetPairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010FB2 - 00010FB9 (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
                                                   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00010FBA - 00011084 (0xcb bytes), align: 0
  Segment part 19.            Intra module refs:   SM_PasskeyUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate        00010FBA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011085 - 00011092 (0xe bytes), align: 0
  Segment part 21.            Intra module refs:   SM_PasskeyUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011093 - 00011098 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011099 - 0001109D (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   smLinkCheck
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterInitiator     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001109E - 000110A7 (0xa bytes), align: 0
  Segment part 26.            Intra module refs:   smRegisterResponder::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder     0001109E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000110A8 - 000110C4 (0x1d bytes), align: 0
  Segment part 28.            Intra module refs:   smLinkCheck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck             000110A8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000110C5 - 000110C9 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000110CA - 000110D5 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   smTimedOut::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut              000110CA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000110D6 - 00011271 (0x19c bytes), align: 0
  Segment part 33.            Intra module refs:   smProcessDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg        000110D6 
               calls direct
               XSTACK = 00000000 ( 0000001F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011272 - 00011274 (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011275 - 00011279 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001127A - 000112A6 (0x2d bytes), align: 0
  Segment part 37.            Intra module refs:   smSendFailAndEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd        0001127A 
               calls direct
               XSTACK = 0000001F ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000112A7 - 000113BC (0x116 bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessEncryptChange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange
                                   000112A7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000113BD - 000113EB (0x2f bytes), align: 0
  Segment part 41.            Intra module refs:   smNextPairingState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState      000113BD 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000113EC - 000113F2 (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000113F3 - 00011405 (0x13 bytes), align: 0
  Segment part 44.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011406 - 0001140A (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   smRegisterResponder
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001140B - 00011411 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smNextPairingState
                                                   smTimedOut
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011412 - 00011555 (0x144 bytes), align: 0
  Segment part 47.            Intra module refs:   sm_c1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1                   00011412 
               calls direct
               XSTACK = 0000000C ( 0000003A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011556 - 00011558 (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   smProcessEncryptChange
                                                   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011559 - 00011560 (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011561 - 0001162C (0xcc bytes), align: 0
  Segment part 51.            Intra module refs:   smProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq     00011561 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001162D - 00011635 (0x9 bytes), align: 0
  Segment part 53.            Intra module refs:   smProcessDataMsg
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011636 - 0001168C (0x57 bytes), align: 0
  Segment part 54.            Intra module refs:   smStartEncryption::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption       00011636 
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001168D - 00011691 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   SM_StartPairing
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011692 - 000116E2 (0x51 bytes), align: 0
  Segment part 57.            Intra module refs:   smGeneratePairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp
                                   00011692 
               calls direct
               XSTACK = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000116E3 - 000116E5 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   smEndPairing
                                                   smGeneratePairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000116E6 - 000116EA (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   smNextPairingState
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000116EB - 000116F6 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 88
                                                   smGeneratePairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000116F7 - 000116FC (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 56
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000116FD - 00011731 (0x35 bytes), align: 0
  Segment part 63.            Intra module refs:   smGenerateConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm       000116FD 
               calls direct
               XSTACK = 0000000A ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011732 - 0001175E (0x2d bytes), align: 0
  Segment part 65.            Intra module refs:   smGenerateRandMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg       00011732 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001175F - 00011762 (0x4 bytes), align: 0
  Segment part 67.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
                                                   smPairingSendIdentityAddrInfo
                                                   smPairingSendMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011763 - 00011768 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 67
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011769 - 00011774 (0xc bytes), align: 0
  Segment part 69.            Intra module refs:   SM_PasskeyUpdate
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011775 - 000119F0 (0x27c bytes), align: 0
  Segment part 70.            Intra module refs:   smSavePairInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo          00011775 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000119F1 - 000119FC (0xc bytes), align: 0
  Segment part 72.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000119FD - 00011A02 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A03 - 00011A0E (0xc bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A0F - 00011A14 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A15 - 00011A1E (0xa bytes), align: 0
  Segment part 76.            Intra module refs:   SM_StartPairing
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A1F - 00011A28 (0xa bytes), align: 0
  Segment part 77.            Intra module refs:   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A29 - 00011A2E (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   smDetermineKeySize
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A2F - 00011A35 (0x7 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 78
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A36 - 00011A3E (0x9 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 23
                                                   Segment part 79
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A3F - 00011A49 (0xb bytes), align: 0
  Segment part 81.            Intra module refs:   smPairingSendEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo    00011A3F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A4A - 00011A56 (0xd bytes), align: 0
  Segment part 83.            Intra module refs:   smPairingSendEncInfo
                                                   smPairingSendIdentityInfo
                                                   smPairingSendSingingInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011A57 - 00011AB1 (0x5b bytes), align: 0
  Segment part 84.            Intra module refs:   smPairingSendMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID   00011A57 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AB2 - 00011AB4 (0x3 bytes), align: 0
  Segment part 86.            Intra module refs:   smDetermineKeySize
                                                   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AB5 - 00011ABA (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   smDetermineKeySize
                                                   smPairingSendMasterID
                                                   smProcessDataMsg
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011ABB - 00011AD5 (0x1b bytes), align: 0
  Segment part 88.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AD6 - 00011AD8 (0x3 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 83
                                                   Segment part 88
                                                   smGeneratePairingReqRsp
                                                   smPairingSendMasterID
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AD9 - 00011ADD (0x5 bytes), align: 0
  Segment part 90.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 89
                                                   smSendFailAndEnd
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011ADE - 00011AE1 (0x4 bytes), align: 0
  Segment part 91.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smPairingSendMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AE2 - 00011AE7 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 83
                                                   Segment part 88
                                                   Segment part 91
                                                   smGeneratePairingReqRsp
                                                   smSendFailAndEnd
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AE8 - 00011AF5 (0xe bytes), align: 0
  Segment part 93.            Intra module refs:   smPairingSendIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo
                                   00011AE8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011AF6 - 00011B42 (0x4d bytes), align: 0
  Segment part 95.            Intra module refs:   smPairingSendIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo
                                   00011AF6 
               calls direct
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011B43 - 00011B50 (0xe bytes), align: 0
  Segment part 97.            Intra module refs:   smPairingSendSingingInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo
                                   00011B43 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011B51 - 00011BB2 (0x62 bytes), align: 0
  Segment part 99.            Intra module refs:   smFreePairingParams::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams     00011B51 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011BB3 - 00011BBC (0xa bytes), align: 0
  Segment part 101.           Intra module refs:   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011BBD - 00011C1B (0x5f bytes), align: 0
  Segment part 102.           Intra module refs:   smEndPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing            00011BBD 
               calls direct
               XSTACK = 0000000C ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C1C - 00011C1F (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C20 - 00011C23 (0x4 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C24 - 00011C2E (0xb bytes), align: 0
  Segment part 106.           Intra module refs:   Segment part 105
                                                   Segment part 108
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C2F - 00011C32 (0x4 bytes), align: 0
  Segment part 107.           Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C33 - 00011C37 (0x5 bytes), align: 0
  Segment part 108.           Intra module refs:   Segment part 101
                                                   Segment part 107
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C38 - 00011C8E (0x57 bytes), align: 0
  Segment part 109.           Intra module refs:   smDetermineKeySize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize      00011C38 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011C8F - 00011D11 (0x83 bytes), align: 0
  Segment part 111.           Intra module refs:   smSetPairingReqRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp      00011C8F 
               calls direct
               XSTACK = 0000002F ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D12 - 00011D14 (0x3 bytes), align: 0
  Segment part 113.           Intra module refs:   smProcessEncryptChange
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D15 - 00011D1A (0x6 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D1B - 00011D1C (0x2 bytes), align: 0
  Segment part 115.           Intra module refs:   SM_StartPairing
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D1D - 00011D20 (0x4 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00011D21 - 00011D26 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 116
                                                   Segment part 44
                                                   Segment part 50
                                                   Segment part 60
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000528B - 00005290 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing::?relay
                                   0000528B        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005291 - 00005296 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate::?relay
                                   00005291        GAP_PasscodeUpdate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterInitiator::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005297 - 0000529C (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder::?relay
                                   00005297        SM_ResponderInit (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000529D - 000052A2 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck::?relay     0000529D        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052A3 - 000052A8 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut::?relay      000052A3        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052A9 - 000052AE (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg::?relay
                                   000052A9        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052AF - 000052B4 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd::?relay
                                   000052AF        GAP_TerminateAuth (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052B5 - 000052BA (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange::?relay
                                   000052B5        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052BB - 000052C0 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState::?relay
                                   000052BB        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052C1 - 000052C6 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1::?relay           000052C1        Segment part 54 (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052C7 - 000052CC (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq::?relay
                                   000052C7        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052CD - 000052D2 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption::?relay
                                   000052CD        GAP_Bond (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052D3 - 000052D8 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   SM_StartPairing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp::?relay
                                   000052D3        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052D9 - 000052DE (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm::?relay
                                   000052D9        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052DF - 000052E4 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg::?relay
                                   000052DF        smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052E5 - 000052EA (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo::?relay
                                   000052E5        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052EB - 000052F0 (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo::?relay
                                   000052EB        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052F1 - 000052F6 (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID::?relay
                                   000052F1        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052F7 - 000052FC (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo::?relay
                                   000052F7        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000052FD - 00005302 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo::?relay
                                   000052FD        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005303 - 00005308 (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo::?relay
                                   00005303        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005309 - 0000530E (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smLinkCheck
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams::?relay
                                   00005309 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000530F - 00005314 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSendFailAndEnd
                                                   smTimedOut
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing::?relay    0000530F        smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005315 - 0000531A (0x6 bytes), align: 0
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize::?relay
                                   00005315        Segment part 15 (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000531B - 00005320 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   smGeneratePairingReqRsp
                                                   sm_c1
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp::?relay
                                   0000531B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020050 - 00020068 (0x19 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 9

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_rsppairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000B41 - 00000B46 (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_ResponderInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000741F - 00007440 (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_ResponderInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit        0000741F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007441 - 00007608 (0x1c8 bytes), align: 0
  Segment part 12.            Intra module refs:   smResponderProcessLTKReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq
                                   00007441 
               calls direct, is indirectly called
               XSTACK = 00000002 ( 00000032 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007609 - 0000760D (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000760E - 00007619 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000761A - 0000762B (0x12 bytes), align: 0
  Segment part 16.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000762C - 00007639 (0xe bytes), align: 0
  Segment part 17.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000763A - 0000763C (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000763D - 00007641 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007642 - 00007647 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007648 - 00007651 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007652 - 000078F3 (0x2a2 bytes), align: 0
  Segment part 22.            Intra module refs:   smpResponderProcessIncoming::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming
                                   00007652 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078F4 - 000078F7 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078F8 - 000078FD (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078FE - 00007903 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007904 - 0000790A (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000790B - 00007910 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007911 - 000079DE (0xce bytes), align: 0
  Segment part 29.            Intra module refs:   smpResponderProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq
                                   00007911 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079DF - 000079E3 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079E4 - 000079E6 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079E7 - 000079E7 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079E8 - 000079ED (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   smResponderProcessLTKReq
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079EE - 000079F1 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079F2 - 000079FE (0xd bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000079FF - 00007A02 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A03 - 00007A06 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A07 - 00007A11 (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A12 - 00007A15 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A16 - 00007A1F (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A20 - 00007A24 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 17
                                                   Segment part 21
                                                   Segment part 28
                                                   Segment part 40
                                                   Segment part 41
                                                   Segment part 43
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A25 - 00007A30 (0xc bytes), align: 0
  Segment part 43.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A31 - 00007A36 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A37 - 00007A3A (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A3B - 00007AC7 (0x8d bytes), align: 0
  Segment part 46.            Intra module refs:   smpResponderProcessPairingRandom::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom
                                   00007A3B 
               calls direct
               XSTACK = 0000000E ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AC8 - 00007AD3 (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AD4 - 00007AD4 (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AD5 - 00007AD7 (0x3 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AD8 - 00007ADB (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007ADC - 00007AE2 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AE3 - 00007AE9 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 19
                                                   Segment part 25
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AEA - 00007AF8 (0xf bytes), align: 0
  Segment part 54.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007AF9 - 00007BB1 (0xb9 bytes), align: 0
  Segment part 55.            Intra module refs:   smpResponderProcessMasterID::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID
                                   00007AF9 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BB2 - 00007BBC (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BBD - 00007BCB (0xf bytes), align: 0
  Segment part 58.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BCC - 00007BCE (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BCF - 00007BD5 (0x7 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 45
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BD6 - 00007BE4 (0xf bytes), align: 0
  Segment part 61.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007BE5 - 00007ECD (0x2e9 bytes), align: 0
  Segment part 62.            Intra module refs:   smResponderSendNextKeyInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo
                                   00007BE5 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007ECE - 00007ECF (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007ED0 - 00007EDD (0xe bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EDE - 00007EE3 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EE4 - 00007EE9 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 66
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EEA - 00007EF3 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EF4 - 00007EF6 (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EF7 - 00007EFC (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007EFD - 00007F07 (0xb bytes), align: 0
  Segment part 71.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F08 - 00007F12 (0xb bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F13 - 00007F18 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F19 - 00007F22 (0xa bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F23 - 00007F2A (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F2B - 00007F36 (0xc bytes), align: 0
  Segment part 76.            Intra module refs:   Segment part 75
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F37 - 00007F3C (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031B0 - 000031B5 (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081A3 - 000081A6 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   smResponderSendNextKeyInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1f4          000081A3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005321 - 00005326 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit::?relay
                                   00005321        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005327 - 0000532C (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq::?relay
                                   00005327 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000532D - 00005332 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming::?relay
                                   0000532D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005333 - 00005338 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   smpResponderProcessIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq::?relay
                                   00005333 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005339 - 0000533E (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom::?relay
                                   00005339 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000533F - 00005344 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID::?relay
                                   0000533F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005345 - 0000534A (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo::?relay
                                   00005345 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 78. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201A3 - 000201A6 (0x4 bytes), align: 0
  Segment part 79.            Intra module refs:   __Constant_1f4

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000753 - 00000753 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_Init
                                                   SM_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTaskID                00000753        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020644 - 00020668 (0x25 bytes), align: 0
  Segment part 7.             Intra module refs:   SM_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init                 00020644 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020669 - 000206DE (0x76 bytes), align: 0
  Segment part 9.             Intra module refs:   SM_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent         00020669 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000206DF - 000207F1 (0x113 bytes), align: 0
  Segment part 11.            Intra module refs:   smProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg        000206DF 
               calls direct
               XSTACK = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000207F2 - 000207FC (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   smProcessOSALMsg
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000534B - 00005350 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init::?relay         0000534B        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005351 - 00005356 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent::?relay
                                   00005351        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005357 - 0000535C (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg::?relay
                                   00005357 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : smp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2D9 - 0001A2E1 (0x9 bytes), align: 0
  Segment part 6.             Intra module refs:   smpBuildPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq      0001A2D9 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2E2 - 0001A2EA (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   smpBuildPairingRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp      0001A2E2 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2EB - 0001A3A9 (0xbf bytes), align: 0
  Segment part 10.            Intra module refs:   smpBuildPairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp   0001A2EB 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3AA - 0001A3AA (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3AB - 0001A3AB (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3AC - 0001A3AF (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3B0 - 0001A3B5 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3B6 - 0001A3BB (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3BC - 0001A3C2 (0x7 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3C3 - 0001A55E (0x19c bytes), align: 0
  Segment part 18.            Intra module refs:   smpParsePairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq      0001A3C3 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A55F - 0001A569 (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   smpBuildPairingReqRsp
                                                   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A56A - 0001A573 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A574 - 0001A5A3 (0x30 bytes), align: 0
  Segment part 22.            Intra module refs:   smpBuildPairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm
                                   0001A574 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5A4 - 0001A5CE (0x2b bytes), align: 0
  Segment part 24.            Intra module refs:   smpParsePairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm
                                   0001A5A4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5CF - 0001A5FE (0x30 bytes), align: 0
  Segment part 26.            Intra module refs:   smpBuildPairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom   0001A5CF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A5FF - 0001A629 (0x2b bytes), align: 0
  Segment part 28.            Intra module refs:   smpParsePairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom   0001A5FF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A62A - 0001A653 (0x2a bytes), align: 0
  Segment part 30.            Intra module refs:   smpBuildPairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed   0001A62A 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A654 - 0001A656 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpBuildPairingReq
                                                   smpBuildPairingRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A657 - 0001A65D (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpBuildPairingFailed
                                                   smpParsePairingFailed
                                                   smpParseSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A65E - 0001A689 (0x2c bytes), align: 0
  Segment part 34.            Intra module refs:   smpParsePairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed   0001A65E 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A68A - 0001A6B9 (0x30 bytes), align: 0
  Segment part 36.            Intra module refs:   smpBuildEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo         0001A68A 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6BA - 0001A6C5 (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6C6 - 0001A6CC (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   smpBuildPairingReqRsp
                                                   smpBuildSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6CD - 0001A6F7 (0x2b bytes), align: 0
  Segment part 40.            Intra module refs:   smpParseEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo         0001A6CD 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6F8 - 0001A73E (0x47 bytes), align: 0
  Segment part 42.            Intra module refs:   smpBuildMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID        0001A6F8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A73F - 0001A78E (0x50 bytes), align: 0
  Segment part 44.            Intra module refs:   smpParseMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID        0001A73F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A78F - 0001A793 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildMasterID
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
                                                   smpParseEncInfo
                                                   smpParseIdentityAddrInfo
                                                   smpParseIdentityInfo
                                                   smpParseMasterID
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A794 - 0001A7C2 (0x2f bytes), align: 0
  Segment part 47.            Intra module refs:   smpBuildIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo    0001A794 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7C3 - 0001A7CB (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   smpParseEncInfo
                                                   smpParseIdentityInfo
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7CC - 0001A7CE (0x3 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7CF - 0001A7CF (0x1 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smpParseMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7D0 - 0001A7D5 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
                                                   smpParseIdentityAddrInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A7D6 - 0001A816 (0x41 bytes), align: 0
  Segment part 53.            Intra module refs:   smpBuildIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo
                                   0001A7D6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A817 - 0001A824 (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A825 - 0001A82F (0xb bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A830 - 0001A85A (0x2b bytes), align: 0
  Segment part 57.            Intra module refs:   smpParseIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo    0001A830 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A85B - 0001A8A9 (0x4f bytes), align: 0
  Segment part 59.            Intra module refs:   smpParseIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo
                                   0001A85B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8AA - 0001A8D9 (0x30 bytes), align: 0
  Segment part 61.            Intra module refs:   smpBuildSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo     0001A8AA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8DA - 0001A904 (0x2b bytes), align: 0
  Segment part 63.            Intra module refs:   smpParseSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo     0001A8DA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A905 - 0001A932 (0x2e bytes), align: 0
  Segment part 65.            Intra module refs:   smpBuildSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq     0001A905 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A933 - 0001A955 (0x23 bytes), align: 0
  Segment part 67.            Intra module refs:   smpParseSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq     0001A933 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A956 - 0001A9F5 (0xa0 bytes), align: 0
  Segment part 69.            Intra module refs:   smSendSMMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg             0001A956 
               calls direct
               XSTACK = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000535D - 00005362 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq::?relay
                                   0000535D        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005363 - 00005368 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp::?relay
                                   00005363        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005369 - 0000536E (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp::?relay
                                   00005369 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000536F - 00005374 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq::?relay
                                   0000536F        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005375 - 0000537A (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm::?relay
                                   00005375        smGenerateConfirm (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000537B - 00005380 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm::?relay
                                   0000537B        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005381 - 00005386 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom::?relay
                                   00005381        smGenerateRandMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005387 - 0000538C (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom::?relay
                                   00005387        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000538D - 00005392 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed::?relay
                                   0000538D        smSendFailAndEnd (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005393 - 00005398 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed::?relay
                                   00005393        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005399 - 0000539E (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo::?relay
                                   00005399        smPairingSendEncInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000539F - 000053A4 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo::?relay
                                   0000539F        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053A5 - 000053AA (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID::?relay
                                   000053A5        smPairingSendMasterID (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053AB - 000053B0 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID::?relay
                                   000053AB        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053B1 - 000053B6 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo::?relay
                                   000053B1        smPairingSendIdentityInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053B7 - 000053BC (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo::?relay
                                   000053B7        smPairingSendIdentityAddrInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053BD - 000053C2 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo::?relay
                                   000053BD        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053C3 - 000053C8 (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo::?relay
                                   000053C3        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053C9 - 000053CE (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo::?relay
                                   000053C9        smPairingSendSingingInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053CF - 000053D4 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo::?relay
                                   000053CF        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053D5 - 000053DA (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq::?relay
                                   000053D5        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053DB - 000053E0 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq::?relay
                                   000053DB        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053E1 - 000053E6 (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg::?relay     000053E1        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   Segment part 92 (sm_pairing)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\lib\CC254x_BLE_HCI_TL_None.lib
  LIBRARY MODULE, NAME : hci_tl

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000754 - 00000754 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_Init
                                                   HCI_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTaskID               00000754        LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   Segment part 142 (hci_event)
                                                   Segment part 30 (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000755 - 00000755 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTestTaskID           00000755 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000756 - 00000756 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciGapTaskID            00000756        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000757 - 00000757 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_Init
                                                   HCI_L2CAPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciL2capTaskID          00000757        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000758 - 00000758 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_Init
                                                   HCI_SMPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciSmpTaskID            00000758        HCI_CommandCompleteEvent (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000759 - 00000759 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciExtTaskID            00000759 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCmdTable             
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000212F2 - 0002131D (0x2c bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init                000212F2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002131E - 0002134A (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   HCI_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent        0002131E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TestAppTaskRegister
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002134B - 00021354 (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_GAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister     0002134B 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021355 - 0002135C (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_L2CAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister   00021355 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002135D - 00021364 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_L2CAPTaskRegister
                                                   HCI_SMPTaskRegister
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021365 - 0002136E (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_SMPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister     00021365 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ExtTaskRegister     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053E7 - 000053EC (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init::?relay        000053E7        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053ED - 000053F2 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent::?relay
                                   000053ED        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TestAppTaskRegister::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053F3 - 000053F8 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister::?relay
                                   000053F3        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053F9 - 000053FE (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister::?relay
                                   000053F9        L2CAP_Init (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000053FF - 00005404 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister::?relay
                                   000053FF        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ExtTaskRegister::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075A - 0000075B (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_init_system
                                                   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              0000075A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B47 - 00000B47 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           activeTaskID            00000B47 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001799A - 000179A3 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   osal_strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             0001799A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000179A4 - 000179E1 (0x3e bytes), align: 0
  Segment part 18.            Intra module refs:   osal_memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             000179A4 
               XSTACK = 00000010 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000179E2 - 00017A2A (0x49 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_revmemcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy          000179E2 
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017A2B - 00017A64 (0x3a bytes), align: 0
  Segment part 22.            Intra module refs:   osal_memdup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup             00017A2B 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017A65 - 00017ABE (0x5a bytes), align: 0
  Segment part 24.            Intra module refs:   osal_memcmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp             00017A65 
               XSTACK = 00000002 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017ABF - 00017ADF (0x21 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             00017ABF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint16       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017AE0 - 00017AE8 (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               00017AE0 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017AE9 - 00017B39 (0x51 bytes), align: 0
  Segment part 41.            Intra module refs:   osal_msg_allocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       00017AE9 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017B3A - 00017B5B (0x22 bytes), align: 0
  Segment part 43.            Intra module refs:   osal_msg_deallocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     00017B3A 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017B5C - 00017B62 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_init_system
                                                   osal_msg_deallocate
                                                   osal_rand
                                                   osal_strlen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00017B5C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017B63 - 00017B6C (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   osal_msg_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           00017B63 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push_front     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017B6D - 00017BCB (0x5f bytes), align: 0
  Segment part 50.            Intra module refs:   osal_msg_enqueue_push::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push   00017B6D 
               calls direct
               XSTACK = 00000009 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017BCC - 00017BD8 (0xd bytes), align: 0
  Segment part 52.            Intra module refs:   osal_msg_deallocate
                                                   osal_msg_enqueue_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00017BCC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD9 - 00017C5B (0x83 bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_receive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        00017BD9 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017C5C - 00017C60 (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   osal_msg_extract
                                                   osal_msg_receive
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00017C5C 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_find           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017C61 - 00017C66 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   osal_run_system
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017C67 - 00017C9D (0x37 bytes), align: 0
  Segment part 60.            Intra module refs:   osal_msg_enqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        00017C67 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017C9E - 00017CA1 (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00017C9E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CA2 - 00017CA4 (0x3 bytes), align: 0
  Segment part 63.            Intra module refs:   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00017CA2 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CA5 - 00017CA9 (0x5 bytes), align: 0
  Segment part 64.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine5
                                                   osal_clear_event
                                                   osal_memcpy
                                                   osal_msg_enqueue_push
                                                   osal_revmemcpy
                                                   osal_set_event
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CAA - 00017CAE (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   osal_isbufset
                                                   osal_memset
                                                   osal_msg_allocate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00017CAA 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CAF - 00017CB4 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   osal_msg_enqueue
                                                   osal_msg_enqueue_push
                                                   osal_msg_receive
                                                   osal_run_system
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CB5 - 00017CE4 (0x30 bytes), align: 0
  Segment part 70.            Intra module refs:   osal_msg_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           00017CB5 
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CE5 - 00017CEA (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 69
                                                   osal_memcpy
                                                   osal_msg_extract
                                                   osal_msg_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00017CE5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017CEB - 00017D59 (0x6f bytes), align: 0
  Segment part 73.            Intra module refs:   osal_msg_extract::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        00017CEB 
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017D5A - 00017D5C (0x3 bytes), align: 0
  Segment part 75.            Intra module refs:   osal_msg_enqueue_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00017D5A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017D5D - 00017D5F (0x3 bytes), align: 0
  Segment part 76.            Intra module refs:   ?Subroutine14
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017D60 - 00017D64 (0x5 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   osal_msg_enqueue
                                                   osal_msg_extract
                                                   osal_msg_push
                                                   osal_msg_receive
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017D65 - 00017D71 (0xd bytes), align: 0
  Segment part 80.            Intra module refs:   osal_msg_enqueue
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           00017D65 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017D72 - 00017DB1 (0x40 bytes), align: 0
  Segment part 81.            Intra module refs:   osal_set_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          00017D72 
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017DB2 - 00017DE9 (0x38 bytes), align: 0
  Segment part 83.            Intra module refs:   osal_clear_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event        00017DB2 
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isr_register       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017DEA - 00017DFB (0x12 bytes), align: 0
  Segment part 89.            Intra module refs:   osal_int_disable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        00017DEA 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017DFC - 00017E1A (0x1f bytes), align: 0
  Segment part 91.            Intra module refs:   osal_init_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        00017DFC 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017E1B - 00017E23 (0x9 bytes), align: 0
  Segment part 93.            Intra module refs:   osal_start_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       00017E1B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017E24 - 00017EC7 (0xa4 bytes), align: 0
  Segment part 95.            Intra module refs:   osal_run_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system         00017E24 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017EC8 - 00017ED0 (0x9 bytes), align: 0
  Segment part 97.            Intra module refs:   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00017EC8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017ED1 - 00017EE2 (0x12 bytes), align: 0
  Segment part 98.            Intra module refs:   osal_clear_event
                                                   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00017ED1 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint32      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 102. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint24      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 105. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017EE3 - 00017F0C (0x2a bytes), align: 0
  Segment part 106.           Intra module refs:   osal_isbufset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset           00017EE3 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self               
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031B6 - 000031B6 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   activeTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005405 - 0000540A (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00005405        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 63 (gapgattserver)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000540B - 00005410 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_memdup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     0000540B        DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HS_SetParameter (historystep)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   PM_GetParameter (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 145 (att_util)
                                                   Segment part 22 (gap_linkmgr)
                                                   Segment part 29 (sm_mgr)
                                                   Segment part 34 (sm_rsppairing)
                                                   Segment part 47 (hci_event)
                                                   Segment part 48 (sm_rsppairing)
                                                   Segment part 52 (smp)
                                                   Segment part 58 (gapgattserver)
                                                   Segment part 58 (gatt_server)
                                                   Segment part 68 (gattservapp)
                                                   Segment part 68 (sm_pairing)
                                                   Segment part 73 (gap_peridevmgr)
                                                   Segment part 75 (gap_configmgr)
                                                   Segment part 75 (gap_linkmgr)
                                                   Segment part 77 (sm_mgr)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   linkDB_Add (linkdb)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005411 - 00005416 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy::?relay
                                   00005411        Segment part 58 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005417 - 0000541C (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup::?relay     00005417        GAP_Bond (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000541D - 00005422 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp::?relay     0000541D        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 16 (sm_rsppairing)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005423 - 00005428 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     00005423        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GGS_SetParameter (gapgattserver)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 88 (gap_linkmgr)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Remove (linkdb)
                                                   osalInitTasks (OSAL_betwine)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint16::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005429 - 0000542E (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       00005429        smGenerateRandBuf (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000542F - 00005434 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate::?relay
                                   0000542F        GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Segment part 135 (hci_event)
                                                   Segment part 145 (hci_event)
                                                   Segment part 60 (gap_linkmgr)
                                                   Segment part 69 (gap_configmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005435 - 0000543A (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate::?relay
                                   00005435        Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000543B - 00005440 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   0000543B        GAP_ProcessEvent (gap_task)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SM_ProcessEvent (sm_task)
                                                   Segment part 143 (hci_event)
                                                   Segment part 30 (hci_event)
                                                   Segment part 87 (gap_peridevmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push_front::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005441 - 00005446 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push::?relay
                                   00005441 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005447 - 0000544C (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive::?relay
                                   00005447        Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_find::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000544D - 00005452 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue::?relay
                                   0000544D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005453 - 00005458 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push::?relay   00005453 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005459 - 0000545E (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract::?relay
                                   00005459 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000545F - 00005464 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event::?relay
                                   0000545F        Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   halProcessAccInterrupt (hal_key)
                                                   halProcessChrInterrupt (hal_key)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005465 - 0000546A (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event::?relay
                                   00005465        Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isr_register::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000546B - 00005470 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable::?relay
                                   0000546B        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005471 - 00005476 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system::?relay
                                   00005471        main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005477 - 0000547C (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system::?relay
                                   00005477        main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000547D - 00005482 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   osal_start_system
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system::?relay
                                   0000547D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 100. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint24::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005483 - 00005488 (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset::?relay   00005483        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 110. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 111. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 112. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 114. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 115. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL_ClockBLE.r51
  PROGRAM MODULE, NAME : OSAL_ClockBLE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000075C - 0000075D (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           previousLLTimerTick     0000075C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075E - 0000075F (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           remUsTicks              0000075E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000760 - 00000761 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   ?Subroutine5
                                                   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           timeMSec                00000760 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000762 - 00000765 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimeUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OSAL_timeSeconds        00000762 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020F2A - 00021011 (0xe8 bytes), align: 0
  Segment part 13.            Intra module refs:   osalTimeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate          00020F2A 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021012 - 0002101E (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00021012 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_setClock           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_getClock           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCTime     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002101F - 00021023 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   osalTimeUpdate
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           monthLength             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCSecs     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_15180        
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3c           
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_e10          
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005489 - 0000548E (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate::?relay
                                   00005489        llScheduleTask (ll_scheduler)
                                                   osal_run_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_setClock::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_getClock::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCSecs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 40. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00000EE0 - 00001ADF (0xc00 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 00000EE0 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001AE0 - 00001AE1 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     00001AE0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000766 - 00000766 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           osalMemStat             00000766 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FAD8 - 0001FB06 (0x2f bytes), align: 0
  Segment part 10.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0001FAD8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB07 - 0001FB0D (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001FB07 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB0E - 0001FB43 (0x36 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0001FB0E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB44 - 0001FC9C (0x159 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0001FB44 
               XSTACK = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FC9D - 0001FCD6 (0x3a bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0001FC9D 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000548F - 00005494 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init::?relay   0000548F        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005495 - 0000549A (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   00005495        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000549B - 000054A0 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc::?relay
                                   0000549B        GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATT_RegisterService (gatt_server)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   SM_StartPairing (sm_pairing)
                                                   Segment part 102 (gap_linkmgr)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 75 (gap_peridevmgr)
                                                   Segment part 76 (gap_peridevmgr)
                                                   Segment part 85 (sm_mgr)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_betwine)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_memdup (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054A1 - 000054A6 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   000054A1        ?Subroutine3 (epb_MmBp)
                                                   GAP_Bond (gap_linkmgr)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 81 (gap_linkmgr)
                                                   Segment part 91 (gap_peridevmgr)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   gapFreeAuthLink (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   linkDB_Remove (linkdb)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_msg_deallocate (OSAL)
                                                   smFreePairingParams (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   wechatAuthReqDataFree (betwine)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatInitReqDataFree (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendReqDataFree (betwine)
                                                   wechatSendReqDataInit (betwine)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000767 - 0000076D (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
                                                   osal_pwrmgr_powerconserve
                                                   osal_pwrmgr_task_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        00000767 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F3D - 00007F4A (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        00007F3D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F4B - 00007F52 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00007F4B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F53 - 00007F5C (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   osal_pwrmgr_device::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      00007F53 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F5D - 00007FA6 (0x4a bytes), align: 0
  Segment part 13.            Intra module refs:   osal_pwrmgr_task_state::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state
                                   00007F5D 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FA7 - 00007FD4 (0x2e bytes), align: 0
  Segment part 15.            Intra module refs:   osal_pwrmgr_powerconserve::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve
                                   00007FA7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054A7 - 000054AC (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init::?relay
                                   000054A7        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054AD - 000054B2 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device::?relay
                                   000054AD        LL_ProcessEvent (ll)
                                                   main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054B3 - 000054B8 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state::?relay
                                   000054B3        Hal_ProcessEvent (hal_drivers)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054B9 - 000054BE (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve::?relay
                                   000054B9        osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000076E - 0000076F (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalAddTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               0000076E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000770 - 00000773 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        00000770 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C932 - 0001C942 (0x11 bytes), align: 0
  Segment part 9.             Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0001C932 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C943 - 0001C943 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001C943 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C944 - 0001C94A (0x7 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine7
                                                   osalAddTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C94B - 0001C9E2 (0x98 bytes), align: 0
  Segment part 13.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            0001C94B 
               calls direct
               XSTACK = 00000012 ( 0000000F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C9E3 - 0001C9EE (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   osalAddTimer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001C9E3 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001C9EF - 0001CA2E (0x40 bytes), align: 0
  Segment part 16.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           0001C9EF 
               XSTACK = 0000000F ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA2F - 0001CA47 (0x19 bytes), align: 0
  Segment part 18.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         0001CA2F 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA48 - 0001CA7B (0x34 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      0001CA48 
               calls direct
               XSTACK = 00000004 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA7C - 0001CAC3 (0x48 bytes), align: 0
  Segment part 22.            Intra module refs:   osal_start_reload_timer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer
                                   0001CA7C 
               calls direct
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAC4 - 0001CAC8 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_get_timeoutEx
                                                   osal_start_reload_timer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001CAC4 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAC9 - 0001CAF7 (0x2f bytes), align: 0
  Segment part 25.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       0001CAC9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAF8 - 0001CAFC (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_stop_timerEx
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001CAF8 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAFD - 0001CB37 (0x3b bytes), align: 0
  Segment part 28.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      0001CAFD 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_num_active   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB38 - 0001CB3E (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   osalDeleteTimer
                                                   osalFindTimer
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001CB38 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB3F - 0001CD2B (0x1ed bytes), align: 0
  Segment part 33.            Intra module refs:   osalTimerUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate         0001CB3F 
               calls direct
               XSTACK = 0000000C ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD2C - 0001CD30 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   osalTimerUpdate
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001CD2C 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_adjust_timers      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD31 - 0001CD34 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001CD31 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD35 - 0001CD36 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   ?Subroutine4
                                                   osalTimerUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD37 - 0001CD3E (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   osalAddTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD3F - 0001CD9F (0x61 bytes), align: 0
  Segment part 41.            Intra module refs:   osal_next_timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout       0001CD3F 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CDA0 - 0001CDA5 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine6
                                                   osalTimerUpdate
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001CDA0 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CDA6 - 0001CDAB (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   osalTimerUpdate
                                                   osal_next_timeout
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001CDA6 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001CDAC - 0001CDB8 (0xd bytes), align: 0
  Segment part 45.            Intra module refs:   osal_GetSystemClock::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     0001CDAC 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054BF - 000054C4 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   000054BF        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054C5 - 000054CA (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_start_reload_timer
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    000054C5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054CB - 000054D0 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer::?relay   000054CB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054D1 - 000054D6 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer::?relay
                                   000054D1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054D7 - 000054DC (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx::?relay
                                   000054D7        Betwine_ProcessEvent (betwine)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   LL_ProcessEvent (ll)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054DD - 000054E2 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer::?relay
                                   000054DD        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054E3 - 000054E8 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx::?relay
                                   000054E3        GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   Segment part 58 (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   smStopRspTimer (sm_mgr)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054E9 - 000054EE (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx::?relay
                                   000054E9        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_num_active::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054EF - 000054F4 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate::?relay
                                   000054EF        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_adjust_timers::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054F5 - 000054FA (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout::?relay
                                   000054F5        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000054FB - 00005500 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock::?relay
                                   000054FB        HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OSAL_betwine.r51
  PROGRAM MODULE, NAME : OSAL_betwine

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008069 - 00008080 (0x18 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                00008069        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082BA - 000082BA (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                000082BA        osal_clear_event (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000774 - 00000775 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             00000774        ?Subroutine10 (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002136F - 000213CD (0x5f bytes), align: 0
  Segment part 9.             Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0002136F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005501 - 00005506 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   00005501        osal_init_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020069 - 00020080 (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   tasksArr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202BA - 000202BA (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   tasksCnt

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000776 - 00000776 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     00000776 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B48 - 00000B48 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    00000B48 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021024 - 00021047 (0x24 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               00021024 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021048 - 0002104C (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00021048 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002104D - 0002106E (0x22 bytes), align: 0
  Segment part 13.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0002104D 
               calls direct
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002106F - 00021075 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   Onboard_rand
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0002106F 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021076 - 0002108D (0x18 bytes), align: 0
  Segment part 18.            Intra module refs:   RegisterForKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         00021076 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002108E - 000210CF (0x42 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0002108E 
               calls direct
               XSTACK = 00000009 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000210D0 - 000210E8 (0x19 bytes), align: 0
  Segment part 22.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     000210D0 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_soft_reset      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appForceBoot            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031B7 - 000031B7 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005507 - 0000550C (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       00005507        main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000550D - 00005512 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    0000550D        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005513 - 00005518 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys::?relay
                                   00005513        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005519 - 0000551E (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys::?relay
                                   00005519 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000551F - 00005524 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback::?relay
                                   0000551F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appForceBoot::?relay    
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\app.r51
  PROGRAM MODULE, NAME : app

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   Betwine_Init (betwine)
                                                   HalKeyPoll (hal_key)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   AppStandby
                                                   Betwine_Init (betwine)
                                                   HalKeyConfig (hal_key)
                                                   halKeyPort0Isr (hal_key)
                                                   halProcessChrInterrupt (hal_key)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   AppStandby
                                                   Betwine_Init (betwine)
                                                   HalKeyConfig (hal_key)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   AppStandby
                                                   Betwine_Init (betwine)
                                                   HalKeyConfig (hal_key)
                                                   halSleep (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   Betwine_Init (betwine)
                                                   HalKeyInit (hal_key)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   AppChargerStateChangeHandler
                                                   Betwine_Init (betwine)
                                                   HalKeyInit (hal_key)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000777 - 00000778 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   AppBatteryUpdate
                                                   AppHistoryUpdate
                                                   AppHitpointUpdate
                                                   AppInit
                                                   AppTimeSet
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           currentTime             00000777 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000779 - 0000077A (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine11
                                                   AppInit
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           sleepTime               00000779 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000077B - 0000077C (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   AppInit
                                                   AppTimeSet
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           wakeTime                0000077B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000077D - 0000077D (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   AppHitpointUpdate
                                                   AppInit
                                                   AppMotorRun
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           hpUpdateState           0000077D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000077E - 00000781 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   AppHitpointUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           aminagoStep             0000077E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000782 - 00000785 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine3
                                                   AppHitpointUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           currentStep             00000782 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000786 - 00000786 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   AppHitpointUpdate
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           exerciseDuration        00000786 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000787 - 00000787 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   AppHitpointUpdate
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           sittingDuration         00000787 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000788 - 00000788 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   AppHitpointUpdate
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           exerciseInterval        00000788 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000789 - 00000789 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   AppBatteryUpdate
                                                   AppChargerRemind
                                                   AppChargerStateChangeHandler
                                                   AppDoubleClickHandler
                                                   AppHitpointUpdate
                                                   AppInit
                                                   AppMotorRun
           LOCAL                   ADDRESS         
           =====                   =======         
           chargerState            00000789 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000078A - 0000078A (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   AppBatteryUpdate
                                                   AppChargerRemind
                                                   AppChargerStateChangeHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           batteryValue            0000078A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000078B - 0000078B (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   AppChargerRemind
                                                   AppChargerStateChangeHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           chargerRemindInterval   0000078B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000078C - 0000078C (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   AppBatteryUpdate
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           batteryFullyInterval    0000078C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000078D - 00000794 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           accelFilterArray        0000078D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000795 - 00000796 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           lastAccel               00000795 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000797 - 00000798 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           maxAccel                00000797 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000799 - 0000079A (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           minAccel                00000799 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000079B - 0000079C (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           accelThresholdParam     0000079B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000079D - 0000079D (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           accelIntervalParam      0000079D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000079E - 0000079F (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           accelAverageParam       0000079E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A0 - 000007A0 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           accelInterval           000007A0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A1 - 000007A1 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           paramUpdateInterval     000007A1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A2 - 000007A2 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           pedometerPattern        000007A2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A3 - 000007A6 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   AppAccDataReadyHandler
                                                   AppHistoryUpdate
                                                   AppHitpointUpdate
                                                   AppInit
                                                   Segment part 72
           LOCAL                   ADDRESS         
           =====                   =======         
           realtimeStep            000007A3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A7 - 000007A7 (0x1 bytes), align: 0
  Segment part 37.            Intra module refs:   AppAccDataReadyHandler
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           stepUpdateWaiting       000007A7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3D3 - 0000F46E (0x9c bytes), align: 0
  Segment part 41.            Intra module refs:   AppInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppInit                 0000F3D3 
               calls direct
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F46F - 0000F473 (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   AppInit
                                                   AppMotorRun
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000F46F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F474 - 0000F477 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000F474 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F478 - 0000F483 (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   AppStandby::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppStandby              0000F478 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F484 - 0000F492 (0xf bytes), align: 0
  Segment part 47.            Intra module refs:   AppActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppActive               0000F484 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F493 - 0000F4D1 (0x3f bytes), align: 0
  Segment part 49.            Intra module refs:   AppTimeSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppTimeSet              0000F493 
               XSTACK = 0000000F ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4D2 - 0000F4DE (0xd bytes), align: 0
  Segment part 51.            Intra module refs:   AppTimeSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000F4D2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4DF - 0000F4E1 (0x3 bytes), align: 0
  Segment part 52.            Intra module refs:   AppHpReminds
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000F4DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4E2 - 0000F4E8 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   ?Subroutine1
                                                   AppActive
                                                   AppChargerRemind
                                                   AppChargerStateChangeHandler
                                                   AppDoubleClickHandler
                                                   AppStandby
                                                   AppTimeSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4E9 - 0000F54E (0x66 bytes), align: 0
  Segment part 54.            Intra module refs:   AppMotorRun::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppMotorRun             0000F4E9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F54F - 0000F5F7 (0xa9 bytes), align: 0
  Segment part 56.            Intra module refs:   AppTimeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppTimeUpdate           0000F54F 
               calls direct
               XSTACK = 00000000 ( 00000006 )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F5F8 - 0000F600 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   ?Subroutine10
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000F5F8 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F601 - 0000F60C (0xc bytes), align: 0
  Segment part 59.            Intra module refs:   AppTimeSet
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000F601 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F60D - 0000F76C (0x160 bytes), align: 0
  Segment part 60.            Intra module refs:   AppHitpointUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppHitpointUpdate       0000F60D 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F76D - 0000F774 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   AppHistoryUpdate
                                                   AppHitpointUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000F76D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F775 - 0000F77C (0x8 bytes), align: 0
  Segment part 63.            Intra module refs:   AppHitpointUpdate
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000F775 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F77D - 0000F83B (0xbf bytes), align: 0
  Segment part 64.            Intra module refs:   AppBatteryUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppBatteryUpdate        0000F77D 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F83C - 0000F844 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   AppBatteryUpdate
                                                   AppTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000F83C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F845 - 0000F948 (0x104 bytes), align: 0
  Segment part 67.            Intra module refs:   AppHistoryUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppHistoryUpdate        0000F845 
               calls direct
               XSTACK = 00000000 ( 00000025 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F949 - 0000F94B (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   AppHistoryUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000F949 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F94C - 0000F951 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   ?Subroutine13
                                                   AppAccDataReadyHandler
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F952 - 0000F953 (0x2 bytes), align: 0
  Segment part 71.            Intra module refs:   AppAccDataReadyHandler
                                                   AppHistoryUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000F952 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F954 - 0000F95A (0x7 bytes), align: 0
  Segment part 72.            Intra module refs:   ?Subroutine4
                                                   AppAccDataReadyHandler
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F95B - 0000F968 (0xe bytes), align: 0
  Segment part 73.            Intra module refs:   AppHistoryUpdate
                                                   AppInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000F95B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F969 - 0000F970 (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine3
                                                   ?Subroutine5
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000F969 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F971 - 0000F985 (0x15 bytes), align: 0
  Segment part 75.            Intra module refs:   AppDoubleClickHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppDoubleClickHandler   0000F971 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000F986 - 0000FCF0 (0x36b bytes), align: 0
  Segment part 77.            Intra module refs:   AppAccDataReadyHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppAccDataReadyHandler
                                   0000F986 
               calls direct
               XSTACK = 00000000 ( 0000005B )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCF1 - 0000FCF2 (0x2 bytes), align: 0
  Segment part 79.            Intra module refs:   AppAccDataReadyHandler
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000FCF1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCF3 - 0000FCFE (0xc bytes), align: 0
  Segment part 80.            Intra module refs:   ?Subroutine9
                                                   AppAccDataReadyHandler
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCFF - 0000FD04 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   AppAccDataReadyHandler
                                                   AppTimeSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000FCFF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD05 - 0000FD70 (0x6c bytes), align: 0
  Segment part 82.            Intra module refs:   AppChargerStateChangeHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppChargerStateChangeHandler
                                   0000FD05 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD71 - 0000FD79 (0x9 bytes), align: 0
  Segment part 84.            Intra module refs:   AppChargerStateChangeHandler
                                                   AppStandby
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000FD71 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD7A - 0000FDF1 (0x78 bytes), align: 0
  Segment part 85.            Intra module refs:   AppHpReminds::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           AppHpReminds            0000FD7A 
               calls direct
               XSTACK = 00000011 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDF2 - 0000FEEE (0xfd bytes), align: 0
  Segment part 87.            Intra module refs:   AppChargerRemind::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           AppChargerRemind        0000FDF2 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005525 - 0000552A (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppInit::?relay         00005525        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000552B - 00005530 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppStandby::?relay      0000552B        systemStandby (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005531 - 00005536 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppActive::?relay       00005531        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005537 - 0000553C (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   AppInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppTimeSet::?relay      00005537        timesetChangeCB (betwine)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000553D - 00005542 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppMotorRun::?relay     0000553D        motorrunChangeCB (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005543 - 00005548 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppTimeUpdate::?relay   00005543        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005549 - 0000554E (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppHitpointUpdate::?relay
                                   00005549        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000554F - 00005554 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppBatteryUpdate::?relay
                                   0000554F        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005555 - 0000555A (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppHistoryUpdate::?relay
                                   00005555        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000555B - 00005560 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppDoubleClickHandler::?relay
                                   0000555B        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005561 - 00005566 (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppAccDataReadyHandler::?relay
                                   00005561        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005567 - 0000556C (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AppChargerStateChangeHandler::?relay
                                   00005567        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000556D - 00005572 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   AppDoubleClickHandler
                                                   AppHitpointUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           AppHpReminds::?relay    0000556D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005573 - 00005578 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   AppChargerStateChangeHandler
           LOCAL                   ADDRESS         
           =====                   =======         
           AppChargerRemind::?relay
                                   00005573 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081AF - 000081B2 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   AppHitpointUpdate
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081B3 - 000081B6 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   AppHitpointUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_28           000081B3 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081B7 - 000081BA (0x4 bytes), align: 0
  Segment part 39.            Intra module refs:   AppAccDataReadyHandler
                                                   llScheduleTask (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5            000081B7 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081BB - 000081BE (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   AppAccDataReadyHandler
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   gapIncSignCounter (gap_configmgr)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            000081BB 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201AF - 000201B2 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201B3 - 000201B6 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   __Constant_28
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201B7 - 000201BA (0x4 bytes), align: 0
  Segment part 91.            Intra module refs:   __Constant_5
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201BB - 000201BE (0x4 bytes), align: 0
  Segment part 92.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\battservice.r51
  PROGRAM MODULE, NAME : battservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082A6 - 000082A7 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   btService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btServUUID              000082A6 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000829C - 0000829D (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btValueUUID             0000829C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008258 - 0000825A (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           btService               00008258 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B49 - 00000B49 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           btProps                 00000B49 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B4A - 00000B4A (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   BT_SetParameter
                                                   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           btValue                 00000B4A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A8 - 000007AD (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   BT_AddService
                                                   BT_HandleConnStatusCB
                                                   BT_SetParameter
                                                   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           btConfig                000007A8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B4B - 00000B52 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           btUserDesp              00000B4B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B53 - 00000B7A (0x28 bytes), align: 0
  Segment part 16.            Intra module refs:   BT_AddService
                                                   BT_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           batteryAttrTbl          00000B53 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008182 - 00008187 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   BT_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btCBs                   00008182 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000209B0 - 000209ED (0x3e bytes), align: 0
  Segment part 19.            Intra module refs:   BT_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_AddService           000209B0 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000209EE - 000209F4 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   BT_AddService
                                                   BT_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000209EE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000209F5 - 00020A48 (0x54 bytes), align: 0
  Segment part 22.            Intra module refs:   BT_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_SetParameter         000209F5 
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_GetParameter         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020A49 - 00020AB8 (0x70 bytes), align: 0
  Segment part 26.            Intra module refs:   BT_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_ReadAttrCB           00020A49 
               is indirectly called
               XSTACK = 00000006 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020AB9 - 00020ABD (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   BT_ReadAttrCB
                                                   BT_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00020AB9 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020ABE - 00020AC6 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   BT_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00020ABE 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020AC7 - 00020B12 (0x4c bytes), align: 0
  Segment part 30.            Intra module refs:   BT_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_WriteAttrCB          00020AC7 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020B13 - 00020B25 (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   BT_ReadAttrCB
                                                   BT_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00020B13 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020B26 - 00020B5E (0x39 bytes), align: 0
  Segment part 33.            Intra module refs:   BT_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_HandleConnStatusCB   00020B26 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031B8 - 000031B8 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   btProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031B9 - 000031B9 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   btValue
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031BA - 000031C1 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   btUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031C2 - 000031E9 (0x28 bytes), align: 0
  Segment part 17.            Intra module refs:   batteryAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005579 - 0000557E (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_AddService::?relay   00005579        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000557F - 00005584 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_SetParameter::?relay
                                   0000557F        AppBatteryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BT_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005585 - 0000558A (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   btCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_ReadAttrCB::?relay   00005585 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000558B - 00005590 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   btCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_WriteAttrCB::?relay
                                   0000558B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005591 - 00005596 (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   BT_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           BT_HandleConnStatusCB::?relay
                                   00005591 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202A6 - 000202A7 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   btServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002029C - 0002029D (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   btValueUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020258 - 0002025A (0x3 bytes), align: 0
  Segment part 37.            Intra module refs:   btService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020182 - 00020187 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   btCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\betwine.r51
  PROGRAM MODULE, NAME : betwine

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   Betwine_Init
                                                   HalKeyPoll (hal_key)
                                                   HalLedOnOff (hal_led)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   Betwine_Init
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   motorrunChangeCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   Betwine_Init
                                                   HalKeyInit (hal_key)
                                                   LL_PowerOffReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   Betwine_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   Betwine_Init
                                                   HalKeyInit (hal_key)
                                                   HalLedInit (hal_led)
                                                   LL_PowerOffReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   Betwine_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
IMAGE_HEADER
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _imgHdr                 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007AE - 000007AF (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine17
                                                   ?Subroutine45
                                                   Betwine_ProcessEvent
                                                   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSeq               000007AE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B0 - 000007B1 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   ?Subroutine24
                                                   ?Subroutine32
                                                   Betwine_ProcessEvent
                                                   wechatAuthReqDataFree
                                                   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           AuthReqData             000007B0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B2 - 000007B3 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           AuthReqPbData           000007B2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B4 - 000007B5 (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   ?Subroutine11
                                                   ?Subroutine43
                                                   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           AuthReqHead             000007B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B6 - 000007B7 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   wechatAuthReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AuthReqPbLen            000007B6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B8 - 000007B9 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine33
                                                   Betwine_ProcessEvent
                                                   wechatInitReqDataFree
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           InitReqData             000007B8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BA - 000007BB (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           InitReqPbData           000007BA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BC - 000007BD (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine12
                                                   ?Subroutine44
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           InitReqHead             000007BC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007BE - 000007BF (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   wechatInitReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitReqPbLen            000007BE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C0 - 000007C1 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine34
                                                   Betwine_ProcessEvent
                                                   wechatSendReqDataFree
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           SendReqData             000007C0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C2 - 000007C3 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           SendReqPbData           000007C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C4 - 000007C5 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine29
                                                   ?Subroutine50
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           SendReqHead             000007C4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C6 - 000007C7 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   wechatSendReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendReqPbLen            000007C6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007C8 - 000007C9 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           receiveData             000007C8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007CA - 000007CB (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine23
                                                   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           receiveOffset           000007CA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007CC - 000007CC (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           receiveRemainder        000007CC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007CD - 000007DB (0xf bytes), align: 0
  Segment part 42.            Intra module refs:   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           Timestamp_wc            000007CD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DC - 000007E1 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   peripheralStateNotificationCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mac_Address             000007DC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B7B - 00000B7C (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   wechatAuthReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_name             00000B7B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B7D - 00000B7E (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   wechatAuthReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timezone                00000B7D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B7F - 00000B80 (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   wechatAuthReqDataInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           language                00000B7F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007E2 - 000007E2 (0x1 bytes), align: 0
  Segment part 50.            Intra module refs:   Betwine_Init
                                                   Betwine_ProcessEvent
                                                   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           Betwine_TaskID          000007E2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007E3 - 000007E3 (0x1 bytes), align: 0
  Segment part 51.            Intra module refs:   Betwine_ProcessEvent
                                                   peripheralStateNotificationCB
                                                   systemStandby
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProfileState         000007E3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B81 - 00000B99 (0x19 bytes), align: 0
  Segment part 52.            Intra module refs:   Betwine_Init
                                                   peripheralStateNotificationCB
                                                   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           scanRspData             00000B81 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B9A - 00000BAC (0x13 bytes), align: 0
  Segment part 54.            Intra module refs:   Betwine_Init
                                                   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           advertData              00000B9A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BAD - 00000BB6 (0xa bytes), align: 0
  Segment part 56.            Intra module refs:   Betwine_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           attDeviceName           00000BAD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007E4 - 000007E4 (0x1 bytes), align: 0
  Segment part 58.            Intra module refs:   Betwine_ProcessEvent
                                                   systemStandby
           LOCAL                   ADDRESS         
           =====                   =======         
           systemState             000007E4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BB7 - 00000BBA (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           Betwine_PeripheralCBs   00000BB7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007E5 - 000007E8 (0x4 bytes), align: 0
  Segment part 61.            Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           Betwine_BondMgrCBs      000007E5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BBB - 00000BBC (0x2 bytes), align: 0
  Segment part 62.            Intra module refs:   Betwine_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           motorrunProfileCBs      00000BBB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BBD - 00000BBE (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   Betwine_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           timesetProfileCBs       00000BBD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BBF - 00000BC0 (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   Betwine_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           wcProfileChangeCBs      00000BBF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D46B - 0000D69C (0x232 bytes), align: 0
  Segment part 71.            Intra module refs:   Betwine_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Betwine_Init            0000D46B 
               calls direct
               XSTACK = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D69D - 0000D69F (0x3 bytes), align: 0
  Segment part 73.            Intra module refs:   Betwine_Init
                                                   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000D69D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6A0 - 0000D6A4 (0x5 bytes), align: 0
  Segment part 74.            Intra module refs:   ?Subroutine0
                                                   motorrunChangeCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6A5 - 0000D837 (0x193 bytes), align: 0
  Segment part 75.            Intra module refs:   Betwine_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Betwine_ProcessEvent    0000D6A5 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D838 - 0000D95A (0x123 bytes), align: 0
  Segment part 77.            Intra module refs:   peripheralStateNotificationCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB
                                   0000D838 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D95B - 0000D9A8 (0x4e bytes), align: 0
  Segment part 79.            Intra module refs:   systemStandby::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           systemStandby           0000D95B 
               calls direct
               XSTACK = 0000000E ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D9A9 - 0000D9D3 (0x2b bytes), align: 0
  Segment part 81.            Intra module refs:   motorrunChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           motorrunChangeCB        0000D9A9 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D9D4 - 0000D9DD (0xa bytes), align: 0
  Segment part 83.            Intra module refs:   timesetChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           timesetChangeCB         0000D9D4 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D9DE - 0000DA88 (0xab bytes), align: 0
  Segment part 85.            Intra module refs:   wechatChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatChangeCB          0000D9DE 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA89 - 0000DA8D (0x5 bytes), align: 0
  Segment part 87.            Intra module refs:   wechatAuthReqDataInit
                                                   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000DA89 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DA8E - 0000DC58 (0x1cb bytes), align: 0
  Segment part 88.            Intra module refs:   wechatAuthReqDataInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatAuthReqDataInit   0000DA8E 
               calls direct
               XSTACK = 0000000E ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC59 - 0000DC64 (0xc bytes), align: 0
  Segment part 90.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine38           0000DC59 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC65 - 0000DC6E (0xa bytes), align: 0
  Segment part 91.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine37           0000DC65 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC6F - 0000DC7A (0xc bytes), align: 0
  Segment part 92.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine36           0000DC6F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC7B - 0000DC81 (0x7 bytes), align: 0
  Segment part 93.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine32           0000DC7B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC82 - 0000DC86 (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine30           0000DC82 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC87 - 0000DC8B (0x5 bytes), align: 0
  Segment part 95.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0000DC87 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC8C - 0000DC93 (0x8 bytes), align: 0
  Segment part 96.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000DC8C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC94 - 0000DC9F (0xc bytes), align: 0
  Segment part 97.            Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000DC94 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCA0 - 0000DCA7 (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   ?Subroutine18
                                                   ?Subroutine6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine43           0000DCA0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCA8 - 0000DCC0 (0x19 bytes), align: 0
  Segment part 99.            Intra module refs:   wechatAuthReqDataFree::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatAuthReqDataFree   0000DCA8 
               calls direct
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCC1 - 0000DCC7 (0x7 bytes), align: 0
  Segment part 101.           Intra module refs:   systemStandby
                                                   timesetChangeCB
                                                   wechatAuthReqDataFree
                                                   wechatInitReqDataFree
                                                   wechatSendReqDataFree
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000DCC1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DCC8 - 0000DE17 (0x150 bytes), align: 0
  Segment part 102.           Intra module refs:   wechatInitReqDataInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatInitReqDataInit   0000DCC8 
               calls direct
               XSTACK = 0000000E ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE18 - 0000DE22 (0xb bytes), align: 0
  Segment part 104.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine39           0000DE18 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE23 - 0000DE2C (0xa bytes), align: 0
  Segment part 105.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine35           0000DE23 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE2D - 0000DE33 (0x7 bytes), align: 0
  Segment part 106.           Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine33           0000DE2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE34 - 0000DE3B (0x8 bytes), align: 0
  Segment part 107.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine31           0000DE34 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE3C - 0000DE48 (0xd bytes), align: 0
  Segment part 108.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine28           0000DE3C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE49 - 0000DE4B (0x3 bytes), align: 0
  Segment part 109.           Intra module refs:   ?Subroutine28
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine45           0000DE49 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE4C - 0000DE51 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   ?Subroutine31
                                                   ?Subroutine32
                                                   ?Subroutine33
                                                   ?Subroutine34
                                                   ?Subroutine45
                                                   wechatDataDecode
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE52 - 0000DE58 (0x7 bytes), align: 0
  Segment part 111.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine27           0000DE52 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE59 - 0000DE62 (0xa bytes), align: 0
  Segment part 112.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine25           0000DE59 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE63 - 0000DE69 (0x7 bytes), align: 0
  Segment part 113.           Intra module refs:   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine23           0000DE63 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE6A - 0000DE6F (0x6 bytes), align: 0
  Segment part 114.           Intra module refs:   ?Subroutine23
                                                   Betwine_ProcessEvent
                                                   wechatAuthReqDataFree
                                                   wechatAuthReqDataInit
                                                   wechatChangeCB
                                                   wechatInitReqDataFree
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataFree
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE70 - 0000DE74 (0x5 bytes), align: 0
  Segment part 115.           Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0000DE70 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE75 - 0000DE75 (0x1 bytes), align: 0
  Segment part 116.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000DE75 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE76 - 0000DE79 (0x4 bytes), align: 0
  Segment part 117.           Intra module refs:   ?Subroutine14
                                                   wechatAuthReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE7A - 0000DE82 (0x9 bytes), align: 0
  Segment part 118.           Intra module refs:   ?Subroutine41
                                                   Segment part 117
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine49           0000DE7A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE83 - 0000DE89 (0x7 bytes), align: 0
  Segment part 119.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000DE83 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE8A - 0000DE91 (0x8 bytes), align: 0
  Segment part 120.           Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000DE8A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE92 - 0000DE9B (0xa bytes), align: 0
  Segment part 121.           Intra module refs:   ?Subroutine11
                                                   ?Subroutine12
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine47           0000DE92 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DE9C - 0000DEA2 (0x7 bytes), align: 0
  Segment part 122.           Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000DE9C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEA3 - 0000DEA8 (0x6 bytes), align: 0
  Segment part 123.           Intra module refs:   ?Subroutine10
                                                   ?Subroutine13
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine41           0000DEA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEA9 - 0000DEB4 (0xc bytes), align: 0
  Segment part 124.           Intra module refs:   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000DEA9 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEB5 - 0000DEBC (0x8 bytes), align: 0
  Segment part 125.           Intra module refs:   ?Subroutine19
                                                   ?Subroutine7
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine44           0000DEB5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEBD - 0000DEC1 (0x5 bytes), align: 0
  Segment part 126.           Intra module refs:   ?Subroutine43
                                                   ?Subroutine44
                                                   ?Subroutine46
                                                   ?Subroutine48
                                                   ?Subroutine50
                                                   Segment part 149
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine51           0000DEBD 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEC2 - 0000DEC7 (0x6 bytes), align: 0
  Segment part 127.           Intra module refs:   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000DEC2 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEC8 - 0000DECD (0x6 bytes), align: 0
  Segment part 128.           Intra module refs:   ?Subroutine5
                                                   wechatAuthReqDataInit
                                                   wechatChangeCB
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DECE - 0000DEE9 (0x1c bytes), align: 0
  Segment part 129.           Intra module refs:   wechatInitReqDataFree::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatInitReqDataFree   0000DECE 
               calls direct
               XSTACK = 00000010 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000DEEA - 0000E04E (0x165 bytes), align: 0
  Segment part 131.           Intra module refs:   wechatSendReqDataInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendReqDataInit   0000DEEA 
               calls direct
               XSTACK = 0000000E ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E04F - 0000E055 (0x7 bytes), align: 0
  Segment part 133.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine34           0000E04F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E056 - 0000E058 (0x3 bytes), align: 0
  Segment part 134.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine29           0000E056 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E059 - 0000E05C (0x4 bytes), align: 0
  Segment part 135.           Intra module refs:   ?Subroutine29
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E05D - 0000E064 (0x8 bytes), align: 0
  Segment part 136.           Intra module refs:   ?Subroutine27
                                                   Segment part 135
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine48           0000E05D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E065 - 0000E066 (0x2 bytes), align: 0
  Segment part 137.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           0000E065 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E067 - 0000E068 (0x2 bytes), align: 0
  Segment part 138.           Intra module refs:   ?Subroutine22
                                                   Betwine_Init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E069 - 0000E06D (0x5 bytes), align: 0
  Segment part 139.           Intra module refs:   Betwine_Init
                                                   Segment part 138
                                                   wechatAuthReqDataInit
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E06E - 0000E076 (0x9 bytes), align: 0
  Segment part 140.           Intra module refs:   wechatAuthReqDataInit
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           0000E06E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E077 - 0000E07B (0x5 bytes), align: 0
  Segment part 141.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           0000E077 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E07C - 0000E082 (0x7 bytes), align: 0
  Segment part 142.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000E07C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E083 - 0000E08D (0xb bytes), align: 0
  Segment part 143.           Intra module refs:   ?Subroutine15
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine42           0000E083 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E08E - 0000E091 (0x4 bytes), align: 0
  Segment part 144.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000E08E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E092 - 0000E09B (0xa bytes), align: 0
  Segment part 145.           Intra module refs:   ?Subroutine8
                                                   ?Subroutine9
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine40           0000E092 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E09C - 0000E0A3 (0x8 bytes), align: 0
  Segment part 146.           Intra module refs:   ?Subroutine20
                                                   ?Subroutine40
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine50           0000E09C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0A4 - 0000E0A9 (0x6 bytes), align: 0
  Segment part 147.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000E0A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0AA - 0000E0AF (0x6 bytes), align: 0
  Segment part 148.           Intra module refs:   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000E0AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0B0 - 0000E0BA (0xb bytes), align: 0
  Segment part 149.           Intra module refs:   ?Subroutine4
                                                   wechatSendReqDataInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0BB - 0000E0D9 (0x1f bytes), align: 0
  Segment part 150.           Intra module refs:   wechatSendReqDataFree::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendReqDataFree   0000E0BB 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0DA - 0000E0DC (0x3 bytes), align: 0
  Segment part 152.           Intra module refs:   wechatAuthReqDataFree
                                                   wechatAuthReqDataInit
                                                   wechatInitReqDataFree
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine24           0000E0DA 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0DD - 0000E0E2 (0x6 bytes), align: 0
  Segment part 153.           Intra module refs:   ?Subroutine24
                                                   wechatAuthReqDataInit
                                                   wechatChangeCB
                                                   wechatDataDecode
                                                   wechatInitReqDataInit
                                                   wechatSendReqDataFree
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0E3 - 0000E0E7 (0x5 bytes), align: 0
  Segment part 154.           Intra module refs:   ?Subroutine26
                                                   ?Subroutine30
                                                   Segment part 153
                                                   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine46           0000E0E3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E0E8 - 0000E195 (0xae bytes), align: 0
  Segment part 155.           Intra module refs:   wechatSendData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendData          0000E0E8 
               calls direct
               XSTACK = 0000000E ( 00000022 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E196 - 0000E19D (0x8 bytes), align: 0
  Segment part 157.           Intra module refs:   Betwine_ProcessEvent
                                                   wechatDataDecode
                                                   wechatInitReqDataInit
                                                   wechatSendData
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000E196 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E19E - 0000E44D (0x2b0 bytes), align: 0
  Segment part 158.           Intra module refs:   wechatDataDecode::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatDataDecode        0000E19E 
               calls direct
               XSTACK = 0000000A ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E44E - 0000E45E (0x11 bytes), align: 0
  Segment part 160.           Intra module refs:   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine26           0000E44E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E45F - 0000E46B (0xd bytes), align: 0
  Segment part 161.           Intra module refs:   Betwine_ProcessEvent
                                                   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000E45F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000E46C - 0000E475 (0xa bytes), align: 0
  Segment part 162.           Intra module refs:   wechatDataDecode
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000E46C 
    -------------------------------------------------------------------------
ISTACK
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031EA - 000031EB (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   device_name
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031EC - 000031ED (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   timezone
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031EE - 000031EF (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   language
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000031F0 - 00003208 (0x19 bytes), align: 0
  Segment part 53.            Intra module refs:   scanRspData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003209 - 0000321B (0x13 bytes), align: 0
  Segment part 55.            Intra module refs:   advertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000321C - 00003225 (0xa bytes), align: 0
  Segment part 57.            Intra module refs:   attDeviceName
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003226 - 00003229 (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   Betwine_PeripheralCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000322A - 0000322B (0x2 bytes), align: 0
  Segment part 63.            Intra module refs:   motorrunProfileCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000322C - 0000322D (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   timesetProfileCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000322E - 0000322F (0x2 bytes), align: 0
  Segment part 67.            Intra module refs:   wcProfileChangeCBs
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005597 - 0000559C (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Betwine_Init::?relay    00005597        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000559D - 000055A2 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Betwine_ProcessEvent::?relay
                                   0000559D        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055A3 - 000055A8 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   Segment part 60
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB::?relay
                                   000055A3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055A9 - 000055AE (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   Betwine_ProcessEvent
                                                   motorrunChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           systemStandby::?relay   000055A9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055AF - 000055B4 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 63
           LOCAL                   ADDRESS         
           =====                   =======         
           motorrunChangeCB::?relay
                                   000055AF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055B5 - 000055BA (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 65
           LOCAL                   ADDRESS         
           =====                   =======         
           timesetChangeCB::?relay
                                   000055B5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055BB - 000055C0 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 67
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatChangeCB::?relay
                                   000055BB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055C1 - 000055C6 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatAuthReqDataInit::?relay
                                   000055C1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055C7 - 000055CC (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   Betwine_ProcessEvent
                                                   wechatAuthReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatAuthReqDataFree::?relay
                                   000055C7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055CD - 000055D2 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatInitReqDataInit::?relay
                                   000055CD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055D3 - 000055D8 (0x6 bytes), align: 0
  Segment part 130.           Intra module refs:   Betwine_ProcessEvent
                                                   wechatInitReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatInitReqDataFree::?relay
                                   000055D3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055D9 - 000055DE (0x6 bytes), align: 0
  Segment part 132.           Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendReqDataInit::?relay
                                   000055D9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055DF - 000055E4 (0x6 bytes), align: 0
  Segment part 151.           Intra module refs:   Betwine_ProcessEvent
                                                   wechatSendReqDataInit
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendReqDataFree::?relay
                                   000055DF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055E5 - 000055EA (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   Betwine_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatSendData::?relay
                                   000055E5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055EB - 000055F0 (0x6 bytes), align: 0
  Segment part 159.           Intra module refs:   wechatChangeCB
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatDataDecode::?relay
                                   000055EB 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008132 - 00008139 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 45
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008176 - 0000817B (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 47
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008170 - 00008175 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 49
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081DB - 000081DE (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   wechatInitReqDataInit
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081DF - 000081E2 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   wechatSendReqDataInit
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081E3 - 000081E6 (0x4 bytes), align: 0
  Segment part 68.            Intra module refs:   Betwine_Init
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset (osal_snv)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smpResponderProcessIncoming (sm_rsppairing)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     000081E3 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081E7 - 000081EA (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   Betwine_ProcessEvent
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         000081E7 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081EB - 000081EE (0x4 bytes), align: 0
  Segment part 70.            Intra module refs:   Betwine_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_bb8          000081EB 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020132 - 00020139 (0x8 bytes), align: 0
  Segment part 163.           Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020176 - 0002017B (0x6 bytes), align: 0
  Segment part 164.           Intra module refs:   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020170 - 00020175 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201DB - 000201DE (0x4 bytes), align: 0
  Segment part 166.           Intra module refs:   Segment part 23
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201DF - 000201E2 (0x4 bytes), align: 0
  Segment part 167.           Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201E3 - 000201E6 (0x4 bytes), align: 0
  Segment part 168.           Intra module refs:   __Constant_ffffffff
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201E7 - 000201EA (0x4 bytes), align: 0
  Segment part 169.           Intra module refs:   __Constant_ea60
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201EB - 000201EE (0x4 bytes), align: 0
  Segment part 170.           Intra module refs:   __Constant_bb8

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\betwine_main.r51
  PROGRAM MODULE, NAME : betwine_main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000213CE - 00021425 (0x58 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000213CE        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main::?relay            
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\devinfoservice.r51
  PROGRAM MODULE, NAME : devinfoservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008290 - 00008291 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   devInfoService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoServUUID         00008290 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008286 - 00008287 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSystemIdUUID     00008286 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000827E - 0000827F (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoModelNumberUUID
                                   0000827E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008276 - 00008277 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSerialNumberUUID
                                   00008276 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008274 - 00008275 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoFirmwareRevUUID
                                   00008274 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008272 - 00008273 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoHardwareRevUUID
                                   00008272 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008270 - 00008271 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSoftwareRevUUID
                                   00008270 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000826E - 0000826F (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoMfrNameUUID      0000826E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000826C - 0000826D (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfo11073CertUUID    0000826C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000826A - 0000826B (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoPnpIdUUID        0000826A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008252 - 00008254 (0x3 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoService          00008252 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC1 - 00000BC1 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemIdProps    00000BC1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007E9 - 000007F0 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   DevInfo_SetParameter
                                                   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemId         000007E9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC2 - 00000BC2 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumberProps
                                   00000BC2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008115 - 00008121 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumber      00008115 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC3 - 00000BC3 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumberProps
                                   00000BC3 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008107 - 00008114 (0xe bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumber     00008107 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC4 - 00000BC4 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRevProps
                                   00000BC4 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008093 - 000080A4 (0x12 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRev      00008093 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC5 - 00000BC5 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRevProps
                                   00000BC5 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080A5 - 000080B6 (0x12 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRev      000080A5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC6 - 00000BC6 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRevProps
                                   00000BC6 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080B7 - 000080C8 (0x12 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRev      000080B7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC7 - 00000BC7 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrNameProps     00000BC7 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008081 - 00008092 (0x12 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrName          00008081 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC8 - 00000BC8 (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073CertProps   00000BC8 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000080F9 - 00008106 (0xe bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073Cert        000080F9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC9 - 00000BC9 (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 46
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpIdProps       00000BC9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BCA - 00000BD0 (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 46
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpId            00000BCA 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BD1 - 00000C68 (0x98 bytes), align: 0
  Segment part 45.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoAttrTbl          00000BD1 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008188 - 0000818D (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   DevInfo_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoCBs              00008188 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E1B4 - 0001E1D3 (0x20 bytes), align: 0
  Segment part 48.            Intra module refs:   DevInfo_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService      0001E1B4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E1D4 - 0001E1D8 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   DevInfo_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001E1D4 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E1D9 - 0001E204 (0x2c bytes), align: 0
  Segment part 51.            Intra module refs:   DevInfo_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter    0001E1D9 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_GetParameter    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E205 - 0001E47F (0x27b bytes), align: 0
  Segment part 55.            Intra module refs:   devInfo_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB      0001E205 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E480 - 0001E486 (0x7 bytes), align: 0
  Segment part 57.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001E480 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E487 - 0001E492 (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001E487 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E493 - 0001E493 (0x1 bytes), align: 0
  Segment part 59.            Intra module refs:   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001E493 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E494 - 0001E49F (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   ?Subroutine1
                                                   devInfo_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E4A0 - 0001E4AE (0xf bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 60
                                                   devInfo_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001E4A0 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003230 - 00003230 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   devInfoSystemIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003231 - 00003231 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   devInfoModelNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003232 - 00003232 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   devInfoSerialNumberProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003233 - 00003233 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   devInfoFirmwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003234 - 00003234 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   devInfoHardwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003235 - 00003235 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   devInfoSoftwareRevProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003236 - 00003236 (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   devInfoMfrNameProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003237 - 00003237 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   devInfo11073CertProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003238 - 00003238 (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   devInfoPnpIdProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003239 - 0000323F (0x7 bytes), align: 0
  Segment part 44.            Intra module refs:   devInfoPnpId
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003240 - 000032D7 (0x98 bytes), align: 0
  Segment part 46.            Intra module refs:   devInfoAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055F1 - 000055F6 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService::?relay
                                   000055F1        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055F7 - 000055FC (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter::?relay
                                   000055F7        peripheralStateNotificationCB (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000055FD - 00005602 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   devInfoCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB::?relay
                                   000055FD 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020290 - 00020291 (0x2 bytes), align: 0
  Segment part 62.            Intra module refs:   devInfoServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020286 - 00020287 (0x2 bytes), align: 0
  Segment part 63.            Intra module refs:   devInfoSystemIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002027E - 0002027F (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   devInfoModelNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020276 - 00020277 (0x2 bytes), align: 0
  Segment part 65.            Intra module refs:   devInfoSerialNumberUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020274 - 00020275 (0x2 bytes), align: 0
  Segment part 66.            Intra module refs:   devInfoFirmwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020272 - 00020273 (0x2 bytes), align: 0
  Segment part 67.            Intra module refs:   devInfoHardwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020270 - 00020271 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   devInfoSoftwareRevUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002026E - 0002026F (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   devInfoMfrNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002026C - 0002026D (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   devInfo11073CertUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002026A - 0002026B (0x2 bytes), align: 0
  Segment part 71.            Intra module refs:   devInfoPnpIdUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020252 - 00020254 (0x3 bytes), align: 0
  Segment part 72.            Intra module refs:   devInfoService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020115 - 00020121 (0xd bytes), align: 0
  Segment part 73.            Intra module refs:   devInfoModelNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020107 - 00020114 (0xe bytes), align: 0
  Segment part 74.            Intra module refs:   devInfoSerialNumber
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020093 - 000200A4 (0x12 bytes), align: 0
  Segment part 75.            Intra module refs:   devInfoFirmwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200A5 - 000200B6 (0x12 bytes), align: 0
  Segment part 76.            Intra module refs:   devInfoHardwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200B7 - 000200C8 (0x12 bytes), align: 0
  Segment part 77.            Intra module refs:   devInfoSoftwareRev
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020081 - 00020092 (0x12 bytes), align: 0
  Segment part 78.            Intra module refs:   devInfoMfrName
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000200F9 - 00020106 (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   devInfo11073Cert
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020188 - 0002018D (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   devInfoCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\epb.r51
  PROGRAM MODULE, NAME : epb

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019ADC - 00019AE9 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   sizeof_tag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sizeof_tag              00019ADC 
               XSTACK = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019AEA - 00019C9D (0x1b4 bytes), align: 0
  Segment part 10.            Intra module refs:   epb_get_tag_value_offset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_get_tag_value_offset
                                   00019AEA 
               calls direct
               XSTACK = 00000014 ( 0000001C )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019C9E - 00019CAC (0xf bytes), align: 0
  Segment part 12.            Intra module refs:   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00019C9E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019CAD - 00019CB8 (0xc bytes), align: 0
  Segment part 13.            Intra module refs:   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00019CAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019CB9 - 00019CC0 (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00019CB9 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019CC1 - 00019D4E (0x8e bytes), align: 0
  Segment part 15.            Intra module refs:   epb_get_varint32_bits::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_get_varint32_bits   00019CC1 
               XSTACK = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D4F - 00019D51 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00019D4F 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D52 - 00019D56 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine1
                                                   epb_get_varint32_bits
                                                   epb_set_bytes
                                                   epb_varint32_pack_size
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D57 - 00019D63 (0xd bytes), align: 0
  Segment part 19.            Intra module refs:   epb_unpack_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init         00019D57 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D64 - 00019D7A (0x17 bytes), align: 0
  Segment part 21.            Intra module refs:   epb_set_message
                                                   epb_set_string
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00019D64 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D7B - 00019D7C (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine0
                                                   epb_set_int32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D7D - 00019D7F (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine5
                                                   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D80 - 00019D86 (0x7 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   epb_get_int32
                                                   epb_get_packed_size
                                                   epb_pack_buf_remain
                                                   epb_pack_init
                                                   epb_unpack_init
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019D87 - 00019DB2 (0x2c bytes), align: 0
  Segment part 25.            Intra module refs:   epb_has_tag::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_has_tag             00019D87 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019DB3 - 00019DB7 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   epb_has_tag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00019DB3 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019DB8 - 00019E44 (0x8d bytes), align: 0
  Segment part 28.            Intra module refs:   epb_get_uint32::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_uint32          00019DB8 
               calls direct
               XSTACK = 00000010 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E45 - 00019E4F (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   epb_get_bytes
                                                   epb_get_uint32
                                                   epb_has_tag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00019E45 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E50 - 00019E55 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ?Subroutine9
                                                   epb_get_packed_size
                                                   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine21           00019E50 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E56 - 00019E5F (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   epb_get_int32::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_int32           00019E56 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_sint32          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_bool            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E60 - 00019E69 (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   epb_get_enum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_enum            00019E60 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E6A - 00019E75 (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   epb_set_enum
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00019E6A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E76 - 00019E7A (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine4
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E7B - 00019E7F (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 41
                                                   epb_get_enum
                                                   epb_length_delimited_pack_size
                                                   epb_set_uint32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019E80 - 00019F18 (0x99 bytes), align: 0
  Segment part 43.            Intra module refs:   epb_get_bytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_bytes           00019E80 
               calls direct
               XSTACK = 00000002 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F19 - 00019F21 (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   epb_get_bytes
                                                   epb_get_varint32_bits
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00019F19 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F22 - 00019F26 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   epb_get_bytes
                                                   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00019F22 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F27 - 00019F2D (0x7 bytes), align: 0
  Segment part 47.            Intra module refs:   ?Subroutine10
                                                   ?Subroutine12
                                                   epb_get_tag_value_offset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00019F27 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F2E, align: 0
  Segment part 48.            Intra module refs:   epb_get_string::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_string          00019F2E 
               calls direct
               XSTACK = 00000002 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F2E - 00019F42 (0x15 bytes), align: 0
  Segment part 50.            Intra module refs:   epb_get_message
                                                   epb_get_string
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00019F2E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F43 - 00019F44 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   epb_get_message::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_message         00019F43 
               calls direct
               XSTACK = 00000002 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_fixed32         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F45 - 00019F4A (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine9
                                                   epb_get_tag_value_offset
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           00019F45 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_sfixed32        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_float           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F4B - 00019F76 (0x2c bytes), align: 0
  Segment part 60.            Intra module refs:   epb_pack_buf_remain::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_buf_remain     00019F4B 
               XSTACK = 00000013 ( 00000000 )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019F77 - 00019FF1 (0x7b bytes), align: 0
  Segment part 62.            Intra module refs:   epb_pack_tag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_tag            00019F77 
               calls direct
               XSTACK = 00000012 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019FF2 - 00019FF7 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   epb_get_tag_value_offset
                                                   epb_pack_buf_remain
                                                   epb_pack_tag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00019FF2 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019FF8 - 0001A099 (0xa2 bytes), align: 0
  Segment part 65.            Intra module refs:   epb_pack_varint32_bits::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_varint32_bits
                                   00019FF8 
               calls direct
               XSTACK = 00000014 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A09A - 0001A09D (0x4 bytes), align: 0
  Segment part 67.            Intra module refs:   epb_pack_varint32_bits
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           0001A09A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A09E - 0001A0A4 (0x7 bytes), align: 0
  Segment part 68.            Intra module refs:   ?Subroutine19
                                                   epb_get_varint32_bits
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0A5 - 0001A0AD (0x9 bytes), align: 0
  Segment part 69.            Intra module refs:   epb_get_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001A0A5 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0AE - 0001A0AE (0x1 bytes), align: 0
  Segment part 70.            Intra module refs:   ?Subroutine17
                                                   epb_pack_varint32_bits
                                                   epb_varint32_pack_size
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0AF - 0001A0B6 (0x8 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 70
                                                   epb_get_tag_value_offset
                                                   epb_get_uint32
                                                   epb_get_varint32_bits
                                                   epb_has_tag
                                                   epb_pack_varint32_bits
                                                   epb_set_bytes
                                                   epb_set_uint32
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0B7 - 0001A0D4 (0x1e bytes), align: 0
  Segment part 72.            Intra module refs:   epb_pack_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_init           0001A0B7 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0D5 - 0001A0F2 (0x1e bytes), align: 0
  Segment part 74.            Intra module refs:   epb_pack_init
                                                   epb_unpack_init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001A0D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0F3 - 0001A106 (0x14 bytes), align: 0
  Segment part 75.            Intra module refs:   epb_get_packed_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_packed_size     0001A0F3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A107 - 0001A141 (0x3b bytes), align: 0
  Segment part 77.            Intra module refs:   epb_set_uint32::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_uint32          0001A107 
               calls direct
               XSTACK = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A142 - 0001A154 (0x13 bytes), align: 0
  Segment part 79.            Intra module refs:   epb_set_int32::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_int32           0001A142 
               calls direct
               XSTACK = 00000004 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_sint32          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_bool            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A155 - 0001A16B (0x17 bytes), align: 0
  Segment part 85.            Intra module refs:   epb_set_enum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_enum            0001A155 
               calls direct
               XSTACK = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A16C - 0001A1ED (0x82 bytes), align: 0
  Segment part 87.            Intra module refs:   epb_set_bytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_bytes           0001A16C 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1EE - 0001A1FF (0x12 bytes), align: 0
  Segment part 89.            Intra module refs:   epb_pack_varint32_bits
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           0001A1EE 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A200 - 0001A217 (0x18 bytes), align: 0
  Segment part 90.            Intra module refs:   epb_pack_varint32_bits
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0001A200 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A218 - 0001A229 (0x12 bytes), align: 0
  Segment part 91.            Intra module refs:   epb_pack_varint32_bits
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001A218 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A22A - 0001A22C (0x3 bytes), align: 0
  Segment part 92.            Intra module refs:   epb_set_string::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_string          0001A22A 
               calls direct
               XSTACK = 00000004 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A22D - 0001A22F (0x3 bytes), align: 0
  Segment part 94.            Intra module refs:   epb_set_message::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_message         0001A22D 
               calls direct
               XSTACK = 00000004 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_fixed32         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A230 - 0001A231 (0x2 bytes), align: 0
  Segment part 98.            Intra module refs:   epb_get_bytes
                                                   epb_get_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001A230 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A232 - 0001A234 (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   ?Subroutine3
                                                   epb_pack_varint32_bits
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A235 - 0001A239 (0x5 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 99
                                                   epb_pack_tag
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_sfixed32        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_float           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A23A - 0001A2A8 (0x6f bytes), align: 0
  Segment part 105.           Intra module refs:   epb_varint32_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_varint32_pack_size
                                   0001A23A 
               calls direct
               XSTACK = 00000010 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 107. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_fixed32_pack_size   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2A9 - 0001A2C9 (0x21 bytes), align: 0
  Segment part 109.           Intra module refs:   epb_length_delimited_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_length_delimited_pack_size
                                   0001A2A9 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001A2CA - 0001A2D8 (0xf bytes), align: 0
  Segment part 111.           Intra module refs:   epb_length_delimited_pack_size
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001A2CA 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005603 - 00005608 (0x6 bytes), align: 0
  Segment part 9.             Intra module refs:   epb_pack_tag
                                                   epb_varint32_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           sizeof_tag::?relay      00005603 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005609 - 0000560E (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   epb_get_bytes
                                                   epb_get_uint32
                                                   epb_has_tag
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_get_tag_value_offset::?relay
                                   00005609 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000560F - 00005614 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   epb_get_bytes
                                                   epb_get_tag_value_offset
                                                   epb_get_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_get_varint32_bits::?relay
                                   0000560F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005615 - 0000561A (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init::?relay
                                   00005615        epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000561B - 00005620 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_has_tag::?relay     0000561B        epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005621 - 00005626 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   epb_get_enum
                                                   epb_get_int32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_uint32::?relay
                                   00005621        epb_unpack_init_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005627 - 0000562C (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_int32::?relay   00005627        epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_sint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_bool::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000562D - 00005632 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_enum::?relay    0000562D        epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005633 - 00005638 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_bytes::?relay   00005633        epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005639 - 0000563E (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_string::?relay
                                   00005639        epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000563F - 00005644 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_message::?relay
                                   0000563F        epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_fixed32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_sfixed32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_float::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005645 - 0000564A (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   epb_pack_tag
                                                   epb_pack_varint32_bits
                                                   epb_set_bytes
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_buf_remain::?relay
                                   00005645 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000564B - 00005650 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   epb_set_bytes
                                                   epb_set_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_tag::?relay    0000564B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005651 - 00005656 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   epb_set_bytes
                                                   epb_set_uint32
           LOCAL                   ADDRESS         
           =====                   =======         
           epb_pack_varint32_bits::?relay
                                   00005651 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005657 - 0000565C (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_init::?relay   00005657        epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000565D - 00005662 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_get_packed_size::?relay
                                   0000565D        epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005663 - 00005668 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ?Subroutine4
                                                   epb_set_int32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_uint32::?relay
                                   00005663        epb_mmopen_pack_step_data_item (epb_WristBand)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005669 - 0000566E (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_int32::?relay   00005669        epb_pack_auth_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_sint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_bool::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000566F - 00005674 (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_enum::?relay    0000566F        epb_pack_auth_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005675 - 0000567A (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   ?Subroutine0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_bytes::?relay   00005675        epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000567B - 00005680 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_string::?relay
                                   0000567B        epb_pack_auth_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005681 - 00005686 (0x6 bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_message::?relay
                                   00005681        epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_fixed32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_sfixed32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_set_float::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005687 - 0000568C (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   epb_length_delimited_pack_size
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_varint32_pack_size::?relay
                                   00005687        epb_auth_request_pack_size (epb_MmBp)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_fixed32_pack_size::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000568D - 00005692 (0x6 bytes), align: 0
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_length_delimited_pack_size::?relay
                                   0000568D        epb_auth_request_pack_size (epb_MmBp)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000818E - 00008192 (0x5 bytes), align: 0
  Segment part 6.             Intra module refs:   epb_pack_varint32_bits
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000823F - 00008242 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   epb_get_varint32_bits
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7f           0000823F 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002018E - 00020192 (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002023F - 00020242 (0x4 bytes), align: 0
  Segment part 113.           Intra module refs:   __Constant_7f

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\epb_MmBp.r51
  PROGRAM MODULE, NAME : epb_MmBp

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_base_request_pack_size
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000160AB - 000160D7 (0x2d bytes), align: 0
  Segment part 8.             Intra module refs:   epb_pack_base_request::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_base_request   000160AB 
               calls direct
               XSTACK = 00000018 ( 0000000A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000160D8 - 00016184 (0xad bytes), align: 0
  Segment part 10.            Intra module refs:   epb_unpack_base_response::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_response
                                   000160D8 
               calls direct
               XSTACK = 00000014 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_response_free
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016185 - 0001618B (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   epb_pack_base_request
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001618C - 000161DC (0x51 bytes), align: 0
  Segment part 16.            Intra module refs:   epb_unpack_base_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_push    0001618C 
               calls direct
               XSTACK = 00000014 ( 00000014 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_push_free
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000161DD - 000162FB (0x11f bytes), align: 0
  Segment part 20.            Intra module refs:   epb_auth_request_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_auth_request_pack_size
                                   000161DD 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000162FC - 00016304 (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   epb_auth_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           000162FC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016305 - 00016310 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   epb_auth_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00016305 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016311 - 00016311 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   epb_auth_request_pack_size
                                                   epb_init_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00016311 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016312 - 0001631F (0xe bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine11
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016320 - 00016581 (0x262 bytes), align: 0
  Segment part 26.            Intra module refs:   epb_pack_auth_request::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_auth_request   00016320 
               calls direct
               XSTACK = 00000002 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016582 - 00016589 (0x8 bytes), align: 0
  Segment part 28.            Intra module refs:   epb_pack_auth_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           00016582 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001658A - 00016592 (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   epb_pack_auth_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001658A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016593 - 00016660 (0xce bytes), align: 0
  Segment part 30.            Intra module refs:   epb_unpack_auth_response::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_auth_response
                                   00016593 
               calls direct
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016661 - 00016663 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   epb_unpack_auth_response_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_auth_response_free
                                   00016661 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016664 - 000166CC (0x69 bytes), align: 0
  Segment part 34.            Intra module refs:   epb_init_request_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_init_request_pack_size
                                   00016664 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000166CD - 000166D5 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   epb_init_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000166CD 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000166D6 - 000166DF (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   epb_auth_request_pack_size
                                                   epb_init_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           000166D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000166E0 - 0001680D (0x12e bytes), align: 0
  Segment part 38.            Intra module refs:   epb_pack_init_request::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_init_request   000166E0 
               calls direct
               XSTACK = 00000002 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001680E - 00016815 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   epb_pack_auth_request
                                                   epb_pack_init_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0001680E 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016816 - 0001681F (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine16
                                                   epb_pack_auth_request
                                                   epb_pack_init_request
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016820 - 00016829 (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   epb_pack_auth_request
                                                   epb_pack_init_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00016820 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001682A - 0001682F (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   ?Subroutine15
                                                   ?Subroutine3
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016830 - 00016AD0 (0x2a1 bytes), align: 0
  Segment part 44.            Intra module refs:   epb_unpack_init_response::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init_response
                                   00016830 
               calls direct
               XSTACK = 00000000 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016AD1 - 00016ADD (0xd bytes), align: 0
  Segment part 46.            Intra module refs:   epb_unpack_init_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00016AD1 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016ADE - 00016AE7 (0xa bytes), align: 0
  Segment part 47.            Intra module refs:   epb_unpack_init_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00016ADE 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016AE8 - 00016AEA (0x3 bytes), align: 0
  Segment part 48.            Intra module refs:   epb_unpack_init_response_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init_response_free
                                   00016AE8 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_send_data_request_pack_size
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_send_data_request
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016AEB - 00016AEF (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   epb_pack_auth_request
                                                   epb_pack_init_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00016AEB 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016AF0 - 00016AF4 (0x5 bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine2
                                                   epb_auth_request_pack_size
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016AF5 - 00016BBF (0xcb bytes), align: 0
  Segment part 56.            Intra module refs:   epb_unpack_send_data_response::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_send_data_response
                                   00016AF5 
               calls direct
               XSTACK = 00000000 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BC0 - 00016BC2 (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   epb_unpack_auth_response
                                                   epb_unpack_recv_data_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00016BC0 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BC3 - 00016BCB (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   ?Subroutine9
                                                   epb_unpack_base_response
                                                   epb_unpack_init_response
                                                   epb_unpack_send_data_response
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BCC - 00016BCD (0x2 bytes), align: 0
  Segment part 60.            Intra module refs:   epb_unpack_base_push
                                                   epb_unpack_base_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00016BCC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BCE - 00016BD5 (0x8 bytes), align: 0
  Segment part 61.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine5
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BD6 - 00016BD8 (0x3 bytes), align: 0
  Segment part 62.            Intra module refs:   epb_unpack_send_data_response_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_send_data_response_free
                                   00016BD6 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016BD9 - 00016CC9 (0xf1 bytes), align: 0
  Segment part 64.            Intra module refs:   epb_unpack_recv_data_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_recv_data_push
                                   00016BD9 
               calls direct
               XSTACK = 00000000 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CCA - 00016CCE (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   epb_unpack_auth_response
                                                   epb_unpack_init_response
                                                   epb_unpack_recv_data_push
                                                   epb_unpack_send_data_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00016CCA 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CCF - 00016CD5 (0x7 bytes), align: 0
  Segment part 67.            Intra module refs:   epb_auth_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00016CCF 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CD6 - 00016CDB (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   ?Subroutine12
                                                   epb_init_request_pack_size
                                                   epb_unpack_auth_response
                                                   epb_unpack_init_response
                                                   epb_unpack_recv_data_push
                                                   epb_unpack_send_data_response
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CDC - 00016CE3 (0x8 bytes), align: 0
  Segment part 69.            Intra module refs:   epb_unpack_base_response
                                                   epb_unpack_recv_data_push
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00016CDC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CE4 - 00016CF4 (0x11 bytes), align: 0
  Segment part 70.            Intra module refs:   ?Subroutine10
                                                   epb_unpack_send_data_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00016CE4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016CF5 - 00016D09 (0x15 bytes), align: 0
  Segment part 71.            Intra module refs:   epb_unpack_auth_response
                                                   epb_unpack_init_response
                                                   epb_unpack_recv_data_push
                                                   epb_unpack_send_data_response
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00016CF5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016D0A, align: 0
  Segment part 72.            Intra module refs:   epb_unpack_recv_data_push_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_recv_data_push_free
                                   00016D0A 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00016D0A - 00016D28 (0x1f bytes), align: 0
  Segment part 74.            Intra module refs:   epb_unpack_auth_response_free
                                                   epb_unpack_init_response_free
                                                   epb_unpack_recv_data_push_free
                                                   epb_unpack_send_data_response_free
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00016D0A 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 75. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_view_push
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_view_push_free
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_backgroud_push
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_backgroud_push_free
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_base_request_pack_size::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005693 - 00005698 (0x6 bytes), align: 0
  Segment part 9.             Intra module refs:   epb_pack_auth_request
                                                   epb_pack_init_request
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_base_request::?relay
                                   00005693 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005699 - 0000569E (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   epb_unpack_auth_response
                                                   epb_unpack_init_response
                                                   epb_unpack_send_data_response
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_response::?relay
                                   00005699 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_response_free::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000569F - 000056A4 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   epb_unpack_recv_data_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_push::?relay
                                   0000569F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_base_push_free::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056A5 - 000056AA (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_auth_request_pack_size::?relay
                                   000056A5        wechatAuthReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056AB - 000056B0 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_auth_request::?relay
                                   000056AB        wechatAuthReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056B1 - 000056B6 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_auth_response::?relay
                                   000056B1        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056B7 - 000056BC (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_auth_response_free::?relay
                                   000056B7        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056BD - 000056C2 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_init_request_pack_size::?relay
                                   000056BD        wechatInitReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056C3 - 000056C8 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_init_request::?relay
                                   000056C3        wechatInitReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056C9 - 000056CE (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init_response::?relay
                                   000056C9        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056CF - 000056D4 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_init_response_free::?relay
                                   000056CF        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_send_data_request_pack_size::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_pack_send_data_request::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056D5 - 000056DA (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_send_data_response::?relay
                                   000056D5        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056DB - 000056E0 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_send_data_response_free::?relay
                                   000056DB        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056E1 - 000056E6 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_recv_data_push::?relay
                                   000056E1        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056E7 - 000056EC (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_recv_data_push_free::?relay
                                   000056E7        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 76. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_view_push::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_view_push_free::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_backgroud_push::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_unpack_switch_backgroud_push_free::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\epb_WristBand.r51
  PROGRAM MODULE, NAME : epb_WristBand

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B628 - 0001B772 (0x14b bytes), align: 0
  Segment part 6.             Intra module refs:   epb_mmopen_step_data_item_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_step_data_item_pack_size
                                   0001B628 
               calls direct
               XSTACK = 0000001A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B773 - 0001B777 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   epb_mmopen_step_data_item_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001B773 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B778 - 0001B77F (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   ?Subroutine4
                                                   epb_mmopen_step_data_item_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001B778 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B780 - 0001B789 (0xa bytes), align: 0
  Segment part 10.            Intra module refs:   epb_mmopen_step_data_item_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001B780 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B78A - 0001B92B (0x1a2 bytes), align: 0
  Segment part 11.            Intra module refs:   epb_mmopen_pack_step_data_item::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_pack_step_data_item
                                   0001B78A 
               calls direct
               XSTACK = 0000001C ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B92C - 0001B933 (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   epb_mmopen_pack_step_data_item
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001B92C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B934 - 0001B9CC (0x99 bytes), align: 0
  Segment part 14.            Intra module refs:   epb_mmopen_wristband_request_pack_size::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_wristband_request_pack_size
                                   0001B934 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9CD - 0001BB0E (0x142 bytes), align: 0
  Segment part 16.            Intra module refs:   epb_mmopen_pack_wristband_request::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_pack_wristband_request
                                   0001B9CD 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB0F - 0001BB1C (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   epb_mmopen_pack_wristband_request
                                                   epb_mmopen_wristband_request_pack_size
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001BB0F 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB1D - 0001BB20 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   epb_mmopen_pack_wristband_request
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BB1D 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB21 - 0001BB2A (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine1
                                                   epb_mmopen_pack_step_data_item
                                                   epb_mmopen_pack_wristband_request
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_unpack_wristband_response
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056ED - 000056F2 (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   epb_mmopen_pack_wristband_request
                                                   epb_mmopen_wristband_request_pack_size
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_step_data_item_pack_size::?relay
                                   000056ED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056F3 - 000056F8 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   epb_mmopen_pack_wristband_request
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_pack_step_data_item::?relay
                                   000056F3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056F9 - 000056FE (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_wristband_request_pack_size::?relay
                                   000056F9        wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000056FF - 00005704 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_pack_wristband_request::?relay
                                   000056FF        wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epb_mmopen_unpack_wristband_response::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\gap.r51
  PROGRAM MODULE, NAME : gap

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021426 - 0002146C (0x47 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_DeviceInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit          00021426 
               calls direct
               XSTACK = 00000004 ( 0000000E )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005705 - 0000570A (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit::?relay
                                   00005705        GAPRole_StartDevice (peripheral)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\gapbondmgr.r51
  PROGRAM MODULE, NAME : gapbondmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007F1 - 000007F1 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_Register
                                                   gapBondMgrSendServiceChange
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_TaskID       000007F1 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C69 - 00000C69 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_PairingMode     00000C69 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6A - 00000C6B (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_InitiateWait    00000C6A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007F2 - 000007F2 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_MITM            000007F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007F3 - 000007F3 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_IOCap           000007F3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007F4 - 000007F4 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBDataFlag     000007F4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007F5 - 00000804 (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBData         000007F5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000805 - 00000805 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Bonding         00000805 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000806 - 00000806 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFail        00000806 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6C - 00000C6C (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFailReason
                                   00000C6C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6D - 00000C6D (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine13
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeyDistList     00000C6D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000807 - 0000080A (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Passcode        00000807 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6E - 00000C6E (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeySize         00000C6E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000080B - 0000080C (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   ?Subroutine6
                                                   GAPBondMgr_Register
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapBondCB              0000080B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000080D - 00000898 (0x8c bytes), align: 0
  Segment part 26.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
                                                   gapBondMgrBondTotal
                                                   gapBondMgrFindAddr
                                                   gapBondMgrReadBonds
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           bonds                   0000080D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000899 - 00000899 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPBondMgr_SetParameter
                                                   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           autoSyncWhiteList       00000899 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000089A - 0000089A (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           eraseAllBonds           0000089A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000089B - 0000089C (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           connectionHandle        0000089B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C20D - 0000C3D4 (0x1c8 bytes), align: 0
  Segment part 31.            Intra module refs:   GAPBondMgr_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter
                                   0000C20D 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3D5 - 0000C3DE (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           0000C3D5 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3DF - 0000C3E0 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapBondMgrChangeState
                                                   gapBondMgrGetPublicAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000C3DF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3E1 - 0000C3E3 (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine0
                                                   gapBondMgrAddBond
                                                   gapBondMgrAuthenticate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3E4 - 0000C3E8 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   GAPBondMgr_ServiceChangeInd
                                                   GAPBondMgr_SetParameter
                                                   Segment part 35
                                                   gapBondMgrFindAddr
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_GetParameter
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3E9 - 0000C597 (0x1af bytes), align: 0
  Segment part 39.            Intra module refs:   GAPBondMgr_LinkEst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst      0000C3E9 
               calls direct
               XSTACK = 00000001 ( 00000061 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C598 - 0000C59F (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0000C598 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C5A0 - 0000C691 (0xf2 bytes), align: 0
  Segment part 42.            Intra module refs:   GAPBondMgr_ResolveAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr
                                   0000C5A0 
               calls direct
               XSTACK = 0000005F ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C692 - 0000C716 (0x85 bytes), align: 0
  Segment part 44.            Intra module refs:   GAPBondMgr_ServiceChangeInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd
                                   0000C692 
               calls direct
               XSTACK = 00000013 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C717 - 0000C78E (0x78 bytes), align: 0
  Segment part 46.            Intra module refs:   GAPBondMgr_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg
                                   0000C717 
               calls direct
               XSTACK = 00000015 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C78F - 0000C7B0 (0x22 bytes), align: 0
  Segment part 48.            Intra module refs:   GAPBondMgr_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register     0000C78F 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C7B1 - 0000C7B7 (0x7 bytes), align: 0
  Segment part 50.            Intra module refs:   GAPBondMgr_Register
                                                   gapBondMgrSendServiceChange
                                                   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000C7B1 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_PasscodeRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000C7B8 - 0000CB00 (0x349 bytes), align: 0
  Segment part 53.            Intra module refs:   GAPBondMgr_ProcessGAPMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg
                                   0000C7B8 
               calls direct
               XSTACK = 00000013 ( 0000002E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB01 - 0000CB08 (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_UpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           0000CB01 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB09 - 0000CB09 (0x1 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           0000CB09 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB0A - 0000CB0D (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine10
                                                   GAPBondMgr_ProcessEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB0E - 0000CB13 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB14 - 0000CB19 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
                                                   gapBondMgrChangeState
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            0000CB14 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB1A - 0000CB2B (0x12 bytes), align: 0
  Segment part 60.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0000CB1A 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB2C - 0000CB2E (0x3 bytes), align: 0
  Segment part 61.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0000CB2C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB2F - 0000CB36 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   ?Subroutine6
                                                   GAPBondMgr_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB37 - 0000CBAA (0x74 bytes), align: 0
  Segment part 63.            Intra module refs:   gapBondMgrChangeState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState   0000CB37 
               calls direct
               XSTACK = 0000000C ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CBAB - 0000CC93 (0xe9 bytes), align: 0
  Segment part 65.            Intra module refs:   gapBondMgrUpdateCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg
                                   0000CBAB 
               calls direct
               XSTACK = 0000000E ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC94 - 0000CC96 (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000CC94 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC97 - 0000CC9B (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   ?Subroutine2
                                                   GAPBondMgr_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CC9C - 0000CCCE (0x33 bytes), align: 0
  Segment part 69.            Intra module refs:   gapBondMgrFindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem
                                   0000CC9C 
               XSTACK = 00000028 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CCCF - 0000CCD5 (0x7 bytes), align: 0
  Segment part 71.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           0000CCCF 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CCD6 - 0000CD0A (0x35 bytes), align: 0
  Segment part 72.            Intra module refs:   gapBondMgrInvertCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem
                                   0000CCD6 
               XSTACK = 0000005F ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD0B - 0000CD15 (0xb bytes), align: 0
  Segment part 74.            Intra module refs:   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           0000CD0B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CD16 - 0000CE40 (0x12b bytes), align: 0
  Segment part 75.            Intra module refs:   gapBondMgrAddBond::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond       0000CD16 
               calls direct
               XSTACK = 0000002E ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE41 - 0000CE48 (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000CE41 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE49 - 0000CE9B (0x53 bytes), align: 0
  Segment part 78.            Intra module refs:   gapBondMgrGetPublicAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr
                                   0000CE49 
               calls direct
               XSTACK = 0000001F ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE9C - 0000CEE4 (0x49 bytes), align: 0
  Segment part 80.            Intra module refs:   gapBondMgrFindAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr      0000CE9C 
               calls direct
               XSTACK = 0000001F ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEE5 - 0000CF4C (0x68 bytes), align: 0
  Segment part 82.            Intra module refs:   gapBondMgrReadBonds::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds     0000CEE5 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF4D - 0000CF56 (0xa bytes), align: 0
  Segment part 84.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           0000CF4D 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF57 - 0000CF83 (0x2d bytes), align: 0
  Segment part 85.            Intra module refs:   gapBondMgrBondTotal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal     0000CF57 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF84 - 0000CF88 (0x5 bytes), align: 0
  Segment part 87.            Intra module refs:   GAPBondMgr_Init
                                                   gapBondMgrBondTotal
                                                   gapBondMgrEraseAllBondings
                                                   gapBondMgrFindCharCfgItem
                                                   gapBondMgrInvertCharCfgItem
                                                   gapBondMgrReadBonds
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000CF84 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF89 - 0000CFA0 (0x18 bytes), align: 0
  Segment part 88.            Intra module refs:   gapBondMgrEraseAllBondings::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings
                                   0000CF89 
               calls direct
               XSTACK = 00000024 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFA1 - 0000D091 (0xf1 bytes), align: 0
  Segment part 90.            Intra module refs:   gapBondMgrEraseBonding::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding
                                   0000CFA1 
               calls direct
               XSTACK = 00000009 ( 00000042 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D092 - 0000D0A1 (0x10 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPBondMgr_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init         0000D092 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D0A2 - 0000D231 (0x190 bytes), align: 0
  Segment part 94.            Intra module refs:   GAPBondMgr_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent
                                   0000D0A2 
               calls direct
               XSTACK = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D232 - 0000D237 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0000D232 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D238 - 0000D23D (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   ?Subroutine5
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   gapBondMgrSendServiceChange
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_CheckNVLen   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D23E - 0000D254 (0x17 bytes), align: 0
  Segment part 100.           Intra module refs:   gapBondMgrSendServiceChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange
                                   0000D23E 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D255 - 0000D286 (0x32 bytes), align: 0
  Segment part 102.           Intra module refs:   gapBondSetupPrivFlag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag    0000D255 
               calls direct
               XSTACK = 00000018 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D287 - 0000D41A (0x194 bytes), align: 0
  Segment part 104.           Intra module refs:   gapBondMgrAuthenticate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate
                                   0000D287 
               calls direct
               XSTACK = 00000024 ( 00000026 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D41B - 0000D421 (0x7 bytes), align: 0
  Segment part 106.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0000D41B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D422 - 0000D42B (0xa bytes), align: 0
  Segment part 107.           Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           0000D422 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000D42C - 0000D46A (0x3f bytes), align: 0
  Segment part 108.           Intra module refs:   gapBondMgr_SyncWhiteList::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList
                                   0000D42C 
               calls direct
               XSTACK = 00000018 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032D8 - 000032D8 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapBond_PairingMode
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032D9 - 000032DA (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   gapBond_InitiateWait
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032DB - 000032DB (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   gapBond_AutoFailReason
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032DC - 000032DC (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   gapBond_KeyDistList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032DD - 000032DD (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   gapBond_KeySize
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000570B - 00005710 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter::?relay
                                   0000570B        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005711 - 00005716 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst::?relay
                                   00005711        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005717 - 0000571C (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_ServiceChangeInd
                                                   GAPBondMgr_UpdateCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr::?relay
                                   00005717 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000571D - 00005722 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd::?relay
                                   0000571D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005723 - 00005728 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg::?relay
                                   00005723 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005729 - 0000572E (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register::?relay
                                   00005729        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_PasscodeRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000572F - 00005734 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   GAPBondMgr_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg::?relay
                                   0000572F        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005735 - 0000573A (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState::?relay
                                   00005735 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000573B - 00005740 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPBondMgr_UpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg::?relay
                                   0000573B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005741 - 00005746 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem::?relay
                                   00005741 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005747 - 0000574C (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem::?relay
                                   00005747 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000574D - 00005752 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond::?relay
                                   0000574D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005753 - 00005758 (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr::?relay
                                   00005753 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005759 - 0000575E (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr::?relay
                                   00005759 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000575F - 00005764 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds::?relay
                                   0000575F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005765 - 0000576A (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal::?relay
                                   00005765 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000576B - 00005770 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings::?relay
                                   0000576B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005771 - 00005776 (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   gapBondMgrEraseAllBondings
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding::?relay
                                   00005771 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005777 - 0000577C (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init::?relay
                                   00005777        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000577D - 00005782 (0x6 bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent::?relay
                                   0000577D        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_CheckNVLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005783 - 00005788 (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange::?relay
                                   00005783 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005789 - 0000578E (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag::?relay
                                   00005789 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000578F - 00005794 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate::?relay
                                   0000578F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005795 - 0000579A (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList::?relay
                                   00005795 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008158 - 0000815D (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000821F - 00008222 (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   GAPBondMgr_SetParameter
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   llCalcScaFactor (ll_timerDrift)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        0000821F 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020158 - 0002015D (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002021F - 00020222 (0x4 bytes), align: 0
  Segment part 111.           Intra module refs:   __Constant_f4240

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\gatt_uuid.r51
  PROGRAM MODULE, NAME : gatt_uuid

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082AE - 000082AF (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceUUID          000082AE        Segment part 7 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082AC - 000082AD (0x2 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceUUID         000082AC        Segment part 15 (gattservapp)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082A4 - 000082A5 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           primaryServiceUUID      000082A4        Segment part 16 (historystep)
                                                   Segment part 16 (timeset)
                                                   Segment part 17 (battservice)
                                                   Segment part 17 (hitpoint)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 23 (motorrun)
                                                   Segment part 23 (pedometer)
                                                   Segment part 23 (systemtest)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 29 (wechatprofile)
                                                   Segment part 38 (gatt_server)
                                                   Segment part 46 (devinfoservice)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B8 - 000082B9 (0x2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           secondaryServiceUUID    000082B8        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           includeUUID             
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000829A - 0000829B (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           characterUUID           0000829A        GATT_FindNextAttr (gatt_server)
                                                   Segment part 16 (historystep)
                                                   Segment part 16 (timeset)
                                                   Segment part 17 (battservice)
                                                   Segment part 17 (hitpoint)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 23 (motorrun)
                                                   Segment part 23 (pedometer)
                                                   Segment part 23 (systemtest)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 29 (wechatprofile)
                                                   Segment part 46 (devinfoservice)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charExtPropsUUID        
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008292 - 00008293 (0x2 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charUserDescUUID        00008292        Segment part 16 (historystep)
                                                   Segment part 16 (timeset)
                                                   Segment part 17 (battservice)
                                                   Segment part 17 (hitpoint)
                                                   Segment part 23 (motorrun)
                                                   Segment part 23 (pedometer)
                                                   Segment part 23 (systemtest)
                                                   Segment part 29 (wechatprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000828E - 0000828F (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clientCharCfgUUID       0000828E        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   Segment part 17 (battservice)
                                                   Segment part 17 (hitpoint)
                                                   Segment part 20 (gattservapp)
                                                   Segment part 23 (motorrun)
                                                   Segment part 23 (pedometer)
                                                   Segment part 23 (systemtest)
                                                   Segment part 29 (wechatprofile)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           servCharCfgUUID         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charFormatUUID          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charAggFormatUUID       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008284 - 00008285 (0x2 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceNameUUID          00008284        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000827C - 0000827D (0x2 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appearanceUUID          0000827C        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008122 - 00008123 (0x2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periPrivacyFlagUUID     00008122        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008264 - 00008265 (0x2 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reconnectAddrUUID       00008264        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008266 - 00008267 (0x2 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periConnParamUUID       00008266        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008268 - 00008269 (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serviceChangedUUID      00008268        GATT_ServiceChangedInd (gatt_server)
                                                   Segment part 20 (gattservapp)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           validRangeUUID          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extReportRefUUID        
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportRefUUID           
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindUUIDRec        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindUUIDRec::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202AE - 000202AF (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202AC - 000202AD (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   gattServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202A4 - 000202A5 (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   primaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202B8 - 000202B9 (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   secondaryServiceUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002029A - 0002029B (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   characterUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020292 - 00020293 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   charUserDescUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002028E - 0002028F (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   clientCharCfgUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020284 - 00020285 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   deviceNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002027C - 0002027D (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   appearanceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020122 - 00020123 (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   periPrivacyFlagUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020264 - 00020265 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   reconnectAddrUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020266 - 00020267 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   periConnParamUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020268 - 00020269 (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   serviceChangedUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 49. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_acc.r51
  PROGRAM MODULE, NAME : hal_acc

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECFD - 0001EE47 (0x14b bytes), align: 0
  Segment part 6.             Intra module refs:   HalAccInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccInit              0001ECFD 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE48 - 0001EE4D (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   HalAccInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001EE48 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE4E - 0001EE50 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   HalAccActive
                                                   HalAccStandby
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001EE4E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE51 - 0001EE62 (0x12 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine0
                                                   HalAccClearTapIntr
                                                   HalAccInit
                                                   HalAccReset
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE63 - 0001EE68 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine0
                                                   HalAccInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001EE63 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE69 - 0001EE91 (0x29 bytes), align: 0
  Segment part 12.            Intra module refs:   HalAccReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccReset             0001EE69 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE92 - 0001EE97 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAccInit
                                                   HalAccReset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001EE92 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE98 - 0001EEBD (0x26 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAccActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccActive            0001EE98 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEBE - 0001EEE4 (0x27 bytes), align: 0
  Segment part 17.            Intra module refs:   HalAccStandby::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccStandby           0001EEBE 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEE5 - 0001EF25 (0x41 bytes), align: 0
  Segment part 19.            Intra module refs:   HalAccClearTapIntr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccClearTapIntr      0001EEE5 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF26 - 0001EF2D (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   HalAccInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001EF26 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF2E - 0001EF31 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine4
                                                   HalAccClearTapIntr
                                                   HalAccInit
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF32 - 0001EF39 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   ?Subroutine3
                                                   Segment part 22
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001EF32 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF3A - 0001EF87 (0x4e bytes), align: 0
  Segment part 24.            Intra module refs:   HalAccReadFifoData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccReadFifoData      0001EF3A 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000579B - 000057A0 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccInit::?relay      0000579B        AppActive (app)
                                                   HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057A1 - 000057A6 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccReset::?relay     000057A1        AppActive (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057A7 - 000057AC (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccActive::?relay    000057A7        AppActive (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057AD - 000057B2 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccStandby::?relay   000057AD        AppStandby (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057B3 - 000057B8 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccClearTapIntr::?relay
                                   000057B3        AppDoubleClickHandler (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057B9 - 000057BE (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAccReadFifoData::?relay
                                   000057B9        AppAccDataReadyHandler (app)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalAdcRead
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000089D - 0000089D (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAdcInit
                                                   HalAdcRead
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           adcRef                  0000089D 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000211AD - 000211B5 (0x9 bytes), align: 0
  Segment part 12.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              000211AD 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000211B6 - 000211BD (0x8 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcInit
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000211B6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000211BE - 0002125D (0xa0 bytes), align: 0
  Segment part 15.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              000211BE 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002125E - 00021268 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   HalAdcSetReference::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference      0002125E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057BF - 000057C4 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      000057BF        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057C5 - 000057CA (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      000057C5        AppBatteryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057CB - 000057D0 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference::?relay
                                   000057CB        AppBatteryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_aes.r51
  PROGRAM MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDI                   000000B1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDO                   000000B2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pSspAesEncrypt          
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadBlock            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesStartBlock           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesStartShortBlock      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadIV               
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadKey              
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FF3 - 00007FF5 (0x3 bytes), align: 0
  Segment part 25.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              00007FF3 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ssp_HW_KeyInit          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sspAesEncryptHW         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadBlock::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesStartBlock::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesStartShortBlock::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadIV::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadKey::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057D1 - 000057D6 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      000057D1        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ssp_HW_KeyInit::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sspAesEncryptHW::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_assert.r51
  PROGRAM MODULE, NAME : hal_assert

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_crc.r51
  PROGRAM MODULE, NAME : hal_crc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_adc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCCalc              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCExec              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCCalc::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCExec::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCInit::?relay      
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000089E - 000008A5 (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000089E        HalFlashWrite (hal_flash)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008A6 - 000008C5 (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               000008A6        LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_InitAesDMA (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00017FE4 - 00017FF4 (0x11 bytes), align: 0
  Segment part 12.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              00017FE4 
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057D7 - 000057DC (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      000057D7        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000008C6 - 000008C6 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              000008C6        HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   halProcessAccInterrupt (hal_key)
                                                   halProcessChrInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000210E9 - 000210F1 (0x9 bytes), align: 0
  Segment part 7.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                000210E9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000210F2 - 000210F8 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit
                                                   Hal_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000210F2 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000210F9 - 00021110 (0x18 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           000210F9 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00021111 - 000211A6 (0x96 bytes), align: 0
  Segment part 12.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        00021111 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000211A7 - 000211AC (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         000211A7 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057DD - 000057E2 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        000057DD        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057E3 - 000057E8 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   000057E3        main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057E9 - 000057EE (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent::?relay
                                   000057E9        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057EF - 000057F4 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll::?relay
                                   000057EF        osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_flash.r51
  PROGRAM MODULE, NAME : hal_flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C7 - 000000C7 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashRead
                                                   __low_level_init (hal_startup)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  000000C7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalFlashWrite
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalFlashWrite
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEEF - 0000FF73 (0x85 bytes), align: 0
  Segment part 10.            Intra module refs:   HalFlashRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead            0000FEEF 
               XSTACK = 00000002 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF74 - 0000FFD9 (0x66 bytes), align: 0
  Segment part 12.            Intra module refs:   HalFlashWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite           0000FF74 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFDA - 0000FFF2 (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   HalFlashErase::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase           0000FFDA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057F5 - 000057FA (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead::?relay    000057F5        LL_Init (ll)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000057FB - 00005800 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite::?relay   000057FB        llFindTxPowerSettings (ll_common)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005801 - 00005806 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase::?relay   00005801        erasePage (osal_snv)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_i2c.r51
  PROGRAM MODULE, NAME : hal_i2c

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000008C7 - 000008C7 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine1
                                                   HalI2CInit
                                                   HalI2CRead
           LOCAL                   ADDRESS         
           =====                   =======         
           i2cAddr                 000008C7 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020487 - 000204A7 (0x21 bytes), align: 0
  Segment part 7.             Intra module refs:   HalI2CInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit              00020487 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000204A8 - 000204A8 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalI2CDisable
                                                   HalI2CInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000204A8 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000204A9 - 000204AF (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine0
                                                   HalI2CWrite
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000204B0 - 0002058D (0xde bytes), align: 0
  Segment part 11.            Intra module refs:   HalI2CRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead              000204B0 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002058E - 0002059D (0x10 bytes), align: 0
  Segment part 13.            Intra module refs:   HalI2CRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0002058E 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002059E - 00020605 (0x68 bytes), align: 0
  Segment part 14.            Intra module refs:   HalI2CWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite             0002059E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020606 - 0002060E (0x9 bytes), align: 0
  Segment part 16.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00020606 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002060F - 0002061A (0xc bytes), align: 0
  Segment part 17.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0002060F 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002061B - 00020620 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002061B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020621 - 00020626 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine2
                                                   HalI2CRead
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020627 - 00020629 (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00020627 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002062A - 0002062A (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   ?Subroutine1
                                                   HalI2CWrite
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002062B - 0002062D (0x3 bytes), align: 0
  Segment part 22.            Intra module refs:   HalI2CRead
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002062E - 00020636 (0x9 bytes), align: 0
  Segment part 23.            Intra module refs:   HalI2CRead
                                                   HalI2CWrite
                                                   Segment part 22
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020637 - 00020643 (0xd bytes), align: 0
  Segment part 24.            Intra module refs:   HalI2CDisable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CDisable           00020637 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005807 - 0000580C (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CInit::?relay      00005807        HalAccActive (hal_acc)
                                                   HalAccClearTapIntr (hal_acc)
                                                   HalAccInit (hal_acc)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAccReset (hal_acc)
                                                   HalAccStandby (hal_acc)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000580D - 00005812 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CRead::?relay      0000580D        HalAccActive (hal_acc)
                                                   HalAccClearTapIntr (hal_acc)
                                                   HalAccInit (hal_acc)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAccReset (hal_acc)
                                                   HalAccStandby (hal_acc)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005813 - 00005818 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CWrite::?relay     00005813        HalAccInit (hal_acc)
                                                   Segment part 10 (hal_acc)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005819 - 0000581E (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalI2CDisable::?relay   00005819        HalAccReadFifoData (hal_acc)
                                                   Segment part 10 (hal_acc)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalKeyConfig
                                                   halKeyPort1Isr
                                                   halProcessAccInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0000008A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalKeyConfig
                                                   halSleep (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 11. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   halKeyPort0Isr
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   halKeyPort1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON2                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 14. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 15. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 16. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 17. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008C8 - 000008C8 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         000008C8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008C9 - 000008CA (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   000008C9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008CB - 000008CB (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeyConfigured        000008CB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008CC - 000008CC (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        000008CC 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020CD6 - 00020D00 (0x2b bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              00020CD6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020D01 - 00020D75 (0x75 bytes), align: 0
  Segment part 31.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            00020D01 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020D76 - 00020DCD (0x58 bytes), align: 0
  Segment part 35.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              00020D76 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020DCE - 00020DF5 (0x28 bytes), align: 0
  Segment part 37.            Intra module refs:   halProcessAccInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessAccInterrupt
                                   00020DCE 
               calls direct
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020DF6 - 00020DFC (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
                                                   halProcessAccInterrupt
                                                   halProcessChrInterrupt
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00020DF6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020DFD - 00020E14 (0x18 bytes), align: 0
  Segment part 40.            Intra module refs:   halProcessChrInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessChrInterrupt
                                   00020DFD 
               calls direct
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000484B - 00004866 (0x1c bytes), align: 0
  Segment part 46.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          0000484B 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004867 - 00004873 (0xd bytes), align: 0
  Segment part 47.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00004867 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004874 - 0000489A (0x27 bytes), align: 0
  Segment part 48.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          00004874 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 0000309D (0x6e bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000309B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 000030AD (0x7e bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr::??INTVEC 123
                                   000030AB 
    -------------------------------------------------------------------------
ISTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000581F - 00005824 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      0000581F        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005825 - 0000582A (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    00005825        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000582B - 00005830 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      0000582B        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005831 - 00005836 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   halKeyPort1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessAccInterrupt::?relay
                                   00005831 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005837 - 0000583C (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   halKeyPort0Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessChrInterrupt::?relay
                                   00005837 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValueValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdDisplayPercentBar
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValueValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdDisplayPercentBar::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008CD - 000008CD (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             000008CD 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 9. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalSleepLedState        
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008CE - 000008CE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           preBlinkState           000008CE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008CF - 00000905 (0x37 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine0
                                                   HalLedBlink
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedStatusControl     000008CF 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB2B - 0001BB4A (0x20 bytes), align: 0
  Segment part 13.            Intra module refs:   HalLedInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0001BB2B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BB4B - 0001BBC3 (0x79 bytes), align: 0
  Segment part 15.            Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0001BB4B 
               calls direct, is recursive
               XSTACK = 0000001D ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBC4 - 0001BC9C (0xd9 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedBlink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0001BBC4 
               calls direct, is recursive
               XSTACK = 0000000B ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC9D - 0001BF1E (0x282 bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            0001BC9D 
               calls direct
               XSTACK = 00000000 ( 00000021 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF1F - 0001BF25 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            0001BF1F 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF26 - 0001BF2A (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001BF26 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF2B - 0001BF31 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine4
                                                   ?Subroutine5
                                                   ?Subroutine6
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001BF2B 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF32 - 0001BF39 (0x8 bytes), align: 0
  Segment part 24.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001BF32 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF3A - 0001BF3D (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001BF3A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF3E - 0001BF47 (0xa bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine2
                                                   ?Subroutine3
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001BF3E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF48 - 0001BF4D (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001BF48 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF4E - 0001BF5A (0xd bytes), align: 0
  Segment part 28.            Intra module refs:   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001BF4E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF5B - 0001BFD3 (0x79 bytes), align: 0
  Segment part 29.            Intra module refs:   HalLedOnOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0001BF5B 
               XSTACK = 0000001D ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFD4 - 0001BFD7 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   HalLedInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001BFD4 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFD8 - 0001BFD8 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   ?Subroutine0
                                                   HalLedOnOff
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFD9 - 0001BFDF (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedGetState          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008213 - 00008216 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLedUpdate
                                                   osal_snv_compact (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           00008213 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000583D - 00005842 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      0000583D        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005843 - 00005848 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet::?relay       00005843        AppChargerRemind (app)
                                                   AppHitpointUpdate (app)
                                                   AppHpReminds (app)
                                                   AppMotorRun (app)
                                                   Betwine_Init (betwine)
                                                   InitBoard (OnBoard)
                                                   wechatDataDecode (betwine)
                                                   wechatSendData (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005849 - 0000584E (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     00005849 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000584F - 00005854 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate::?relay    0000584F        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005855 - 0000585A (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   HalLedSet
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff::?relay     00005855 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedGetState::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020213 - 00020216 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halSetSleepMode
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STLOAD                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from app
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000906 - 00000906 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           halPwrMgtMode           00000906 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000907 - 00000907 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           wakeForRF               00000907 
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA 0000001C - 0000001C (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   halSetSleepMode
                                                   halSleep
                                                   halSleepTimerIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepPconValue       0000001C        ?Subroutine1 (hal_key)
                                                   Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
SLEEP_CODE
  Relative segment, address: CODE 00007FF8 - 00007FFF (0x8 bytes), align: 0
  Segment part 27.            Intra module refs:   halSetSleepMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode         00007FF8 
               XSTACK = 00000018 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F6A6 - 0001F814 (0x16f bytes), align: 0
  Segment part 29.            Intra module refs:   halSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep                0001F6A6 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F815 - 0001F81D (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001F815 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F81E - 0001F87E (0x61 bytes), align: 0
  Segment part 32.            Intra module refs:   halSleepSetTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer        0001F81E 
               XSTACK = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F87F - 0001F8C4 (0x46 bytes), align: 0
  Segment part 34.            Intra module refs:   halSleepReadTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer       0001F87F 
               XSTACK = 00000018 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerElapsed            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8C5 - 0001F8C7 (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   halRestoreSleepLevel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel    0001F8C5 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000489B - 000048BE (0x24 bytes), align: 0
  Segment part 40.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        0000489B 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 0000305D (0x2e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000305B 
    -------------------------------------------------------------------------
ISTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE 000030B6 - 000030B6 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   halSleepPconValue
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000820F - 00008212 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_9c41         0000820F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000820B - 0000820E (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_43           0000820B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008207 - 0000820A (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0001       00008207 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008203 - 00008206 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0000       00008203 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081FF - 00008202 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7d           000081FF 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081FB - 000081FE (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   halSleepSetTimer
                                                   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     000081FB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000585B - 00005860 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode::?relay
                                   0000585B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005861 - 00005866 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep::?relay        00005861        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005867 - 0000586C (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer::?relay
                                   00005867 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000586D - 00005872 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer::?relay
                                   0000586D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerElapsed::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005873 - 00005878 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel::?relay
                                   00005873        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002020F - 00020212 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   __Constant_9c41
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002020B - 0002020E (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   __Constant_43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020207 - 0002020A (0x4 bytes), align: 0
  Segment part 43.            Intra module refs:   __Constant_ff0001
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020203 - 00020206 (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   __Constant_ff0000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201FF - 00020202 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   __Constant_7d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201FB - 000201FE (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   __Constant_ffffffe7

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_startup.r51
  PROGRAM MODULE, NAME : hal_startup

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000354F - 00003559 (0xb bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000354F        __low_level_init_call (?cmain)
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTSuspend          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTResume           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTSuspend::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTResume::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA::?relay   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\historystep.r51
  PROGRAM MODULE, NAME : historystep

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008278 - 00008279 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   hsService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hsServUUID              00008278 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000827A - 0000827B (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hsStepsUUID             0000827A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008261 - 00008263 (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           hsService               00008261 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6F - 00000C6F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           hsStepsProps            00000C6F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C70 - 00000C84 (0x15 bytes), align: 0
  Segment part 11.            Intra module refs:   HS_GetParameter
                                                   HS_SetParameter
                                                   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           hsStepsValue            00000C70 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C85 - 00000C92 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           hsStepsUserDesp         00000C85 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C93 - 00000CB2 (0x20 bytes), align: 0
  Segment part 15.            Intra module refs:   HS_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           historystepAttrTbl      00000C93 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000817C - 00008181 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   HS_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hsCBs                   0000817C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEC5 - 0001FEEB (0x27 bytes), align: 0
  Segment part 18.            Intra module refs:   HS_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_AddService           0001FEC5 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEEC - 0001FEF0 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   HS_AddService
                                                   HS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001FEEC 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEF1 - 0001FF24 (0x34 bytes), align: 0
  Segment part 21.            Intra module refs:   HS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_SetParameter         0001FEF1 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF25 - 0001FF4A (0x26 bytes), align: 0
  Segment part 23.            Intra module refs:   HS_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_GetParameter         0001FF25 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF4B - 0001FF4F (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   HS_GetParameter
                                                   HS_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001FF4B 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FF50 - 0001FFE0 (0x91 bytes), align: 0
  Segment part 26.            Intra module refs:   HS_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HS_ReadAttrCB           0001FF50 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFE1 - 0001FFFA (0x1a bytes), align: 0
  Segment part 28.            Intra module refs:   HS_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HS_WriteAttrCB          0001FFE1 
               is indirectly called
               XSTACK = 00000004 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032DE - 000032DE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   hsStepsProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032DF - 000032F3 (0x15 bytes), align: 0
  Segment part 12.            Intra module refs:   hsStepsValue
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000032F4 - 00003301 (0xe bytes), align: 0
  Segment part 14.            Intra module refs:   hsStepsUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003302 - 00003321 (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   historystepAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005879 - 0000587E (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_AddService::?relay   00005879        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000587F - 00005884 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_SetParameter::?relay
                                   0000587F        AppHistoryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005885 - 0000588A (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HS_GetParameter::?relay
                                   00005885        AppHistoryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000588B - 00005890 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   hsCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           HS_ReadAttrCB::?relay   0000588B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005891 - 00005896 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   hsCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           HS_WriteAttrCB::?relay
                                   00005891 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020278 - 00020279 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   hsServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002027A - 0002027B (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   hsStepsUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020261 - 00020263 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   hsService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002017C - 00020181 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   hsCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\hitpoint.r51
  PROGRAM MODULE, NAME : hitpoint

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008280 - 00008281 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   hpService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hpServUUID              00008280 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008282 - 00008283 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hpValueUUID             00008282 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000825E - 00008260 (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           hpService               0000825E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CB3 - 00000CB3 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           hpProps                 00000CB3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CB4 - 00000CB4 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HP_GetParameter
                                                   HP_SetParameter
                                                   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           hpValue                 00000CB4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000908 - 0000090D (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   HP_AddService
                                                   HP_HandleConnStatusCB
                                                   HP_SetParameter
                                                   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           hpConfig                00000908 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CB5 - 00000CBE (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           hpUserDesp              00000CB5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CBF - 00000CE6 (0x28 bytes), align: 0
  Segment part 16.            Intra module refs:   HP_AddService
                                                   HP_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           hitpointAttrTbl         00000CBF 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000814C - 00008151 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   HP_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hpCBs                   0000814C 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000202BB - 000202F8 (0x3e bytes), align: 0
  Segment part 19.            Intra module refs:   HP_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_AddService           000202BB 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000202F9 - 000202FF (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   HP_AddService
                                                   HP_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000202F9 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020300 - 00020353 (0x54 bytes), align: 0
  Segment part 22.            Intra module refs:   HP_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_SetParameter         00020300 
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020354 - 00020370 (0x1d bytes), align: 0
  Segment part 24.            Intra module refs:   HP_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_GetParameter         00020354 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020371 - 000203E0 (0x70 bytes), align: 0
  Segment part 26.            Intra module refs:   HP_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_ReadAttrCB           00020371 
               is indirectly called
               XSTACK = 00000006 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000203E1 - 000203E5 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   HP_ReadAttrCB
                                                   HP_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000203E1 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000203E6 - 000203EE (0x9 bytes), align: 0
  Segment part 29.            Intra module refs:   HP_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000203E6 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000203EF - 0002043A (0x4c bytes), align: 0
  Segment part 30.            Intra module refs:   HP_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_WriteAttrCB          000203EF 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002043B - 0002044D (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   HP_ReadAttrCB
                                                   HP_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0002043B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002044E - 00020486 (0x39 bytes), align: 0
  Segment part 33.            Intra module refs:   HP_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_HandleConnStatusCB   0002044E 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003322 - 00003322 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   hpProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003323 - 00003323 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   hpValue
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003324 - 0000332D (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   hpUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000332E - 00003355 (0x28 bytes), align: 0
  Segment part 17.            Intra module refs:   hitpointAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005897 - 0000589C (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_AddService::?relay   00005897        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000589D - 000058A2 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_SetParameter::?relay
                                   0000589D        AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058A3 - 000058A8 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HP_GetParameter::?relay
                                   000058A3        AppHitpointUpdate (app)
                                                   AppHpReminds (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058A9 - 000058AE (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   hpCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_ReadAttrCB::?relay   000058A9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058AF - 000058B4 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   hpCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_WriteAttrCB::?relay
                                   000058AF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058B5 - 000058BA (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HP_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           HP_HandleConnStatusCB::?relay
                                   000058B5 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020280 - 00020281 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   hpServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020282 - 00020283 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   hpValueUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002025E - 00020260 (0x3 bytes), align: 0
  Segment part 37.            Intra module refs:   hpService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002014C - 00020151 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   hpCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\motorrun.r51
  PROGRAM MODULE, NAME : motorrun

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008288 - 00008289 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   mrService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrServUUID              00008288 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000828A - 0000828B (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrValueUUID             0000828A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000828C - 0000828D (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrStampUUID             0000828C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000090E - 0000090F (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   MR_RegisterAppCBs
                                                   MR_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           mrProfile_AppCBs        0000090E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000825B - 0000825D (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrService               0000825B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CE7 - 00000CE7 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrValueProps            00000CE7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000910 - 00000910 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   MR_WriteAttrCB
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrValue                 00000910 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CE8 - 00000CF1 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrUserDesp              00000CE8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CF2 - 00000CF2 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrStampProps            00000CF2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000911 - 00000914 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   MR_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrStamp                 00000911 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000915 - 0000091A (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   MR_AddService
                                                   MR_HandleConnStatusCB
                                                   MR_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrStampConfig           00000915 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CF3 - 00000D03 (0x11 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           mrStampUserDesp         00000CF3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D04 - 00000D43 (0x40 bytes), align: 0
  Segment part 22.            Intra module refs:   MR_AddService
                                                   MR_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           motorrunAttrTbl         00000D04 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008146 - 0000814B (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   MR_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mrCBs                   00008146 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1F3 - 0001F237 (0x45 bytes), align: 0
  Segment part 25.            Intra module refs:   MR_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_AddService           0001F1F3 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F238 - 0001F254 (0x1d bytes), align: 0
  Segment part 27.            Intra module refs:   MR_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_RegisterAppCBs       0001F238 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F255 - 0001F2AD (0x59 bytes), align: 0
  Segment part 29.            Intra module refs:   MR_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_SetParameter         0001F255 
               calls direct
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2AE - 0001F2B2 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   MR_ReadAttrCB
                                                   MR_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001F2AE 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_GetParameter         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2B3 - 0001F337 (0x85 bytes), align: 0
  Segment part 34.            Intra module refs:   MR_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_ReadAttrCB           0001F2B3 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F338 - 0001F405 (0xce bytes), align: 0
  Segment part 36.            Intra module refs:   MR_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_WriteAttrCB          0001F338 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F406 - 0001F40F (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   MR_ReadAttrCB
                                                   MR_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001F406 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F410 - 0001F416 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   MR_ReadAttrCB
                                                   MR_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001F410 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F417 - 0001F44F (0x39 bytes), align: 0
  Segment part 40.            Intra module refs:   MR_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_HandleConnStatusCB   0001F417 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003356 - 00003356 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   mrValueProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003357 - 00003360 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   mrUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003361 - 00003361 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   mrStampProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003362 - 00003372 (0x11 bytes), align: 0
  Segment part 21.            Intra module refs:   mrStampUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003373 - 000033B2 (0x40 bytes), align: 0
  Segment part 23.            Intra module refs:   motorrunAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058BB - 000058C0 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_AddService::?relay   000058BB        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058C1 - 000058C6 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_RegisterAppCBs::?relay
                                   000058C1        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058C7 - 000058CC (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_SetParameter::?relay
                                   000058C7        AppHitpointUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MR_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058CD - 000058D2 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   mrCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_ReadAttrCB::?relay   000058CD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058D3 - 000058D8 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   mrCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_WriteAttrCB::?relay
                                   000058D3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058D9 - 000058DE (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   MR_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           MR_HandleConnStatusCB::?relay
                                   000058D9 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020288 - 00020289 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   mrServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002028A - 0002028B (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   mrValueUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002028C - 0002028D (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   mrStampUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002025B - 0002025D (0x3 bytes), align: 0
  Segment part 45.            Intra module refs:   mrService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020146 - 0002014B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   mrCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\osal_bufmgr.r51
  PROGRAM MODULE, NAME : osal_bufmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000091B - 0000091C (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine2
                                                   osal_bm_alloc
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_list_ptr             0000091B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020B5F - 00020BB1 (0x53 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc           00020B5F 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020BB2 - 00020C0B (0x5a bytes), align: 0
  Segment part 9.             Intra module refs:   osal_bm_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free            00020BB2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C0C - 00020C0F (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   bm_desc_from_payload
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00020C0C 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C10 - 00020C15 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   ?Subroutine3
                                                   Segment part 14
                                                   osal_bm_alloc
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C16 - 00020C18 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   bm_desc_from_payload
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00020C16 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C19 - 00020C1D (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine2
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C1E - 00020C80 (0x63 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_bm_adjust_header::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header   00020C1E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C81 - 00020C85 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_bm_adjust_header
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00020C81 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_tail     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020C86 - 00020CBA (0x35 bytes), align: 0
  Segment part 20.            Intra module refs:   bm_desc_from_payload::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload    00020C86 
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00020CBB - 00020CD5 (0x1b bytes), align: 0
  Segment part 22.            Intra module refs:   bm_desc_from_payload
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00020CBB 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058DF - 000058E4 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc::?relay   000058DF        HCI_bm_alloc (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058E5 - 000058EA (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free::?relay    000058E5        LL_RxDataCompleteCback (hci_data)
                                                   attSendMsg (att_util)
                                                   gattProcessRxData (gatt_task)
                                                   hciTxDataBufferReset (hci_data)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   smProcessOSALMsg (sm_task)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058EB - 000058F0 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header::?relay
                                   000058EB        L2CAP_bm_alloc (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_tail::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058F1 - 000058F6 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   osal_bm_adjust_header
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload::?relay
                                   000058F1 

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\osal_cbtimer.r51
  PROGRAM MODULE, NAME : osal_cbtimer

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000D44 - 00000D45 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseTaskID              00000D44 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000091D - 00000958 (0x3c bytes), align: 0
  Segment part 8.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cbTimers                0000091D 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF88 - 0001EFB1 (0x2a bytes), align: 0
  Segment part 9.             Intra module refs:   osal_CbTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit        0001EF88 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFB2 - 0001F081 (0xd0 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_CbTimerProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent
                                   0001EFB2 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F082 - 0001F086 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001F082 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F087 - 0001F16E (0xe8 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_CbTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart       0001F087 
               calls direct
               XSTACK = 00000004 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F16F - 0001F17A (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001F16F 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerUpdate      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F17B - 0001F1E8 (0x6e bytes), align: 0
  Segment part 19.            Intra module refs:   osal_CbTimerStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop        0001F17B 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1E9 - 0001F1EA (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   osal_CbTimerStart
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001F1E9 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F1EB - 0001F1F2 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   ?Subroutine1
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033B3 - 000033B4 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   baseTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058F7 - 000058FC (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit::?relay
                                   000058F7        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000058FD - 00005902 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent::?relay
                                   000058FD        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005903 - 00005908 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart::?relay
                                   00005903        gattStartTimer (gatt_task)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerUpdate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005909 - 0000590E (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop::?relay
                                   00005909        gattStopTimer (gatt_task)
                                                   l2capStopTimer (l2cap_util)

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\osal_snv.r51
  PROGRAM MODULE, NAME : osal_snv

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000959 - 00000959 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 52
                                                   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_read
                                                   osal_snv_write
                                                   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           activePg                00000959 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000095A - 0000095B (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ?Subroutine8
                                                   Segment part 52
                                                   compactPage
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   0000095A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000095C - 0000095C (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   compactPage
                                                   erasePage
                                                   initNV
                                                   osal_snv_write
                                                   setActivePage
                                                   verifyWordM
                                                   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   0000095C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000192AC - 00019368 (0xbd bytes), align: 0
  Segment part 12.            Intra module refs:   initNV::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  000192AC 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019369 - 00019399 (0x31 bytes), align: 0
  Segment part 14.            Intra module refs:   setActivePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage           00019369 
               calls direct
               XSTACK = 0000001D ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001939A - 000193A3 (0xa bytes), align: 0
  Segment part 16.            Intra module refs:   setActivePage
                                                   setXferPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001939A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000193A4 - 000193CB (0x28 bytes), align: 0
  Segment part 17.            Intra module refs:   setXferPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage             000193A4 
               calls direct
               XSTACK = 00000011 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000193CC - 0001941F (0x54 bytes), align: 0
  Segment part 19.            Intra module refs:   erasePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage               000193CC 
               calls direct
               XSTACK = 0000001D ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019420 - 00019423 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   cleanErasedPage
                                                   erasePage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00019420 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019424 - 00019425 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   findItem
                                                   findOffset
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00019424 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019426 - 00019428 (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine3
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019429 - 0001942D (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 23
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001942E - 00019479 (0x4c bytes), align: 0
  Segment part 25.            Intra module refs:   cleanErasedPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage         0001942E 
               calls direct
               XSTACK = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001947A - 000194D2 (0x59 bytes), align: 0
  Segment part 27.            Intra module refs:   findOffset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset              0001947A 
               calls direct
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000194D3 - 00019558 (0x86 bytes), align: 0
  Segment part 29.            Intra module refs:   findItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                000194D3 
               calls direct
               XSTACK = 0000001D ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019559 - 00019563 (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   compactPage
                                                   findItem
                                                   findOffset
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00019559 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019564 - 00019655 (0xf2 bytes), align: 0
  Segment part 32.            Intra module refs:   writeItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00019564 
               calls direct
               XSTACK = 00000015 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019656 - 00019659 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00019656 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001965A - 00019665 (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   ?Subroutine4
                                                   writeItem
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019666 - 00019815 (0x1b0 bytes), align: 0
  Segment part 36.            Intra module refs:   compactPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             00019666 
               calls direct
               XSTACK = 00000011 ( 0000001F )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019816 - 0001981B (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   ?Subroutine7
                                                   compactPage
                                                   findItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00019816 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001981C - 00019822 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            0001981C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019823 - 000198A4 (0x82 bytes), align: 0
  Segment part 40.            Intra module refs:   verifyWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM             00019823 
               calls direct
               XSTACK = 00000016 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 000198A5 - 00019909 (0x65 bytes), align: 0
  Segment part 42.            Intra module refs:   writeWord::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               000198A5 
               calls direct
               XSTACK = 0000001D ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001990A - 00019920 (0x17 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_snv_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init           0001990A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019921 - 00019A0D (0xed bytes), align: 0
  Segment part 46.            Intra module refs:   osal_snv_write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write          00019921 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A0E - 00019A10 (0x3 bytes), align: 0
  Segment part 48.            Intra module refs:   compactPage
                                                   osal_snv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00019A0E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A11 - 00019A15 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine2
                                                   osal_snv_compact
                                                   writeWord
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A16 - 00019A20 (0xb bytes), align: 0
  Segment part 50.            Intra module refs:   findOffset
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            00019A16 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A21 - 00019A22 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00019A21 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A23 - 00019A30 (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   ?Subroutine5
                                                   osal_snv_read
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A31 - 00019A6E (0x3e bytes), align: 0
  Segment part 53.            Intra module refs:   osal_snv_read::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read           00019A31 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 00019A6F - 00019ADB (0x6d bytes), align: 0
  Segment part 55.            Intra module refs:   osal_snv_compact::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact        00019A6F 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000081C7 - 000081CA (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   initNV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100000       000081C7 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. TENTATIVE. Used definition from betwine
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from hal_led
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000590F - 00005914 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_snv_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV::?relay          0000590F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005915 - 0000591A (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage::?relay   00005915 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000591B - 00005920 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage::?relay     0000591B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005921 - 00005926 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   cleanErasedPage
                                                   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage::?relay       00005921 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005927 - 0000592C (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage::?relay
                                   00005927 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000592D - 00005932 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset::?relay      0000592D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005933 - 00005938 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   compactPage
                                                   osal_snv_read
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem::?relay        00005933 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005939 - 0000593E (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       00005939 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000593F - 00005944 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage::?relay     0000593F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005945 - 0000594A (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   writeItem
                                                   writeWord
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM::?relay     00005945 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000594B - 00005950 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   compactPage
                                                   setActivePage
                                                   setXferPage
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord::?relay       0000594B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005951 - 00005956 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init::?relay   00005951        main (betwine_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005957 - 0000595C (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write::?relay
                                   00005957        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000595D - 00005962 (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read::?relay   0000595D        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005963 - 00005968 (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact::?relay
                                   00005963        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000201C7 - 000201CA (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   __Constant_100000
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 59. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\pedometer.r51
  PROGRAM MODULE, NAME : pedometer

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008294 - 00008295 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   pmService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pmServUUID              00008294 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008296 - 00008297 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pmStateUUID             00008296 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008298 - 00008299 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pmValueUUID             00008298 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008255 - 00008257 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmService               00008255 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D46 - 00000D46 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmStateProps            00000D46 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000095D - 0000095D (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   PM_GetParameter
                                                   PM_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmState                 0000095D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000095E - 00000963 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   PM_AddService
                                                   PM_HandleConnStatusCB
                                                   PM_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmStateConfig           0000095E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D47 - 00000D53 (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmStateUserDesp         00000D47 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D54 - 00000D54 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmValueProps            00000D54 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000964 - 00000966 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   PM_GetParameter
                                                   PM_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmValue                 00000964 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000967 - 0000096C (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   PM_AddService
                                                   PM_HandleConnStatusCB
                                                   PM_SetParameter
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmValueConfig           00000967 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D55 - 00000D62 (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           pmValueUserDesp         00000D55 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D63 - 00000DAA (0x48 bytes), align: 0
  Segment part 22.            Intra module refs:   PM_AddService
                                                   PM_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           pedometerAttrTbl        00000D63 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008140 - 00008145 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   PM_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pmCBs                   00008140 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EA6C - 0001EABB (0x50 bytes), align: 0
  Segment part 25.            Intra module refs:   PM_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_AddService           0001EA6C 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EABC - 0001EB50 (0x95 bytes), align: 0
  Segment part 27.            Intra module refs:   PM_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_SetParameter         0001EABC 
               calls direct
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB51 - 0001EB55 (0x5 bytes), align: 0
  Segment part 29.            Intra module refs:   PM_GetParameter
                                                   PM_SetParameter
                                                   PM_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001EB51 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB56 - 0001EB8D (0x38 bytes), align: 0
  Segment part 30.            Intra module refs:   PM_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_GetParameter         0001EB56 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB8E - 0001EC58 (0xcb bytes), align: 0
  Segment part 32.            Intra module refs:   PM_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_ReadAttrCB           0001EB8E 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC59 - 0001ECB1 (0x59 bytes), align: 0
  Segment part 34.            Intra module refs:   PM_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_WriteAttrCB          0001EC59 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECB2 - 0001ECB2 (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   PM_ReadAttrCB
                                                   PM_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001ECB2 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECB3 - 0001ECB8 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   ?Subroutine1
                                                   PM_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001ECB9 - 0001ECFC (0x44 bytes), align: 0
  Segment part 38.            Intra module refs:   PM_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_HandleConnStatusCB   0001ECB9 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033B5 - 000033B5 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   pmStateProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033B6 - 000033C2 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   pmStateUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033C3 - 000033C3 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   pmValueProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033C4 - 000033D1 (0xe bytes), align: 0
  Segment part 21.            Intra module refs:   pmValueUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000033D2 - 00003419 (0x48 bytes), align: 0
  Segment part 23.            Intra module refs:   pedometerAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005969 - 0000596E (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_AddService::?relay   00005969        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000596F - 00005974 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_SetParameter::?relay
                                   0000596F        AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005975 - 0000597A (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PM_GetParameter::?relay
                                   00005975        wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000597B - 00005980 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   pmCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_ReadAttrCB::?relay   0000597B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005981 - 00005986 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   pmCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_WriteAttrCB::?relay
                                   00005981 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005987 - 0000598C (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   PM_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           PM_HandleConnStatusCB::?relay
                                   00005987 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020294 - 00020295 (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   pmServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020296 - 00020297 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   pmStateUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020298 - 00020299 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   pmValueUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020255 - 00020257 (0x3 bytes), align: 0
  Segment part 43.            Intra module refs:   pmService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020140 - 00020145 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   pmCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\peripheral.r51
  PROGRAM MODULE, NAME : peripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000096D - 0000096D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TaskID          0000096D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000096E - 0000096E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_state           0000096E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000096F - 0000096F (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_profileRole     0000096F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000970 - 0000097F (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_IRK             00000970 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000980 - 0000098F (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SRK             00000980 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000990 - 00000993 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_signCounter     00000990 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000994 - 00000999 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_bdAddr          00000994 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAB - 00000DAB (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEnabled      00000DAB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAC - 00000DAD (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertOffTime   00000DAC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAE - 00000DAE (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertDataLen   00000DAE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAF - 00000DCD (0x1f bytes), align: 0
  Segment part 19.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertData      00000DAF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000099A - 0000099A (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspDataLen
                                   0000099A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000099B - 000009B9 (0x1f bytes), align: 0
  Segment part 22.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspData     0000099B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BA - 000009BA (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEventType    000009BA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BB - 000009BB (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectType   000009BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BC - 000009C1 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectAddr   000009BC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009C2 - 000009C2 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvChanMap      000009C2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009C3 - 000009C3 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvFilterPolicy
                                   000009C3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DCE - 00000DCF (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine6
                                                   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectionHandle
                                   00000DCE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009C4 - 000009C5 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   ?Subroutine3
                                                   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_RSSIReadRate    000009C4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009C6 - 000009CB (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectedDevAddr
                                   000009C6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009CC - 000009CC (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ParamUpdateEnable
                                   000009CC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD0 - 00000DD1 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MinConnInterval
                                   00000DD0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD2 - 00000DD3 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MaxConnInterval
                                   00000DD2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009CD - 000009CE (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SlaveLatency    000009CD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD4 - 00000DD5 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TimeoutMultiplier
                                   00000DD4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009CF - 000009D0 (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   ?Subroutine7
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnInterval    000009CF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D1 - 000009D2 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   ?Subroutine8
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnSlaveLatency
                                   000009D1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D3 - 000009D4 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   ?Subroutine9
                                                   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnTimeout     000009D3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D5 - 000009D5 (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           paramUpdateNoSuccessOption
                                   000009D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D6 - 000009D7 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   ?Subroutine4
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_AppCGs        000009D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D8 - 000009D9 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_ParamUpdateCB
                                   000009D8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000146B6 - 000149F3 (0x33e bytes), align: 0
  Segment part 46.            Intra module refs:   GAPRole_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter    000146B6 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000149F4 - 000149F8 (0x5 bytes), align: 0
  Segment part 48.            Intra module refs:   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000149F4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000149F9 - 000149FA (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   ?Subroutine15
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine18           000149F9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000149FB - 00014A00 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   ?Subroutine16
                                                   ?Subroutine18
                                                   GAPRole_SendUpdateParam
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014A01 - 00014A0C (0xc bytes), align: 0
  Segment part 51.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine15           00014A01 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014A0D - 00014A1A (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00014A0D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014A1B - 00014B85 (0x16b bytes), align: 0
  Segment part 53.            Intra module refs:   GAPRole_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter    00014A1B 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014B86 - 00014B8E (0x9 bytes), align: 0
  Segment part 55.            Intra module refs:   GAPRole_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           00014B86 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014B8F - 00014B91 (0x3 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00014B8F 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014B92 - 00014B96 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   ?Subroutine1
                                                   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014B97 - 00014BE6 (0x50 bytes), align: 0
  Segment part 58.            Intra module refs:   GAPRole_StartDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice     00014B97 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_RegisterAppCBs
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014BE7 - 00014BED (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   GAPRole_TerminateConnection
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00014BE7 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014BEE - 00014C0A (0x1d bytes), align: 0
  Segment part 63.            Intra module refs:   GAPRole_TerminateConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection
                                   00014BEE 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014C0B - 00014C88 (0x7e bytes), align: 0
  Segment part 65.            Intra module refs:   GAPRole_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init            00014C0B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014C89 - 00014DFB (0x173 bytes), align: 0
  Segment part 67.            Intra module refs:   GAPRole_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent    00014C89 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014DFC - 00014E01 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine12           00014DFC 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014E02 - 00014E04 (0x3 bytes), align: 0
  Segment part 70.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00014E02 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014E05 - 00014E13 (0xf bytes), align: 0
  Segment part 71.            Intra module refs:   ?Subroutine3
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014E14 - 00014EF7 (0xe4 bytes), align: 0
  Segment part 72.            Intra module refs:   gapRole_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg
                                   00014E14 
               calls direct
               XSTACK = 00000016 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00014EF8 - 00015262 (0x36b bytes), align: 0
  Segment part 74.            Intra module refs:   gapRole_ProcessGAPMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg   00014EF8 
               calls direct
               XSTACK = 0000000C ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015263 - 00015268 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00015263 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015269 - 0001526B (0x3 bytes), align: 0
  Segment part 77.            Intra module refs:   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine11           00015269 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001526C - 00015271 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ?Subroutine11
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015272 - 00015275 (0x4 bytes), align: 0
  Segment part 79.            Intra module refs:   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine10           00015272 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015276 - 00015279 (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   ?Subroutine10
                                                   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001527A - 0001527F (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   ?Subroutine7
                                                   ?Subroutine8
                                                   ?Subroutine9
                                                   Segment part 80
                                                   Segment part 88
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine17           0001527A 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015280 - 0001528B (0xc bytes), align: 0
  Segment part 82.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine9            00015280 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0001528C - 00015297 (0xc bytes), align: 0
  Segment part 83.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0001528C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015298 - 000152A3 (0xc bytes), align: 0
  Segment part 84.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00015298 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000152A4 - 000152A6 (0x3 bytes), align: 0
  Segment part 85.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_TerminateConnection
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            000152A4 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000152A7 - 000152AC (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   ?Subroutine6
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000152AD - 000152AF (0x3 bytes), align: 0
  Segment part 87.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000152AD 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000152B0 - 000152B5 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   ?Subroutine4
                                                   GAPRole_ProcessEvent
                                                   gapRole_ProcessGAPMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000152B6 - 00015385 (0xd0 bytes), align: 0
  Segment part 89.            Intra module refs:   gapRole_startConnUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate
                                   000152B6 
               calls direct
               XSTACK = 00000016 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015386 - 0001541F (0x9a bytes), align: 0
  Segment part 91.            Intra module refs:   GAPRole_SendUpdateParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam
                                   00015386 
               calls direct
               XSTACK = 0000001A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00015420 - 00015428 (0x9 bytes), align: 0
  Segment part 93.            Intra module refs:   GAPRole_SendUpdateParam
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine16           00015420 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000341A - 0000341A (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   gapRole_AdvEnabled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000341B - 0000341C (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   gapRole_AdvertOffTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000341D - 0000341D (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   gapRole_AdvertDataLen
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000341E - 0000343C (0x1f bytes), align: 0
  Segment part 20.            Intra module refs:   gapRole_AdvertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000343D - 0000343E (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapRole_ConnectionHandle
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000343F - 00003440 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapRole_MinConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003441 - 00003442 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   gapRole_MaxConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003443 - 00003444 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   gapRole_TimeoutMultiplier
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000598D - 00005992 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter::?relay
                                   0000598D        Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   peripheralStateNotificationCB (betwine)
                                                   systemStandby (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005993 - 00005998 (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter::?relay
                                   00005993        Betwine_ProcessEvent (betwine)
                                                   peripheralStateNotificationCB (betwine)
                                                   systemStandby (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005999 - 0000599E (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice::?relay
                                   00005999        Betwine_ProcessEvent (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_RegisterAppCBs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000599F - 000059A4 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   GAPRole_ProcessEvent
                                                   gapRole_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection::?relay
                                   0000599F        systemStandby (betwine)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059A5 - 000059AA (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init::?relay    000059A5        osalInitTasks (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059AB - 000059B0 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent::?relay
                                   000059AB        tasksArr (OSAL_betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059B1 - 000059B6 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   GAPRole_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg::?relay
                                   000059B1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059B7 - 000059BC (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg::?relay
                                   000059B7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059BD - 000059C2 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate::?relay
                                   000059BD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059C3 - 000059C8 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPRole_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam::?relay
                                   000059C3 

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\systemtest.r51
  PROGRAM MODULE, NAME : systemtest

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000829E - 0000829F (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   stService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stServUUID              0000829E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082A0 - 000082A1 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stTest1UUID             000082A0 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082A2 - 000082A3 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stTest2UUID             000082A2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009DA - 000009DB (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   ST_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           stProfile_AppCBs        000009DA 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000824F - 00008251 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stService               0000824F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD6 - 00000DD6 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest1Props            00000DD6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009DC - 000009EF (0x14 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest1                 000009DC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009F0 - 000009F5 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   ST_AddService
                                                   ST_HandleConnStatusCB
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest1Config           000009F0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD7 - 00000DE3 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest1UserDesp         00000DD7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DE4 - 00000DE4 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest2Props            00000DE4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009F6 - 00000A09 (0x14 bytes), align: 0
  Segment part 19.            Intra module refs:   ST_WriteAttrCB
                                                   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest2                 000009F6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DE5 - 00000DF1 (0xd bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 23
           LOCAL                   ADDRESS         
           =====                   =======         
           stTest2UserDesp         00000DE5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DF2 - 00000E31 (0x40 bytes), align: 0
  Segment part 22.            Intra module refs:   ST_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           systemtestAttrTbl       00000DF2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000813A - 0000813F (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   ST_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stCBs                   0000813A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8C8 - 0001F916 (0x4f bytes), align: 0
  Segment part 25.            Intra module refs:   ST_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_AddService           0001F8C8 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_RegisterAppCBs       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_SetParameter         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F917 - 0001F91B (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   ST_ReadAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001F917 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_GetParameter         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F91C - 0001F9A0 (0x85 bytes), align: 0
  Segment part 34.            Intra module refs:   ST_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_ReadAttrCB           0001F91C 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001F9A1 - 0001FA8D (0xed bytes), align: 0
  Segment part 36.            Intra module refs:   ST_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_WriteAttrCB          0001F9A1 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA8E - 0001FA97 (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   ST_ReadAttrCB
                                                   ST_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001FA8E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA98 - 0001FA9E (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   ST_ReadAttrCB
                                                   ST_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001FA98 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FA9F - 0001FAD7 (0x39 bytes), align: 0
  Segment part 40.            Intra module refs:   ST_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_HandleConnStatusCB   0001FA9F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003445 - 00003445 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   stTest1Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003446 - 00003452 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   stTest1UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003453 - 00003453 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   stTest2Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003454 - 00003460 (0xd bytes), align: 0
  Segment part 21.            Intra module refs:   stTest2UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00003461 - 000034A0 (0x40 bytes), align: 0
  Segment part 23.            Intra module refs:   systemtestAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059C9 - 000059CE (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_AddService::?relay   000059C9        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_RegisterAppCBs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_SetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059CF - 000059D4 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   stCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_ReadAttrCB::?relay   000059CF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059D5 - 000059DA (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   stCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_WriteAttrCB::?relay
                                   000059D5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059DB - 000059E0 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   ST_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           ST_HandleConnStatusCB::?relay
                                   000059DB 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002029E - 0002029F (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   stServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202A0 - 000202A1 (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   stTest1UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202A2 - 000202A3 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   stTest2UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002024F - 00020251 (0x3 bytes), align: 0
  Segment part 45.            Intra module refs:   stService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002013A - 0002013F (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   stCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\timeset.r51
  PROGRAM MODULE, NAME : timeset

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082A8 - 000082A9 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   tsService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tsServUUID              000082A8 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082AA - 000082AB (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tsValueUUID             000082AA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A0A - 00000A0B (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   TS_RegisterAppCBs
                                                   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           tsProfile_AppCBs        00000A0A 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000824C - 0000824E (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           tsService               0000824C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E32 - 00000E32 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           tsProps                 00000E32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A0C - 00000A11 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 16
                                                   TS_GetParameter
                                                   TS_SetParameter
                                                   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           tsValue                 00000A0C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E33 - 00000E3B (0x9 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 16
           LOCAL                   ADDRESS         
           =====                   =======         
           tsUserDesp              00000E33 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E3C - 00000E5B (0x20 bytes), align: 0
  Segment part 15.            Intra module refs:   TS_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           timesetAttrTbl          00000E3C 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008152 - 00008157 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   TS_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tsCBs                   00008152 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FCD7 - 0001FD02 (0x2c bytes), align: 0
  Segment part 18.            Intra module refs:   TS_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_AddService           0001FCD7 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD03 - 0001FD1F (0x1d bytes), align: 0
  Segment part 20.            Intra module refs:   TS_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_RegisterAppCBs       0001FD03 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD20 - 0001FD49 (0x2a bytes), align: 0
  Segment part 22.            Intra module refs:   TS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_SetParameter         0001FD20 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD4A - 0001FD4E (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   TS_GetParameter
                                                   TS_ReadAttrCB
                                                   TS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001FD4A 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD4F - 0001FD76 (0x28 bytes), align: 0
  Segment part 25.            Intra module refs:   TS_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_GetParameter         0001FD4F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD77 - 0001FDFB (0x85 bytes), align: 0
  Segment part 27.            Intra module refs:   TS_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           TS_ReadAttrCB           0001FD77 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FDFC - 0001FE9B (0xa0 bytes), align: 0
  Segment part 29.            Intra module refs:   TS_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           TS_WriteAttrCB          0001FDFC 
               is indirectly called
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE9C - 0001FEA2 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0001FE9C 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEA3 - 0001FEAC (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0001FEA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEAD - 0001FEB2 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   TS_ReadAttrCB
                                                   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001FEAD 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEB3 - 0001FEBC (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   ?Subroutine2
                                                   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            0001FEB3 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEBD - 0001FEC4 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   TS_ReadAttrCB
                                                   TS_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001FEBD 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034A1 - 000034A1 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   tsProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034A2 - 000034AA (0x9 bytes), align: 0
  Segment part 14.            Intra module refs:   tsUserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034AB - 000034CA (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   timesetAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059E1 - 000059E6 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_AddService::?relay   000059E1        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059E7 - 000059EC (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_RegisterAppCBs::?relay
                                   000059E7        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059ED - 000059F2 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_SetParameter::?relay
                                   000059ED        AppTimeUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059F3 - 000059F8 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TS_GetParameter::?relay
                                   000059F3        AppInit (app)
                                                   AppTimeUpdate (app)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059F9 - 000059FE (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   tsCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           TS_ReadAttrCB::?relay   000059F9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000059FF - 00005A04 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   tsCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           TS_WriteAttrCB::?relay
                                   000059FF 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202A8 - 000202A9 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   tsServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202AA - 000202AB (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   tsValueUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002024C - 0002024E (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   tsService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020152 - 00020157 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   tsCBs

    *************************************************************************

  FILE NAME : C:\Users\Tom\Desktop\新我握力器\0827\Debug\Obj\wechatprofile.r51
  PROGRAM MODULE, NAME : wechatprofile

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B0 - 000082B1 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   wcService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wcServUUID              000082B0 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B2 - 000082B3 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wcWriteUUID             000082B2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B4 - 000082B5 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wcIndicateUUID          000082B4 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000082B6 - 000082B7 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wcReadUUID              000082B6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A12 - 00000A13 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   WC_RegisterAppCBs
                                                   WC_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           wcProfile_AppCBs        00000A12 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008249 - 0000824B (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcService               00008249 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E5C - 00000E5C (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcWriteProps            00000E5C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A14 - 00000A27 (0x14 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 29
                                                   WC_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           wcWrite                 00000A14 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E5D - 00000E69 (0xd bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcWriteDesp             00000E5D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E6A - 00000E6A (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcIndicateProps         00000E6A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A28 - 00000A3B (0x14 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 29
                                                   WC_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           wcIndicate              00000A28 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A3C - 00000A41 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 29
                                                   WC_AddService
                                                   WC_HandleConnStatusCB
                                                   WC_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           wcIndicateConfig        00000A3C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E6B - 00000E7A (0x10 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcIndicateDesp          00000E6B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E7B - 00000E7B (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcReadProps             00000E7B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A42 - 00000A47 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 29
                                                   WC_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           wcRead                  00000A42 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E7C - 00000E87 (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 29
           LOCAL                   ADDRESS         
           =====                   =======         
           wcReadDesp              00000E7C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E88 - 00000EDF (0x58 bytes), align: 0
  Segment part 28.            Intra module refs:   WC_AddService
                                                   WC_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           wechatAttrTbl           00000E88 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000815E - 00008163 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   WC_AddService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wcCBs                   0000815E 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7A9 - 0001E7E6 (0x3e bytes), align: 0
  Segment part 31.            Intra module refs:   WC_AddService::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_AddService           0001E7A9 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7E7 - 0001E7E8 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   WC_AddService
                                                   WC_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0001E7E7 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7E9 - 0001E7ED (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   ?Subroutine0
                                                   WC_ReadAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E7EE - 0001E80A (0x1d bytes), align: 0
  Segment part 35.            Intra module refs:   WC_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_RegisterAppCBs       0001E7EE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E80B - 0001E891 (0x87 bytes), align: 0
  Segment part 37.            Intra module refs:   WC_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_SetParameter         0001E80B 
               calls direct
               XSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E892 - 0001E93D (0xac bytes), align: 0
  Segment part 39.            Intra module refs:   WC_ReadAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_ReadAttrCB           0001E892 
               calls direct, is indirectly called
               XSTACK = 00000006 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001E93E - 0001EA22 (0xe5 bytes), align: 0
  Segment part 41.            Intra module refs:   WC_WriteAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_WriteAttrCB          0001E93E 
               calls direct, is indirectly called
               XSTACK = 00000004 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EA23 - 0001EA28 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   WC_ReadAttrCB
                                                   WC_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0001EA23 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EA29 - 0001EA32 (0xa bytes), align: 0
  Segment part 44.            Intra module refs:   WC_ReadAttrCB
                                                   WC_WriteAttrCB
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            0001EA29 
    -------------------------------------------------------------------------
<BANKED_CODE> 4 (was BANKED_CODE)
  Relative segment, address: CODE 0001EA33 - 0001EA6B (0x39 bytes), align: 0
  Segment part 45.            Intra module refs:   WC_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_HandleConnStatusCB   0001EA33 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034CB - 000034CB (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   wcWriteProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034CC - 000034D8 (0xd bytes), align: 0
  Segment part 16.            Intra module refs:   wcWriteDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034D9 - 000034D9 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   wcIndicateProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034DA - 000034E9 (0x10 bytes), align: 0
  Segment part 22.            Intra module refs:   wcIndicateDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034EA - 000034EA (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   wcReadProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034EB - 000034F6 (0xc bytes), align: 0
  Segment part 27.            Intra module refs:   wcReadDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000034F7 - 0000354E (0x58 bytes), align: 0
  Segment part 29.            Intra module refs:   wechatAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A05 - 00005A0A (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_AddService::?relay   00005A05        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A0B - 00005A10 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_RegisterAppCBs::?relay
                                   00005A0B        Betwine_Init (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A11 - 00005A16 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WC_SetParameter::?relay
                                   00005A11        peripheralStateNotificationCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatSendData (betwine)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A17 - 00005A1C (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   wcCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_ReadAttrCB::?relay   00005A17 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A1D - 00005A22 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   wcCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_WriteAttrCB::?relay
                                   00005A1D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A23 - 00005A28 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   WC_AddService
           LOCAL                   ADDRESS         
           =====                   =======         
           WC_HandleConnStatusCB::?relay
                                   00005A23 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202B0 - 000202B1 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   wcServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202B2 - 000202B3 (0x2 bytes), align: 0
  Segment part 48.            Intra module refs:   wcWriteUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202B4 - 000202B5 (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   wcIndicateUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000202B6 - 000202B7 (0x2 bytes), align: 0
  Segment part 50.            Intra module refs:   wcReadUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00020249 - 0002024B (0x3 bytes), align: 0
  Segment part 51.            Intra module refs:   wcService
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0002015E - 00020163 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   wcCBs

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.5\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000355A - 0000355E (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    0000355A        ?call_main (?cmain)
           ?C_EXIT                 0000355A 
           ?ROM_MONITOR_NOPS       0000355A 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
DOVERLAY
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000355F, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  0000355F        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000355F - 00003567 (0x9 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   0000355F        __low_level_init (hal_startup)
    -------------------------------------------------------------------------
BDATA_Z
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_Z          
    -------------------------------------------------------------------------
DATA_Z
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00003568 - 00003575 (0xe bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           00003568        Segment part 1 (ll_halt)
    -------------------------------------------------------------------------
IDATA_Z
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00003576 - 00003583 (0xe bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          00003576        myPC (ll)
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_Z          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00003584 - 00003593 (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          00003584        AuthReqData (betwine)
                                                   AuthReqHead (betwine)
                                                   AuthReqPbData (betwine)
                                                   AuthReqPbLen (betwine)
                                                   Betwine_BondMgrCBs (betwine)
                                                   Betwine_TaskID (betwine)
                                                   GATTServApp_TaskID (gattservapp)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   InitReqData (betwine)
                                                   InitReqHead (betwine)
                                                   InitReqPbData (betwine)
                                                   InitReqPbLen (betwine)
                                                   LL_TaskID (ll)
                                                   Mac_Address (betwine)
                                                   OSAL_timeSeconds (OSAL_ClockBLE)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   Segment part 10 (gap_peridevmgr)
                                                   Segment part 10 (gap_task)
                                                   Segment part 10 (gapgattserver)
                                                   Segment part 10 (gattservapp)
                                                   Segment part 11 (gap_peridevmgr)
                                                   Segment part 11 (gattservapp)
                                                   Segment part 12 (gap_configmgr)
                                                   Segment part 12 (gattservapp)
                                                   Segment part 13 (gapgattserver)
                                                   Segment part 13 (gattservapp)
                                                   Segment part 14 (gattservapp)
                                                   Segment part 15 (gap_configmgr)
                                                   Segment part 16 (gapgattserver)
                                                   Segment part 18 (gattservapp)
                                                   Segment part 19 (gapgattserver)
                                                   Segment part 6 (gapgattserver)
                                                   Segment part 6 (hci_data)
                                                   Segment part 6 (l2cap_util)
                                                   Segment part 6 (linkdb)
                                                   Segment part 6 (sm_mgr)
                                                   Segment part 7 (gatt_task)
                                                   Segment part 7 (hci_data)
                                                   Segment part 7 (linkdb)
                                                   Segment part 8 (gatt_task)
                                                   Segment part 8 (hci_data)
                                                   Segment part 8 (ll_scheduler)
                                                   Segment part 8 (sm_pairing)
                                                   Segment part 9 (gap_linkmgr)
                                                   Segment part 9 (gap_peridevmgr)
                                                   Segment part 9 (gatt_server)
                                                   Segment part 9 (gattservapp)
                                                   Segment part 9 (ll_scheduler)
                                                   SendReqData (betwine)
                                                   SendReqHead (betwine)
                                                   SendReqPbData (betwine)
                                                   SendReqPbLen (betwine)
                                                   Timestamp_wc (betwine)
                                                   accelAverageParam (app)
                                                   accelFilterArray (app)
                                                   accelInterval (app)
                                                   accelIntervalParam (app)
                                                   accelThresholdParam (app)
                                                   activePg (osal_snv)
                                                   adcRef (hal_adc)
                                                   advInfo (ll)
                                                   aminagoStep (app)
                                                   autoSyncWhiteList (gapbondmgr)
                                                   batteryFullyInterval (app)
                                                   batteryValue (app)
                                                   bleEvtMask (hci_event)
                                                   bm_list_ptr (osal_bufmgr)
                                                   bonds (gapbondmgr)
                                                   btConfig (battservice)
                                                   buildInfo (ll)
                                                   cachedTRNGdata (ll_enc)
                                                   cbTimers (osal_cbtimer)
                                                   chanMapUpdate (ll)
                                                   chargerRemindInterval (app)
                                                   chargerState (app)
                                                   clkDivOnHalt (ll)
                                                   connectionHandle (gapbondmgr)
                                                   ctrlToHostEnable (hci)
                                                   currentStep (app)
                                                   currentTime (app)
                                                   dataPkt (ll_enc)
                                                   dcdcData (ll)
                                                   devInfoSystemId (devinfoservice)
                                                   deviceFeatureSet (ll)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   dtmInfo (ll)
                                                   eraseAllBonds (gapbondmgr)
                                                   exerciseDuration (app)
                                                   exerciseInterval (app)
                                                   extendRfRange (ll)
                                                   failF (osal_snv)
                                                   fastTxRespTime (ll)
                                                   gapAutoAdvPrivateAddrChange (gap_configmgr)
                                                   gapBondMgr_TaskID (gapbondmgr)
                                                   gapBond_AutoFail (gapbondmgr)
                                                   gapBond_Bonding (gapbondmgr)
                                                   gapBond_IOCap (gapbondmgr)
                                                   gapBond_MITM (gapbondmgr)
                                                   gapBond_OOBData (gapbondmgr)
                                                   gapBond_OOBDataFlag (gapbondmgr)
                                                   gapBond_Passcode (gapbondmgr)
                                                   gapDeviceAddrMode (gap_configmgr)
                                                   gapPrivateAddrChangeTimeout (gap_configmgr)
                                                   gapProfileRole (gap_configmgr)
                                                   gapProfileState (betwine)
                                                   gapRole_AdvChanMap (peripheral)
                                                   gapRole_AdvDirectAddr (peripheral)
                                                   gapRole_AdvDirectType (peripheral)
                                                   gapRole_AdvEventType (peripheral)
                                                   gapRole_AdvFilterPolicy (peripheral)
                                                   gapRole_ConnInterval (peripheral)
                                                   gapRole_ConnSlaveLatency (peripheral)
                                                   gapRole_ConnTimeout (peripheral)
                                                   gapRole_ConnectedDevAddr (peripheral)
                                                   gapRole_IRK (peripheral)
                                                   gapRole_ParamUpdateEnable (peripheral)
                                                   gapRole_RSSIReadRate (peripheral)
                                                   gapRole_SRK (peripheral)
                                                   gapRole_ScanRspData (peripheral)
                                                   gapRole_ScanRspDataLen (peripheral)
                                                   gapRole_SlaveLatency (peripheral)
                                                   gapRole_TaskID (peripheral)
                                                   gapRole_bdAddr (peripheral)
                                                   gapRole_profileRole (peripheral)
                                                   gapRole_signCounter (peripheral)
                                                   gapRole_state (peripheral)
                                                   gapTaskID (gap_task)
                                                   gattTaskID (gatt_task)
                                                   halKeyConfigured (hal_key)
                                                   halKeySavedKeys (hal_key)
                                                   halPwrMgtMode (hal_sleep)
                                                   haltDuringRf (ll)
                                                   hciCtrlCmdToken (hci)
                                                   hciExtTaskID (hci_tl)
                                                   hciGapTaskID (hci_tl)
                                                   hciL2capTaskID (hci_tl)
                                                   hciPTMenabled (hci)
                                                   hciSmpTaskID (hci_tl)
                                                   hciTaskID (hci_tl)
                                                   hciTestTaskID (hci_tl)
                                                   hpConfig (hitpoint)
                                                   hpUpdateState (app)
                                                   i2cAddr (hal_i2c)
                                                   l2capChannels (l2cap_task)
                                                   l2capFixedChannels (l2cap_task)
                                                   l2capTaskID (l2cap_task)
                                                   lastAccel (app)
                                                   llConns (ll)
                                                   llState (ll)
                                                   maxAccel (app)
                                                   maxTxPwrForDTM (ll)
                                                   minAccel (app)
                                                   mrProfile_AppCBs (motorrun)
                                                   mrStamp (motorrun)
                                                   mrStampConfig (motorrun)
                                                   mrValue (motorrun)
                                                   numHostBufs (hci)
                                                   numWLEntries (phy)
                                                   nvInUse (ll)
                                                   onePktPerEvt (ll)
                                                   osalMemStat (OSAL_Memory)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   ownPublicAddr (ll)
                                                   ownRandomAddr (ll)
                                                   ownSavedPublicAddr (ll)
                                                   pAuthLink (gap_linkmgr)
                                                   pEstLink (gap_linkmgr)
                                                   pGapAdvertState (gap_devmgr)
                                                   pGapBondCB (gapbondmgr)
                                                   pGapRoles_AppCGs (peripheral)
                                                   pGapRoles_ParamUpdateCB (peripheral)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pHciEvtMask (hci_event)
                                                   pPairingParams (sm_pairing)
                                                   paramUpdateInterval (app)
                                                   paramUpdateNoSuccessOption (peripheral)
                                                   pedometerPattern (app)
                                                   peerInfo (ll)
                                                   pfnCentralConnCBs (gap_linkmgr)
                                                   pfnPeripheralCBs (gap_task)
                                                   pfnResponderCBs (sm_pairing)
                                                   pgOff (osal_snv)
                                                   pmState (pedometer)
                                                   pmStateConfig (pedometer)
                                                   pmValue (pedometer)
                                                   pmValueConfig (pedometer)
                                                   postRfOperations (ll)
                                                   preBlinkState (hal_led)
                                                   previousLLTimerTick (OSAL_ClockBLE)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   realtimeStep (app)
                                                   receiveData (betwine)
                                                   receiveOffset (betwine)
                                                   receiveRemainder (betwine)
                                                   remUsTicks (OSAL_ClockBLE)
                                                   rfCounters (ll)
                                                   rssiCorrection (ll)
                                                   rxFifoFlowCtrl (ll)
                                                   serverInfoTbl (gatt_server)
                                                   sittingDuration (app)
                                                   slOverride (ll)
                                                   sleepTime (app)
                                                   smTaskID (sm_task)
                                                   stProfile_AppCBs (systemtest)
                                                   stTest1 (systemtest)
                                                   stTest1Config (systemtest)
                                                   stTest2 (systemtest)
                                                   stepUpdateWaiting (app)
                                                   systemState (betwine)
                                                   taskEndCause (ll)
                                                   tasksEvents (OSAL_betwine)
                                                   timeMSec (OSAL_ClockBLE)
                                                   timerHead (OSAL_Timers)
                                                   trngCounter (ll)
                                                   tsProfile_AppCBs (timeset)
                                                   tsValue (timeset)
                                                   verInfo (ll)
                                                   wakeForRF (hal_sleep)
                                                   wakeTime (app)
                                                   wcIndicate (wechatprofile)
                                                   wcIndicateConfig (wechatprofile)
                                                   wcProfile_AppCBs (wechatprofile)
                                                   wcRead (wechatprofile)
                                                   wcWrite (wechatprofile)
                                                   wechatSeq (betwine)
    -------------------------------------------------------------------------
IXDATA_Z
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_Z         
    -------------------------------------------------------------------------
BDATA_I
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
BDATA_ID
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_I          
    -------------------------------------------------------------------------
DATA_I
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00003594 - 000035A6 (0x13 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           00003594        halSleepPconValue (hal_sleep)
    -------------------------------------------------------------------------
IDATA_I
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
IDATA_ID
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_I          
    -------------------------------------------------------------------------
PDATA_I
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
PDATA_ID
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_I          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035A7 - 000035CC (0x26 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000035A7        Betwine_PeripheralCBs (betwine)
                                                   Segment part 10 (gatt_server)
                                                   Segment part 11 (gapgattserver)
                                                   Segment part 12 (gap_peridevmgr)
                                                   Segment part 13 (gap_configmgr)
                                                   Segment part 14 (gapgattserver)
                                                   Segment part 16 (gattservapp)
                                                   Segment part 17 (gapgattserver)
                                                   Segment part 19 (gattservapp)
                                                   Segment part 20 (gapgattserver)
                                                   Segment part 22 (gapgattserver)
                                                   Segment part 24 (gapgattserver)
                                                   Segment part 6 (gap_peridevmgr)
                                                   Segment part 6 (sm_rsppairing)
                                                   Segment part 8 (gapgattserver)
                                                   activeTaskID (OSAL)
                                                   advertData (betwine)
                                                   appTaskID (gattservapp)
                                                   attDeviceName (betwine)
                                                   baseTaskID (osal_cbtimer)
                                                   batteryAttrTbl (battservice)
                                                   btProps (battservice)
                                                   btUserDesp (battservice)
                                                   btValue (battservice)
                                                   devInfo11073CertProps (devinfoservice)
                                                   devInfoAttrTbl (devinfoservice)
                                                   devInfoFirmwareRevProps (devinfoservice)
                                                   devInfoHardwareRevProps (devinfoservice)
                                                   devInfoMfrNameProps (devinfoservice)
                                                   devInfoModelNumberProps (devinfoservice)
                                                   devInfoPnpId (devinfoservice)
                                                   devInfoPnpIdProps (devinfoservice)
                                                   devInfoSerialNumberProps (devinfoservice)
                                                   devInfoSoftwareRevProps (devinfoservice)
                                                   devInfoSystemIdProps (devinfoservice)
                                                   device_name (betwine)
                                                   gapAppTaskID (gap_configmgr)
                                                   gapBond_AutoFailReason (gapbondmgr)
                                                   gapBond_InitiateWait (gapbondmgr)
                                                   gapBond_KeyDistList (gapbondmgr)
                                                   gapBond_KeySize (gapbondmgr)
                                                   gapBond_PairingMode (gapbondmgr)
                                                   gapRole_AdvEnabled (peripheral)
                                                   gapRole_AdvertData (peripheral)
                                                   gapRole_AdvertDataLen (peripheral)
                                                   gapRole_AdvertOffTime (peripheral)
                                                   gapRole_ConnectionHandle (peripheral)
                                                   gapRole_MaxConnInterval (peripheral)
                                                   gapRole_MinConnInterval (peripheral)
                                                   gapRole_TimeoutMultiplier (peripheral)
                                                   gapUnwantedTaskID (gap_task)
                                                   historystepAttrTbl (historystep)
                                                   hitpointAttrTbl (hitpoint)
                                                   hpProps (hitpoint)
                                                   hpUserDesp (hitpoint)
                                                   hpValue (hitpoint)
                                                   hsStepsProps (historystep)
                                                   hsStepsUserDesp (historystep)
                                                   hsStepsValue (historystep)
                                                   language (betwine)
                                                   motorrunAttrTbl (motorrun)
                                                   motorrunProfileCBs (betwine)
                                                   mrStampProps (motorrun)
                                                   mrStampUserDesp (motorrun)
                                                   mrUserDesp (motorrun)
                                                   mrValueProps (motorrun)
                                                   pedometerAttrTbl (pedometer)
                                                   pmStateProps (pedometer)
                                                   pmStateUserDesp (pedometer)
                                                   pmValueProps (pedometer)
                                                   pmValueUserDesp (pedometer)
                                                   registeredKeysTaskID (OnBoard)
                                                   reqTaskId (gatt_server)
                                                   scanRspData (betwine)
                                                   stTest1Props (systemtest)
                                                   stTest1UserDesp (systemtest)
                                                   stTest2Props (systemtest)
                                                   stTest2UserDesp (systemtest)
                                                   systemtestAttrTbl (systemtest)
                                                   taskEndCauses (ll)
                                                   taskErrorEndCauses (ll)
                                                   timesetAttrTbl (timeset)
                                                   timesetProfileCBs (betwine)
                                                   timezone (betwine)
                                                   tsProps (timeset)
                                                   tsUserDesp (timeset)
                                                   wcIndicateDesp (wechatprofile)
                                                   wcIndicateProps (wechatprofile)
                                                   wcProfileChangeCBs (betwine)
                                                   wcReadDesp (wechatprofile)
                                                   wcReadProps (wechatprofile)
                                                   wcWriteDesp (wechatprofile)
                                                   wcWriteProps (wechatprofile)
                                                   wechatAttrTbl (wechatprofile)
    -------------------------------------------------------------------------
IXDATA_I
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
IXDATA_ID
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035CD, align: 0
  Segment part 37.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035CD - 000035E2 (0x16 bytes), align: 0
  Segment part 38.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              000035CD 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSTACK_START           
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000000, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000000 
    -------------------------------------------------------------------------
EXT_STACK
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00003030 - 00003032 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035E3 - 000035E8 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000035E3        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000035E6 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PSP              
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035E9 - 000035EE (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000035E9        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035EF - 000035F1 (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        000035EF        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       
    -------------------------------------------------------------------------
CSTART
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __disable_infineon_pflash
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000035F2 - 000035F4 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000A - 0000000A (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   ?V1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     0000000A        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (epb_WristBand)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine10 (epb)
                                                   ?Subroutine15 (epb_MmBp)
                                                   ?Subroutine16 (betwine)
                                                   ?Subroutine16 (epb)
                                                   ?Subroutine17 (gapbondmgr)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine2 (battservice)
                                                   ?Subroutine2 (hitpoint)
                                                   ?Subroutine4 (app)
                                                   ?Subroutine4 (devinfoservice)
                                                   ?Subroutine4 (epb)
                                                   ?Subroutine4 (hal_led)
                                                   ?Subroutine42 (betwine)
                                                   ?Subroutine5 (peripheral)
                                                   ?Subroutine8 (epb)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   BT_AddService (battservice)
                                                   BT_HandleConnStatusCB (battservice)
                                                   BT_ReadAttrCB (battservice)
                                                   BT_SetParameter (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HP_AddService (hitpoint)
                                                   HP_HandleConnStatusCB (hitpoint)
                                                   HP_ReadAttrCB (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HS_SetParameter (historystep)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   MR_AddService (motorrun)
                                                   MR_HandleConnStatusCB (motorrun)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   PM_AddService (pedometer)
                                                   PM_GetParameter (pedometer)
                                                   PM_HandleConnStatusCB (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   RF_NormalIsr (ll_isr)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ST_AddService (systemtest)
                                                   ST_HandleConnStatusCB (systemtest)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 100 (gattservapp)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 102 (gap_linkmgr)
                                                   Segment part 103 (gatt_server)
                                                   Segment part 105 (gap_linkmgr)
                                                   Segment part 107 (gap_linkmgr)
                                                   Segment part 107 (gatt_server)
                                                   Segment part 108 (gattservapp)
                                                   Segment part 108 (l2cap_util)
                                                   Segment part 109 (gattservapp)
                                                   Segment part 114 (gattservapp)
                                                   Segment part 114 (hci_event)
                                                   Segment part 115 (hci_event)
                                                   Segment part 122 (hci_event)
                                                   Segment part 125 (gattservapp)
                                                   Segment part 129 (gattservapp)
                                                   Segment part 13 (hci_data)
                                                   Segment part 130 (gattservapp)
                                                   Segment part 131 (gattservapp)
                                                   Segment part 132 (gattservapp)
                                                   Segment part 133 (hci_event)
                                                   Segment part 135 (hci_event)
                                                   Segment part 137 (hci_event)
                                                   Segment part 138 (gattservapp)
                                                   Segment part 139 (gattservapp)
                                                   Segment part 144 (gattservapp)
                                                   Segment part 146 (att_util)
                                                   Segment part 146 (gattservapp)
                                                   Segment part 149 (gattservapp)
                                                   Segment part 15 (sm_rsppairing)
                                                   Segment part 151 (hci_event)
                                                   Segment part 152 (att_util)
                                                   Segment part 152 (hci_event)
                                                   Segment part 16 (sm_rsppairing)
                                                   Segment part 168 (att_util)
                                                   Segment part 169 (gattservapp)
                                                   Segment part 178 (gattservapp)
                                                   Segment part 18 (gatt_server)
                                                   Segment part 18 (hci_data)
                                                   Segment part 18 (hci_event)
                                                   Segment part 181 (att_util)
                                                   Segment part 181 (gattservapp)
                                                   Segment part 185 (gattservapp)
                                                   Segment part 19 (l2cap_util)
                                                   Segment part 20 (hci_data)
                                                   Segment part 20 (smp)
                                                   Segment part 22 (gatt_task)
                                                   Segment part 23 (sm_mgr)
                                                   Segment part 24 (l2cap_util)
                                                   Segment part 25 (l2cap_util)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 27 (gap_linkmgr)
                                                   Segment part 31 (linkdb)
                                                   Segment part 34 (att_util)
                                                   Segment part 38 (smp)
                                                   Segment part 39 (hci_event)
                                                   Segment part 40 (gap_linkmgr)
                                                   Segment part 40 (gap_peridevmgr)
                                                   Segment part 41 (gap_linkmgr)
                                                   Segment part 46 (gap_peridevmgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 48 (hci_event)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 50 (att_util)
                                                   Segment part 50 (gap_configmgr)
                                                   Segment part 53 (gapgattserver)
                                                   Segment part 57 (gattservapp)
                                                   Segment part 59 (epb_MmBp)
                                                   Segment part 59 (sm_mgr)
                                                   Segment part 60 (gap_linkmgr)
                                                   Segment part 61 (gapgattserver)
                                                   Segment part 61 (gatt_server)
                                                   Segment part 63 (gattservapp)
                                                   Segment part 64 (att_util)
                                                   Segment part 64 (gatt_server)
                                                   Segment part 64 (sm_mgr)
                                                   Segment part 65 (gatt_server)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 66 (gattservapp)
                                                   Segment part 67 (att_util)
                                                   Segment part 68 (gap_linkmgr)
                                                   Segment part 69 (gap_configmgr)
                                                   Segment part 69 (gap_linkmgr)
                                                   Segment part 70 (gap_linkmgr)
                                                   Segment part 70 (l2cap_util)
                                                   Segment part 71 (gap_linkmgr)
                                                   Segment part 71 (peripheral)
                                                   Segment part 71 (sm_rsppairing)
                                                   Segment part 72 (app)
                                                   Segment part 72 (sm_pairing)
                                                   Segment part 74 (gap_linkmgr)
                                                   Segment part 74 (sm_pairing)
                                                   Segment part 75 (sm_rsppairing)
                                                   Segment part 77 (hci_event)
                                                   Segment part 78 (gattservapp)
                                                   Segment part 78 (hci_event)
                                                   Segment part 79 (gattservapp)
                                                   Segment part 80 (app)
                                                   Segment part 81 (sm_mgr)
                                                   Segment part 82 (gattservapp)
                                                   Segment part 83 (hci_event)
                                                   Segment part 83 (sm_mgr)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 84 (gap_linkmgr)
                                                   Segment part 84 (gattservapp)
                                                   Segment part 85 (gap_linkmgr)
                                                   Segment part 85 (gatt_server)
                                                   Segment part 85 (hci_event)
                                                   Segment part 85 (sm_mgr)
                                                   Segment part 87 (gattservapp)
                                                   Segment part 88 (att_util)
                                                   Segment part 88 (gattservapp)
                                                   Segment part 88 (sm_mgr)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 90 (gattservapp)
                                                   Segment part 94 (gap_linkmgr)
                                                   Segment part 94 (ll_timer2)
                                                   Segment part 95 (gatt_server)
                                                   Segment part 96 (gattservapp)
                                                   Segment part 97 (gap_peridevmgr)
                                                   Segment part 99 (gatt_server)
                                                   Segment part 99 (gattservapp)
                                                   TS_AddService (timeset)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_HandleConnStatusCB (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_enum (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_has_tag (epb)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   epb_varint32_pack_size (epb)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hciTxDataBufferReset (hci_data)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConnCleanup (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetNextDataChan (ll_common)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000B - 0000000B (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   ?V2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V1                     0000000B        ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (epb_WristBand)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine10 (epb)
                                                   ?Subroutine13 (epb_MmBp)
                                                   ?Subroutine14 (epb_MmBp)
                                                   ?Subroutine15 (epb_MmBp)
                                                   ?Subroutine16 (epb)
                                                   ?Subroutine17 (epb_MmBp)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine18 (epb_MmBp)
                                                   ?Subroutine4 (devinfoservice)
                                                   ?Subroutine42 (betwine)
                                                   ?Subroutine5 (epb_WristBand)
                                                   ?Subroutine7 (gapbondmgr)
                                                   ?Subroutine8 (epb)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   BT_AddService (battservice)
                                                   BT_ReadAttrCB (battservice)
                                                   BT_SetParameter (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_AddService (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   HP_AddService (hitpoint)
                                                   HP_ReadAttrCB (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MR_AddService (motorrun)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PM_AddService (pedometer)
                                                   PM_GetParameter (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   ST_AddService (systemtest)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 59 (epb_MmBp)
                                                   Segment part 71 (peripheral)
                                                   Segment part 80 (app)
                                                   TS_AddService (timeset)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_enum (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_has_tag (epb)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   epb_varint32_pack_size (epb)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   verifyWordM (osal_snv)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000C - 0000000C (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   ?V3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V2                     0000000C        ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine11 (gapbondmgr)
                                                   ?Subroutine13 (peripheral)
                                                   ?Subroutine15 (epb_MmBp)
                                                   ?Subroutine16 (epb)
                                                   ?Subroutine16 (epb_MmBp)
                                                   ?Subroutine17 (epb)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine3 (epb_WristBand)
                                                   ?Subroutine4 (devinfoservice)
                                                   ?Subroutine4 (epb)
                                                   AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   BT_AddService (battservice)
                                                   BT_SetParameter (battservice)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   HP_AddService (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_SetParameter (historystep)
                                                   HalFlashRead (hal_flash)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MR_AddService (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_AddService (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   ST_AddService (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 71 (peripheral)
                                                   TS_AddService (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_enum (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_varint32_pack_size (epb)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   verifyWordM (osal_snv)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000D - 0000000D (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?V4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V3                     0000000D        ?Subroutine0 (hal_sleep)
                                                   ?Subroutine1 (hal_led)
                                                   ?Subroutine11 (gapbondmgr)
                                                   ?Subroutine13 (peripheral)
                                                   ?Subroutine15 (epb_MmBp)
                                                   ?Subroutine16 (epb)
                                                   ?Subroutine16 (epb_MmBp)
                                                   ?Subroutine17 (epb)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine2 (epb_WristBand)
                                                   ?Subroutine3 (epb_WristBand)
                                                   ?Subroutine4 (devinfoservice)
                                                   ?Subroutine4 (epb)
                                                   AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   BT_AddService (battservice)
                                                   BT_SetParameter (battservice)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   HP_AddService (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_SetParameter (historystep)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MR_AddService (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_AddService (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   ST_AddService (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 71 (peripheral)
                                                   TS_AddService (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_enum (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_varint32_pack_size (epb)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memdup (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   verifyWordM (osal_snv)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000E - 0000000E (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   ?V5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V4                     0000000E        ?Subroutine10 (epb)
                                                   ?Subroutine13 (epb_MmBp)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine5 (osal_snv)
                                                   AppAccDataReadyHandler (app)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_ReadAttrCB (pedometer)
                                                   ST_WriteAttrCB (systemtest)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_varint32_pack_size (epb)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   halSleep (hal_sleep)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memdup (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   verifyWordM (osal_snv)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000F - 0000000F (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?V6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V5                     0000000F        ?Subroutine10 (epb)
                                                   ?Subroutine12 (epb_MmBp)
                                                   ?Subroutine18 (epb)
                                                   ?Subroutine19 (epb_MmBp)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_ReadAttrCB (pedometer)
                                                   ST_WriteAttrCB (systemtest)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_varint32_pack_size (epb)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   halSleep (hal_sleep)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_memdup (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   verifyWordM (osal_snv)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000010 - 00000010 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   ?V7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V6                     00000010        ?Subroutine2 (osal_cbtimer)
                                                   ?Subroutine5 (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   MR_WriteAttrCB (motorrun)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 35 (osal_snv)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_set_bytes (epb)
                                                   epb_varint32_pack_size (epb)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   halSleep (hal_sleep)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000011 - 00000011 (0x1 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V7                     00000011        ?Subroutine2 (osal_cbtimer)
                                                   ?Subroutine5 (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_set_bytes (epb)
                                                   epb_varint32_pack_size (epb)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   halSleep (hal_sleep)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
VREG
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V8                     
    -------------------------------------------------------------------------
VREG
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V9                     
    -------------------------------------------------------------------------
VREG
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V10                    
    -------------------------------------------------------------------------
VREG
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V11                    
    -------------------------------------------------------------------------
VREG
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V12                    
    -------------------------------------------------------------------------
VREG
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V13                    
    -------------------------------------------------------------------------
VREG
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V14                    
    -------------------------------------------------------------------------
VREG
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V15                    
    -------------------------------------------------------------------------
VREG
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V16                    
    -------------------------------------------------------------------------
VREG
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V17                    
    -------------------------------------------------------------------------
VREG
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V18                    
    -------------------------------------------------------------------------
VREG
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V19                    
    -------------------------------------------------------------------------
VREG
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V20                    
    -------------------------------------------------------------------------
VREG
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V21                    
    -------------------------------------------------------------------------
VREG
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V22                    
    -------------------------------------------------------------------------
VREG
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V23                    
    -------------------------------------------------------------------------
VREG
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V24                    
    -------------------------------------------------------------------------
VREG
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V25                    
    -------------------------------------------------------------------------
VREG
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V26                    
    -------------------------------------------------------------------------
VREG
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V27                    
    -------------------------------------------------------------------------
VREG
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V28                    
    -------------------------------------------------------------------------
VREG
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V29                    
    -------------------------------------------------------------------------
VREG
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V30                    
    -------------------------------------------------------------------------
VREG
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V31                    
    -------------------------------------------------------------------------
PSP
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSP                    
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 0000001A - 0000001B (0x2 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    0000001A        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?Subroutine12 (app)
                                                   ?Subroutine14 (epb)
                                                   ?Subroutine4 (hal_acc)
                                                   ?Subroutine5 (epb)
                                                   ?Subroutine5 (hal_acc)
                                                   ?Subroutine6 (app)
                                                   ?Subroutine6 (epb)
                                                   ?Subroutine7 (epb)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   ?XSTACK_DISP100_8 (?XSTACK_DISP8_RP)
                                                   ?XSTACK_DISP101_8 (?XSTACK_DISP8_RP)
                                                   ?XSTACK_DISP102_8 (?XSTACK_DISP8_RP)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   AppHpReminds (app)
                                                   AppInit (app)
                                                   AppTimeUpdate (app)
                                                   Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_EXT_ClkDivOnHaltCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HalAccActive (hal_acc)
                                                   HalAccClearTapIntr (hal_acc)
                                                   HalAccInit (hal_acc)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAccReset (hal_acc)
                                                   HalAccStandby (hal_acc)
                                                   HalLedUpdate (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 155 (hci_event)
                                                   Segment part 34 (ll_timer2)
                                                   Segment part 35 (osal_snv)
                                                   Segment part 40 (ll_timer2)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 55 (gattservapp)
                                                   Segment part 56 (gattservapp)
                                                   Segment part 60 (devinfoservice)
                                                   Segment part 61 (gatt_server)
                                                   Segment part 75 (hci)
                                                   Segment part 78 (sm_mgr)
                                                   Segment part 82 (hci)
                                                   Segment part 90 (gattservapp)
                                                   Segment part 94 (gattservapp)
                                                   Segment part 95 (hci)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_int32 (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llDivide31By16To16 (ll_math)
                                                   llEventInRange (ll_common)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memset (?memset)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (betwine)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   systemStandby (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000035F5 - 00003612 (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               000035F5        ?call_main (?cmain)
           ?BRET_FF                000035FB        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?Subroutine0 (OSAL)
                                                   ?Subroutine0 (OSAL_Memory)
                                                   ?Subroutine0 (OSAL_PwrMgr)
                                                   ?Subroutine0 (OSAL_Timers)
                                                   ?Subroutine0 (hal_adc)
                                                   ?Subroutine0 (hal_drivers)
                                                   ?Subroutine0 (hal_key)
                                                   ?Subroutine1 (OnBoard)
                                                   ?Subroutine2 (betwine)
                                                   ?Subroutine2 (peripheral)
                                                   ?Subroutine3 (gapbondmgr)
                                                   HP_GetParameter (hitpoint)
                                                   HS_WriteAttrCB (historystep)
                                                   HalAesInit (hal_aes)
                                                   HalDmaInit (hal_dma)
                                                   HalFlashErase (hal_flash)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   L2CAP_RegisterApp (l2cap_if)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   MR_RegisterAppCBs (motorrun)
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   Segment part 10 (gap_devmgr)
                                                   Segment part 10 (hal_acc)
                                                   Segment part 10 (hal_i2c)
                                                   Segment part 10 (hci_event)
                                                   Segment part 11 (gatt_task)
                                                   Segment part 128 (hci)
                                                   Segment part 15 (epb_MmBp)
                                                   Segment part 15 (gap_task)
                                                   Segment part 150 (ll)
                                                   Segment part 154 (phy)
                                                   Segment part 18 (ll_advEndCauses)
                                                   Segment part 23 (att_util)
                                                   Segment part 23 (gatt_server)
                                                   Segment part 23 (hci_tl)
                                                   Segment part 23 (linkdb)
                                                   Segment part 24 (epb)
                                                   Segment part 29 (ll_enc)
                                                   Segment part 31 (gap_peridevmgr)
                                                   Segment part 33 (hal_led)
                                                   Segment part 33 (smp)
                                                   Segment part 37 (ll_timer2)
                                                   Segment part 37 (sm_mgr)
                                                   Segment part 42 (gap_configmgr)
                                                   Segment part 42 (gapgattserver)
                                                   Segment part 42 (ll_scheduler)
                                                   Segment part 46 (sm_pairing)
                                                   Segment part 51 (gattservapp)
                                                   Segment part 52 (l2cap_util)
                                                   Segment part 53 (app)
                                                   Segment part 54 (gatt_server)
                                                   Segment part 61 (ll_common)
                                                   Segment part 70 (ll_timer2)
                                                   Segment part 78 (gap_linkmgr)
                                                   TS_RegisterAppCBs (timeset)
                                                   WC_RegisterAppCBs (wechatprofile)
                                                   bm_desc_from_payload (osal_bufmgr)
                                                   gapValidADType (gap_devmgr)
                                                   halRestoreSleepLevel (hal_sleep)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   l2capHandleRxError (l2cap_util)
                                                   llInitTimer2 (ll_timer2)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
                                                   llUnexpectedEndCauseHandler (ll_errorEndCauses)
                                                   main (betwine_main)
                                                   memset (?memset)
                                                   osalInitTasks (OSAL_betwine)
                                                   osal_int_disable (OSAL)
                                                   osal_snv_init (osal_snv)
                                                   sizeof_tag (epb)
                                                   strlen (?strlen)
           ?BDISPATCH_FF           000035FE        ATT_BuildErrorRsp::?relay (att_util)
                                                   ATT_BuildExchangeMTURsp::?relay (att_util)
                                                   ATT_BuildFindByTypeValueRsp::?relay (att_util)
                                                   ATT_BuildFindInfoRsp::?relay (att_util)
                                                   ATT_BuildHandleValueInd::?relay (att_util)
                                                   ATT_BuildPrepareWriteRsp::?relay (att_util)
                                                   ATT_BuildReadBlobRsp::?relay (att_util)
                                                   ATT_BuildReadByGrpTypeRsp::?relay (att_util)
                                                   ATT_BuildReadByTypeRsp::?relay (att_util)
                                                   ATT_BuildReadMultiRsp::?relay (att_util)
                                                   ATT_BuildReadRsp::?relay (att_util)
                                                   ATT_CompareUUID::?relay (att_util)
                                                   ATT_ConvertUUIDto128::?relay (att_util)
                                                   ATT_ErrorRsp::?relay (att_server)
                                                   ATT_ExchangeMTURsp::?relay (att_server)
                                                   ATT_ExecuteWriteRsp::?relay (att_server)
                                                   ATT_FindByTypeValueRsp::?relay (att_server)
                                                   ATT_FindInfoRsp::?relay (att_server)
                                                   ATT_HandleValueInd::?relay (att_server)
                                                   ATT_HandleValueNoti::?relay (att_server)
                                                   ATT_ParseExchangeMTUReq::?relay (att_util)
                                                   ATT_ParseExecuteWriteReq::?relay (att_util)
                                                   ATT_ParseFindByTypeValueReq::?relay (att_util)
                                                   ATT_ParseFindInfoReq::?relay (att_util)
                                                   ATT_ParsePacket::?relay (att_util)
                                                   ATT_ParsePrepareWriteReq::?relay (att_util)
                                                   ATT_ParseReadBlobReq::?relay (att_util)
                                                   ATT_ParseReadByTypeReq::?relay (att_util)
                                                   ATT_ParseReadMultiReq::?relay (att_util)
                                                   ATT_ParseReadReq::?relay (att_util)
                                                   ATT_ParseWriteReq::?relay (att_util)
                                                   ATT_PrepareWriteRsp::?relay (att_server)
                                                   ATT_ReadBlobRsp::?relay (att_server)
                                                   ATT_ReadByGrpTypeRsp::?relay (att_server)
                                                   ATT_ReadByTypeRsp::?relay (att_server)
                                                   ATT_ReadMultiRsp::?relay (att_server)
                                                   ATT_ReadRsp::?relay (att_server)
                                                   ATT_WriteRsp::?relay (att_server)
                                                   AppAccDataReadyHandler::?relay (app)
                                                   AppActive::?relay (app)
                                                   AppBatteryUpdate::?relay (app)
                                                   AppChargerRemind::?relay (app)
                                                   AppChargerStateChangeHandler::?relay (app)
                                                   AppDoubleClickHandler::?relay (app)
                                                   AppHistoryUpdate::?relay (app)
                                                   AppHitpointUpdate::?relay (app)
                                                   AppHpReminds::?relay (app)
                                                   AppInit::?relay (app)
                                                   AppMotorRun::?relay (app)
                                                   AppStandby::?relay (app)
                                                   AppTimeSet::?relay (app)
                                                   AppTimeUpdate::?relay (app)
                                                   BT_AddService::?relay (battservice)
                                                   BT_HandleConnStatusCB::?relay (battservice)
                                                   BT_ReadAttrCB::?relay (battservice)
                                                   BT_SetParameter::?relay (battservice)
                                                   BT_WriteAttrCB::?relay (battservice)
                                                   Betwine_Init::?relay (betwine)
                                                   Betwine_ProcessEvent::?relay (betwine)
                                                   DevInfo_AddService::?relay (devinfoservice)
                                                   DevInfo_SetParameter::?relay (devinfoservice)
                                                   GAPBondMgr_Init::?relay (gapbondmgr)
                                                   GAPBondMgr_LinkEst::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg::?relay (gapbondmgr)
                                                   GAPBondMgr_Register::?relay (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr::?relay (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd::?relay (gapbondmgr)
                                                   GAPBondMgr_SetParameter::?relay (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg::?relay (gapbondmgr)
                                                   GAPRole_GetParameter::?relay (peripheral)
                                                   GAPRole_Init::?relay (peripheral)
                                                   GAPRole_ProcessEvent::?relay (peripheral)
                                                   GAPRole_SendUpdateParam::?relay (peripheral)
                                                   GAPRole_SetParameter::?relay (peripheral)
                                                   GAPRole_StartDevice::?relay (peripheral)
                                                   GAPRole_TerminateConnection::?relay (peripheral)
                                                   GAP_Authenticate::?relay (gap_linkmgr)
                                                   GAP_Bond::?relay (gap_linkmgr)
                                                   GAP_DeviceInit::?relay (gap)
                                                   GAP_EndDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_GetParamValue::?relay (gap_configmgr)
                                                   GAP_Init::?relay (gap_task)
                                                   GAP_MakeDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_NumActiveConnections::?relay (gap_task)
                                                   GAP_ParamsInit::?relay (gap_configmgr)
                                                   GAP_PasscodeUpdate::?relay (gap_linkmgr)
                                                   GAP_PeriDevMgrInit::?relay (gap_peridevmgr)
                                                   GAP_ProcessEvent::?relay (gap_task)
                                                   GAP_RegisterForHCIMsgs::?relay (gap_task)
                                                   GAP_ResolvePrivateAddr::?relay (gap_devmgr)
                                                   GAP_SecParamsInit::?relay (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest::?relay (gap_perilinkmgr)
                                                   GAP_SetParamValue::?relay (gap_configmgr)
                                                   GAP_Signable::?relay (gap_linkmgr)
                                                   GAP_TerminateAuth::?relay (gap_linkmgr)
                                                   GAP_TerminateLinkReq::?relay (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData::?relay (gap_peridevmgr)
                                                   GATTServApp_AddService::?relay (gattservapp)
                                                   GATTServApp_FindAttr::?relay (gattservapp)
                                                   GATTServApp_Init::?relay (gattservapp)
                                                   GATTServApp_InitCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq::?relay (gattservapp)
                                                   GATTServApp_ProcessCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessEvent::?relay (gattservapp)
                                                   GATTServApp_ReadAttr::?relay (gattservapp)
                                                   GATTServApp_ReadCharCfg::?relay (gattservapp)
                                                   GATTServApp_RegisterForMsg::?relay (gattservapp)
                                                   GATTServApp_RegisterService::?relay (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent::?relay (gattservapp)
                                                   GATTServApp_SendServiceChangedInd::?relay (gattservapp)
                                                   GATTServApp_UpdateCharCfg::?relay (gattservapp)
                                                   GATTServApp_WriteAttr::?relay (gattservapp)
                                                   GATTServApp_WriteCharCfg::?relay (gattservapp)
                                                   GATT_FindHandle::?relay (gatt_server)
                                                   GATT_FindHandleUUID::?relay (gatt_server)
                                                   GATT_FindNextAttr::?relay (gatt_server)
                                                   GATT_Indication::?relay (gatt_server)
                                                   GATT_Init::?relay (gatt_task)
                                                   GATT_InitServer::?relay (gatt_server)
                                                   GATT_Notification::?relay (gatt_server)
                                                   GATT_ProcessEvent::?relay (gatt_task)
                                                   GATT_RegisterForReq::?relay (gatt_server)
                                                   GATT_RegisterService::?relay (gatt_server)
                                                   GATT_ServiceChangedInd::?relay (gatt_server)
                                                   GATT_ServiceNumAttrs::?relay (gatt_server)
                                                   GATT_VerifyReadPermissions::?relay (gatt_server)
                                                   GATT_VerifyWritePermissions::?relay (gatt_server)
                                                   GGS_AddService::?relay (gapgattserver)
                                                   GGS_SetParameter::?relay (gapgattserver)
                                                   HCI_CommandCompleteEvent::?relay (hci_event)
                                                   HCI_CommandStatusEvent::?relay (hci_event)
                                                   HCI_DataBufferOverflowEvent::?relay (hci_event)
                                                   HCI_DisconnectCmd::?relay (hci)
                                                   HCI_EXT_ClkDivOnHaltCmd::?relay (hci)
                                                   HCI_GAPTaskRegister::?relay (hci_tl)
                                                   HCI_Init::?relay (hci_tl)
                                                   HCI_L2CAPTaskRegister::?relay (hci_tl)
                                                   HCI_LE_AddWhiteListCmd::?relay (hci)
                                                   HCI_LE_ClearWhiteListCmd::?relay (hci)
                                                   HCI_LE_LtkReqNegReplyCmd::?relay (hci)
                                                   HCI_LE_LtkReqReplyCmd::?relay (hci)
                                                   HCI_LE_RandCmd::?relay (hci)
                                                   HCI_LE_ReadBufSizeCmd::?relay (hci)
                                                   HCI_LE_SetAdvDataCmd::?relay (hci)
                                                   HCI_LE_SetAdvEnableCmd::?relay (hci)
                                                   HCI_LE_SetAdvParamCmd::?relay (hci)
                                                   HCI_LE_SetRandomAddressCmd::?relay (hci)
                                                   HCI_LE_SetScanRspDataCmd::?relay (hci)
                                                   HCI_NumOfCompletedPacketsEvent::?relay (hci_event)
                                                   HCI_ProcessEvent::?relay (hci_tl)
                                                   HCI_ReadBDADDRCmd::?relay (hci)
                                                   HCI_ReadRssiCmd::?relay (hci)
                                                   HCI_SMPTaskRegister::?relay (hci_tl)
                                                   HCI_SendCommandCompleteEvent::?relay (hci_event)
                                                   HCI_SendCommandStatusEvent::?relay (hci_event)
                                                   HCI_SendControllerToHostEvent::?relay (hci_event)
                                                   HCI_SendDataPkt::?relay (hci)
                                                   HCI_TxDataBufferInsert::?relay (hci_data)
                                                   HCI_TxDataSend::?relay (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent::?relay (hci_event)
                                                   HCI_bm_alloc::?relay (hci)
                                                   HP_AddService::?relay (hitpoint)
                                                   HP_GetParameter::?relay (hitpoint)
                                                   HP_HandleConnStatusCB::?relay (hitpoint)
                                                   HP_ReadAttrCB::?relay (hitpoint)
                                                   HP_SetParameter::?relay (hitpoint)
                                                   HP_WriteAttrCB::?relay (hitpoint)
                                                   HS_AddService::?relay (historystep)
                                                   HS_GetParameter::?relay (historystep)
                                                   HS_ReadAttrCB::?relay (historystep)
                                                   HS_SetParameter::?relay (historystep)
                                                   HS_WriteAttrCB::?relay (historystep)
                                                   HalAccActive::?relay (hal_acc)
                                                   HalAccClearTapIntr::?relay (hal_acc)
                                                   HalAccInit::?relay (hal_acc)
                                                   HalAccReadFifoData::?relay (hal_acc)
                                                   HalAccReset::?relay (hal_acc)
                                                   HalAccStandby::?relay (hal_acc)
                                                   HalAdcInit::?relay (hal_adc)
                                                   HalAdcRead::?relay (hal_adc)
                                                   HalAdcSetReference::?relay (hal_adc)
                                                   HalAesInit::?relay (hal_aes)
                                                   HalDmaInit::?relay (hal_dma)
                                                   HalDriverInit::?relay (hal_drivers)
                                                   HalFlashErase::?relay (hal_flash)
                                                   HalFlashRead::?relay (hal_flash)
                                                   HalFlashWrite::?relay (hal_flash)
                                                   HalI2CDisable::?relay (hal_i2c)
                                                   HalI2CInit::?relay (hal_i2c)
                                                   HalI2CRead::?relay (hal_i2c)
                                                   HalI2CWrite::?relay (hal_i2c)
                                                   HalKeyConfig::?relay (hal_key)
                                                   HalKeyInit::?relay (hal_key)
                                                   HalKeyPoll::?relay (hal_key)
                                                   HalLedBlink::?relay (hal_led)
                                                   HalLedInit::?relay (hal_led)
                                                   HalLedOnOff::?relay (hal_led)
                                                   HalLedSet::?relay (hal_led)
                                                   HalLedUpdate::?relay (hal_led)
                                                   Hal_Init::?relay (hal_drivers)
                                                   Hal_ProcessEvent::?relay (hal_drivers)
                                                   Hal_ProcessPoll::?relay (hal_drivers)
                                                   InitBoard::?relay (OnBoard)
                                                   L2CAP_BuildCmdReject::?relay (l2cap_util)
                                                   L2CAP_CmdReject::?relay (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq::?relay (l2cap_if)
                                                   L2CAP_Init::?relay (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq::?relay (l2cap_util)
                                                   L2CAP_ProcessEvent::?relay (l2cap_task)
                                                   L2CAP_RegisterApp::?relay (l2cap_if)
                                                   L2CAP_SendData::?relay (l2cap_if)
                                                   L2CAP_bm_alloc::?relay (l2cap_util)
                                                   LL_AddWhiteListDevice::?relay (ll)
                                                   LL_ClearWhiteList::?relay (ll)
                                                   LL_ConnActive::?relay (ll)
                                                   LL_ConnParamUpdateCback::?relay (hci_event)
                                                   LL_ConnectionCompleteCback::?relay (hci_event)
                                                   LL_CtrlToHostFlowControl::?relay (ll)
                                                   LL_Disconnect::?relay (ll)
                                                   LL_DisconnectCback::?relay (hci_event)
                                                   LL_ENC_AES128_Encrypt::?relay (ll_enc)
                                                   LL_ENC_Decrypt::?relay (ll_enc)
                                                   LL_ENC_DecryptMsg::?relay (ll_enc)
                                                   LL_ENC_Encrypt::?relay (ll_enc)
                                                   LL_ENC_EncryptMsg::?relay (ll_enc)
                                                   LL_ENC_GenDeviceIV::?relay (ll_enc)
                                                   LL_ENC_GenDeviceSKD::?relay (ll_enc)
                                                   LL_ENC_GenerateMIC::?relay (ll_enc)
                                                   LL_ENC_GeneratePseudoRandNum::?relay (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum::?relay (ll_enc)
                                                   LL_ENC_InitAesDMA::?relay (ll_enc)
                                                   LL_ENC_LoadEmptyIV::?relay (ll_enc)
                                                   LL_ENC_MoveData::?relay (ll_enc)
                                                   LL_ENC_ReverseBytes::?relay (ll_enc)
                                                   LL_EXT_ClkDivOnHalt::?relay (ll)
                                                   LL_EXT_ExtendRfRangeCback::?relay (hci)
                                                   LL_EXT_SetRxGainCback::?relay (hci)
                                                   LL_EXT_SetTxPowerCback::?relay (hci)
                                                   LL_EncChangeCback::?relay (hci_event)
                                                   LL_EncKeyRefreshCback::?relay (hci_event)
                                                   LL_EncLtkNegReply::?relay (ll)
                                                   LL_EncLtkReply::?relay (ll)
                                                   LL_EncLtkReqCback::?relay (hci_event)
                                                   LL_Encrypt::?relay (ll)
                                                   LL_Init::?relay (ll)
                                                   LL_ProcessEvent::?relay (ll)
                                                   LL_PseudoRand::?relay (ll)
                                                   LL_Rand::?relay (ll)
                                                   LL_RandCback::?relay (hci)
                                                   LL_ReadBDADDR::?relay (ll)
                                                   LL_ReadRemoteVersionInfoCback::?relay (hci_event)
                                                   LL_ReadRssi::?relay (ll)
                                                   LL_Reset::?relay (ll)
                                                   LL_RxDataCompleteCback::?relay (hci_data)
                                                   LL_RxReqDataBufCback::?relay (hci_data)
                                                   LL_SetAdvControl::?relay (ll)
                                                   LL_SetAdvData::?relay (ll)
                                                   LL_SetAdvParam::?relay (ll)
                                                   LL_SetRandomAddress::?relay (ll)
                                                   LL_SetScanRspData::?relay (ll)
                                                   LL_TxData::?relay (ll)
                                                   LL_TxDataCompleteCback::?relay (hci_data)
                                                   MR_AddService::?relay (motorrun)
                                                   MR_HandleConnStatusCB::?relay (motorrun)
                                                   MR_ReadAttrCB::?relay (motorrun)
                                                   MR_RegisterAppCBs::?relay (motorrun)
                                                   MR_SetParameter::?relay (motorrun)
                                                   MR_WriteAttrCB::?relay (motorrun)
                                                   OnBoard_KeyCallback::?relay (OnBoard)
                                                   OnBoard_SendKeys::?relay (OnBoard)
                                                   Onboard_rand::?relay (OnBoard)
                                                   PHY_AddWlEntry::?relay (phy)
                                                   PHY_ClearAllRegsAndFifos::?relay (phy)
                                                   PHY_ClearBlacklist::?relay (phy)
                                                   PHY_ClearBlacklistIndex::?relay (phy)
                                                   PHY_ClearSavedWhiteList::?relay (phy)
                                                   PHY_ClearWhitelist::?relay (phy)
                                                   PHY_CommitRxFifo::?relay (phy)
                                                   PHY_ConfigWhitener::?relay (phy)
                                                   PHY_ConfigureAppendRfStatus::?relay (phy)
                                                   PHY_ConfigureFifoDataProcessing::?relay (phy)
                                                   PHY_ConfigureMD::?relay (phy)
                                                   PHY_DeallocateRxFifo::?relay (phy)
                                                   PHY_GetAdvChans::?relay (phy)
                                                   PHY_GetEndCause::?relay (phy)
                                                   PHY_Init::?relay (phy)
                                                   PHY_InitSeqStat::?relay (phy)
                                                   PHY_Reset::?relay (phy)
                                                   PHY_RetryRxFifo::?relay (phy)
                                                   PHY_RetryTxFifo::?relay (phy)
                                                   PHY_SetAdvChans::?relay (phy)
                                                   PHY_SetAdvWlPolicy::?relay (phy)
                                                   PHY_SetBlacklistIndex::?relay (phy)
                                                   PHY_SetCRCInit::?relay (phy)
                                                   PHY_SetEndConnection::?relay (phy)
                                                   PHY_SetFifoConfig::?relay (phy)
                                                   PHY_SetMaxNack::?relay (phy)
                                                   PHY_SetOwnAddr::?relay (phy)
                                                   PHY_SetPeerAddr::?relay (phy)
                                                   PHY_SetRfFreq::?relay (phy)
                                                   PHY_SetSyncWord::?relay (phy)
                                                   PM_AddService::?relay (pedometer)
                                                   PM_GetParameter::?relay (pedometer)
                                                   PM_HandleConnStatusCB::?relay (pedometer)
                                                   PM_ReadAttrCB::?relay (pedometer)
                                                   PM_SetParameter::?relay (pedometer)
                                                   PM_WriteAttrCB::?relay (pedometer)
                                                   RegisterForKeys::?relay (OnBoard)
                                                   SM_CalcRandomAddr::?relay (sm_mgr)
                                                   SM_GenerateAuthenSig::?relay (sm_mgr)
                                                   SM_Init::?relay (sm_task)
                                                   SM_PasskeyUpdate::?relay (sm_pairing)
                                                   SM_ProcessEvent::?relay (sm_task)
                                                   SM_ResolveRandomAddrs::?relay (sm_mgr)
                                                   SM_ResponderInit::?relay (sm_rsppairing)
                                                   SM_StartPairing::?relay (sm_pairing)
                                                   SM_VerifyAuthenSig::?relay (sm_mgr)
                                                   ST_AddService::?relay (systemtest)
                                                   ST_HandleConnStatusCB::?relay (systemtest)
                                                   ST_ReadAttrCB::?relay (systemtest)
                                                   ST_WriteAttrCB::?relay (systemtest)
                                                   TS_AddService::?relay (timeset)
                                                   TS_GetParameter::?relay (timeset)
                                                   TS_ReadAttrCB::?relay (timeset)
                                                   TS_RegisterAppCBs::?relay (timeset)
                                                   TS_SetParameter::?relay (timeset)
                                                   TS_WriteAttrCB::?relay (timeset)
                                                   WC_AddService::?relay (wechatprofile)
                                                   WC_HandleConnStatusCB::?relay (wechatprofile)
                                                   WC_ReadAttrCB::?relay (wechatprofile)
                                                   WC_RegisterAppCBs::?relay (wechatprofile)
                                                   WC_SetParameter::?relay (wechatprofile)
                                                   WC_WriteAttrCB::?relay (wechatprofile)
                                                   attSendMsg::?relay (att_util)
                                                   bm_desc_from_payload::?relay (osal_bufmgr)
                                                   cleanErasedPage::?relay (osal_snv)
                                                   compactPage::?relay (osal_snv)
                                                   devInfo_ReadAttrCB::?relay (devinfoservice)
                                                   disconnectNext::?relay (gap_linkmgr)
                                                   epb_auth_request_pack_size::?relay (epb_MmBp)
                                                   epb_get_bytes::?relay (epb)
                                                   epb_get_enum::?relay (epb)
                                                   epb_get_int32::?relay (epb)
                                                   epb_get_message::?relay (epb)
                                                   epb_get_packed_size::?relay (epb)
                                                   epb_get_string::?relay (epb)
                                                   epb_get_tag_value_offset::?relay (epb)
                                                   epb_get_uint32::?relay (epb)
                                                   epb_get_varint32_bits::?relay (epb)
                                                   epb_has_tag::?relay (epb)
                                                   epb_init_request_pack_size::?relay (epb_MmBp)
                                                   epb_length_delimited_pack_size::?relay (epb)
                                                   epb_mmopen_pack_step_data_item::?relay (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request::?relay (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size::?relay (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size::?relay (epb_WristBand)
                                                   epb_pack_auth_request::?relay (epb_MmBp)
                                                   epb_pack_base_request::?relay (epb_MmBp)
                                                   epb_pack_buf_remain::?relay (epb)
                                                   epb_pack_init::?relay (epb)
                                                   epb_pack_init_request::?relay (epb_MmBp)
                                                   epb_pack_tag::?relay (epb)
                                                   epb_pack_varint32_bits::?relay (epb)
                                                   epb_set_bytes::?relay (epb)
                                                   epb_set_enum::?relay (epb)
                                                   epb_set_int32::?relay (epb)
                                                   epb_set_message::?relay (epb)
                                                   epb_set_string::?relay (epb)
                                                   epb_set_uint32::?relay (epb)
                                                   epb_unpack_auth_response::?relay (epb_MmBp)
                                                   epb_unpack_auth_response_free::?relay (epb_MmBp)
                                                   epb_unpack_base_push::?relay (epb_MmBp)
                                                   epb_unpack_base_response::?relay (epb_MmBp)
                                                   epb_unpack_init::?relay (epb)
                                                   epb_unpack_init_response::?relay (epb_MmBp)
                                                   epb_unpack_init_response_free::?relay (epb_MmBp)
                                                   epb_unpack_recv_data_push::?relay (epb_MmBp)
                                                   epb_unpack_recv_data_push_free::?relay (epb_MmBp)
                                                   epb_unpack_send_data_response::?relay (epb_MmBp)
                                                   epb_unpack_send_data_response_free::?relay (epb_MmBp)
                                                   epb_varint32_pack_size::?relay (epb)
                                                   erasePage::?relay (osal_snv)
                                                   findItem::?relay (osal_snv)
                                                   findOffset::?relay (osal_snv)
                                                   gapAddAddrAdj::?relay (gap_configmgr)
                                                   gapBondMgrAddBond::?relay (gapbondmgr)
                                                   gapBondMgrAuthenticate::?relay (gapbondmgr)
                                                   gapBondMgrBondTotal::?relay (gapbondmgr)
                                                   gapBondMgrChangeState::?relay (gapbondmgr)
                                                   gapBondMgrEraseAllBondings::?relay (gapbondmgr)
                                                   gapBondMgrEraseBonding::?relay (gapbondmgr)
                                                   gapBondMgrFindAddr::?relay (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrGetPublicAddr::?relay (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrReadBonds::?relay (gapbondmgr)
                                                   gapBondMgrSendServiceChange::?relay (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList::?relay (gapbondmgr)
                                                   gapBondSetupPrivFlag::?relay (gapbondmgr)
                                                   gapDetermineAddrType::?relay (gap_configmgr)
                                                   gapFindADType::?relay (gap_devmgr)
                                                   gapFreeAdvertState::?relay (gap_peridevmgr)
                                                   gapFreeAuthLink::?relay (gap_linkmgr)
                                                   gapFreeEstLink::?relay (gap_linkmgr)
                                                   gapGetDevAddress::?relay (gap_configmgr)
                                                   gapGetDevAddressMode::?relay (gap_configmgr)
                                                   gapGetIRK::?relay (gap_configmgr)
                                                   gapGetSRK::?relay (gap_configmgr)
                                                   gapGetSignCounter::?relay (gap_configmgr)
                                                   gapIncSignCounter::?relay (gap_configmgr)
                                                   gapIsAdvertising::?relay (gap_devmgr)
                                                   gapPairingCompleteCB::?relay (gap_linkmgr)
                                                   gapPasskeyNeededCB::?relay (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt::?relay (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt::?relay (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt::?relay (gap_task)
                                                   gapProcessNewAddr::?relay (gap_configmgr)
                                                   gapProcessOSALMsg::?relay (gap_task)
                                                   gapProcessRandomAddrComplete::?relay (gap_configmgr)
                                                   gapReadBD_ADDRStatus::?relay (gap_configmgr)
                                                   gapReadBufSizeCmdStatus::?relay (gap_configmgr)
                                                   gapRegisterPeripheral::?relay (gap_task)
                                                   gapRole_ProcessGAPMsg::?relay (peripheral)
                                                   gapRole_ProcessOSALMsg::?relay (peripheral)
                                                   gapRole_startConnUpdate::?relay (peripheral)
                                                   gapSendBondCompleteEvent::?relay (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent::?relay (gap_configmgr)
                                                   gapSendLinkUpdateEvent::?relay (gap_linkmgr)
                                                   gapSendMakeDiscEvent::?relay (gap_peridevmgr)
                                                   gapSendPairingReqEvent::?relay (gap_linkmgr)
                                                   gapSetAdvParams::?relay (gap_peridevmgr)
                                                   gapSetAdvParamsStatus::?relay (gap_peridevmgr)
                                                   gapUpdateConnSignCounter::?relay (gap_configmgr)
                                                   gapValidADType::?relay (gap_devmgr)
                                                   gapWriteAdvDataStatus::?relay (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus::?relay (gap_peridevmgr)
                                                   gattFindServerInfo::?relay (gatt_server)
                                                   gattGetServerStatus::?relay (gatt_server)
                                                   gattNotifyEvent::?relay (gatt_task)
                                                   gattProcessExchangeMTUReq::?relay (gatt_server)
                                                   gattProcessExecuteWriteReq::?relay (gatt_server)
                                                   gattProcessFindByTypeValueReq::?relay (gatt_server)
                                                   gattProcessFindInfoReq::?relay (gatt_server)
                                                   gattProcessReadByGrpTypeReq::?relay (gatt_server)
                                                   gattProcessReadByTypeReq::?relay (gatt_server)
                                                   gattProcessReadMultiReq::?relay (gatt_server)
                                                   gattProcessReadReq::?relay (gatt_server)
                                                   gattProcessRxData::?relay (gatt_task)
                                                   gattProcessWriteReq::?relay (gatt_server)
                                                   gattRegisterServer::?relay (gatt_task)
                                                   gattServApp_FindAuthorizeAttrCB::?relay (gattservapp)
                                                   gattServApp_FindCharCfgItem::?relay (gattservapp)
                                                   gattServApp_FindPrepareWriteQ::?relay (gattservapp)
                                                   gattServApp_FindServiceCBs::?relay (gattservapp)
                                                   gattServApp_HandleConnStatusCB::?relay (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq::?relay (gattservapp)
                                                   gattServApp_ProcessMsg::?relay (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadMultiReq::?relay (gattservapp)
                                                   gattServApp_ProcessWriteReq::?relay (gattservapp)
                                                   gattServApp_SetNumPrepareWrites::?relay (gattservapp)
                                                   gattServApp_WriteAttrCB::?relay (gattservapp)
                                                   gattServerHandleConnStatusCB::?relay (gatt_server)
                                                   gattServerHandleTimerCB::?relay (gatt_server)
                                                   gattServerProcessMsgCB::?relay (gatt_server)
                                                   gattServiceLastHandle::?relay (gatt_server)
                                                   gattStartTimer::?relay (gatt_task)
                                                   gattStopTimer::?relay (gatt_task)
                                                   generate_subkey::?relay (sm_mgr)
                                                   ggs_ReadAttrCB::?relay (gapgattserver)
                                                   ggs_SetAttrWPermit::?relay (gapgattserver)
                                                   ggs_WriteAttrCB::?relay (gapgattserver)
                                                   halProcessAccInterrupt::?relay (hal_key)
                                                   halProcessChrInterrupt::?relay (hal_key)
                                                   halRestoreSleepLevel::?relay (hal_sleep)
                                                   halSetSleepMode::?relay (hal_sleep)
                                                   halSleep::?relay (hal_sleep)
                                                   halSleepReadTimer::?relay (hal_sleep)
                                                   halSleepSetTimer::?relay (hal_sleep)
                                                   hciInitEventMasks::?relay (hci_event)
                                                   hciTxDataBufferReset::?relay (hci_data)
                                                   initNV::?relay (osal_snv)
                                                   isLimitedDiscoverableMode::?relay (gap_peridevmgr)
                                                   l2capAllocChannel::?relay (l2cap_util)
                                                   l2capBuildParamUpdateReq::?relay (l2cap_util)
                                                   l2capEncapSendData::?relay (l2cap_util)
                                                   l2capFindLocalId::?relay (l2cap_util)
                                                   l2capFreeChannel::?relay (l2cap_util)
                                                   l2capHandleRxError::?relay (l2cap_util)
                                                   l2capHandleTimerCB::?relay (l2cap_util)
                                                   l2capNotifyData::?relay (l2cap_util)
                                                   l2capNotifySignal::?relay (l2cap_util)
                                                   l2capParseCmdReject::?relay (l2cap_util)
                                                   l2capParsePacket::?relay (l2cap_util)
                                                   l2capParseParamUpdateRsp::?relay (l2cap_util)
                                                   l2capParseSignalHdr::?relay (l2cap_util)
                                                   l2capProcessReq::?relay (l2cap_task)
                                                   l2capProcessRsp::?relay (l2cap_task)
                                                   l2capProcessRxData::?relay (l2cap_task)
                                                   l2capProcessSignal::?relay (l2cap_task)
                                                   l2capSendCmd::?relay (l2cap_util)
                                                   l2capSendReq::?relay (l2cap_util)
                                                   l2capStopTimer::?relay (l2cap_util)
                                                   leftshift_onebit::?relay (sm_mgr)
                                                   linkDB_Add::?relay (linkdb)
                                                   linkDB_Authen::?relay (linkdb)
                                                   linkDB_Find::?relay (linkdb)
                                                   linkDB_FindFirst::?relay (linkdb)
                                                   linkDB_Init::?relay (linkdb)
                                                   linkDB_NumActive::?relay (linkdb)
                                                   linkDB_PerformFunc::?relay (linkdb)
                                                   linkDB_Register::?relay (linkdb)
                                                   linkDB_Remove::?relay (linkdb)
                                                   linkDB_State::?relay (linkdb)
                                                   llAdjustForMissedEvent::?relay (ll_common)
                                                   llAdvEvt_TaskAbort::?relay (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect::?relay (ll_advEndCauses)
                                                   llAllocConnId::?relay (ll_common)
                                                   llAllocTask::?relay (ll_scheduler)
                                                   llCheckWhiteListUsage::?relay (ll_common)
                                                   llClearSetInts::?relay (ll_common)
                                                   llConnCleanup::?relay (ll_common)
                                                   llConnTerminate::?relay (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent::?relay (ll_common)
                                                   llConvertLstoToEvent::?relay (ll_common)
                                                   llDequeueCtrlPkt::?relay (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llDisableT2E1::?relay (ll_timer2)
                                                   llDisableT2Ints::?relay (ll_timer2)
                                                   llDisableT2IntsEvts::?relay (ll_timer2)
                                                   llDiscoverableAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llEnqueueCtrlPkt::?relay (ll_common)
                                                   llExtendRfRange::?relay (ll_common)
                                                   llFindNextSecTask::?relay (ll_scheduler)
                                                   llFindTxPowerSettings::?relay (ll_common)
                                                   llFreeTask::?relay (ll_scheduler)
                                                   llGetActiveTasks::?relay (ll_scheduler)
                                                   llGetCurrentTask::?relay (ll_scheduler)
                                                   llGetCurrentTime::?relay (ll_timer2)
                                                   llGetFullCTandST::?relay (ll_timer2)
                                                   llGetNextConn::?relay (ll_common)
                                                   llGetNumTasks::?relay (ll_scheduler)
                                                   llGetTaskState::?relay (ll_scheduler)
                                                   llGetTimer2Capture::?relay (ll_timer2)
                                                   llInitFeatureSet::?relay (ll_common)
                                                   llInitTimer2::?relay (ll_timer2)
                                                   llMemCopySrc::?relay (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llProcessChanMap::?relay (ll_common)
                                                   llProcessPendingTxData::?relay (ll_common)
                                                   llProcessPostRfOps::?relay (ll_common)
                                                   llProcessSlaveControlProcedures::?relay (ll_slaveEndCauses)
                                                   llReleaseAllConnId::?relay (ll_common)
                                                   llReplaceCtrlPkt::?relay (ll_common)
                                                   llRestoreConnState::?relay (ll_scheduler)
                                                   llRfInit::?relay (ll_common)
                                                   llSave_rxFIFO::?relay (ll_scheduler)
                                                   llSave_txFIFO::?relay (ll_scheduler)
                                                   llScheduleTask::?relay (ll_scheduler)
                                                   llScheduler::?relay (ll_scheduler)
                                                   llSchedulerInit::?relay (ll_scheduler)
                                                   llSetFreqTune::?relay (ll_common)
                                                   llSetT2C1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Timeout::?relay (ll_timer2)
                                                   llSetT2OVFC2Event2::?relay (ll_timer2)
                                                   llSetupAdv::?relay (ll_common)
                                                   llSetupDirectedAdvEvt::?relay (ll_common)
                                                   llSetupEncRsp::?relay (ll_common)
                                                   llSetupFeatureSetRsp::?relay (ll_common)
                                                   llSetupNextSlaveEvent::?relay (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt::?relay (ll_common)
                                                   llSetupPauseEncRsp::?relay (ll_common)
                                                   llSetupRejectInd::?relay (ll_common)
                                                   llSetupScannableAdvEvt::?relay (ll_common)
                                                   llSetupStartEncReq::?relay (ll_common)
                                                   llSetupStartEncRsp::?relay (ll_common)
                                                   llSetupTermInd::?relay (ll_common)
                                                   llSetupUndirectedAdvEvt::?relay (ll_common)
                                                   llSetupUnknownRsp::?relay (ll_common)
                                                   llSetupVersionIndReq::?relay (ll_common)
                                                   llSlaveEvt_TaskAbort::?relay (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk::?relay (ll_slaveEndCauses)
                                                   llStartAdvSetup::?relay (ll_common)
                                                   llStartSlaveSetup::?relay (ll_common)
                                                   llStartTimer2::?relay (ll_timer2)
                                                   llStopTimer2::?relay (ll_timer2)
                                                   llUndirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llUnexpectedEndCauseHandler::?relay (ll_errorEndCauses)
                                                   llWriteTxData::?relay (ll_common)
                                                   ll_McuPrecisionCount::?relay (ll_timer2)
                                                   memcpy::?relay (?memcpy)
                                                   memset::?relay (?memset)
                                                   motorrunChangeCB::?relay (betwine)
                                                   osalAddTimer::?relay (OSAL_Timers)
                                                   osalDeleteTimer::?relay (OSAL_Timers)
                                                   osalFindTimer::?relay (OSAL_Timers)
                                                   osalInitTasks::?relay (OSAL_betwine)
                                                   osalTimeUpdate::?relay (OSAL_ClockBLE)
                                                   osalTimerInit::?relay (OSAL_Timers)
                                                   osalTimerUpdate::?relay (OSAL_Timers)
                                                   osal_CbTimerInit::?relay (osal_cbtimer)
                                                   osal_CbTimerProcessEvent::?relay (osal_cbtimer)
                                                   osal_CbTimerStart::?relay (osal_cbtimer)
                                                   osal_CbTimerStop::?relay (osal_cbtimer)
                                                   osal_GetSystemClock::?relay (OSAL_Timers)
                                                   osal_bm_adjust_header::?relay (osal_bufmgr)
                                                   osal_bm_alloc::?relay (osal_bufmgr)
                                                   osal_bm_free::?relay (osal_bufmgr)
                                                   osal_clear_event::?relay (OSAL)
                                                   osal_get_timeoutEx::?relay (OSAL_Timers)
                                                   osal_init_system::?relay (OSAL)
                                                   osal_int_disable::?relay (OSAL)
                                                   osal_isbufset::?relay (OSAL)
                                                   osal_mem_alloc::?relay (OSAL_Memory)
                                                   osal_mem_free::?relay (OSAL_Memory)
                                                   osal_mem_init::?relay (OSAL_Memory)
                                                   osal_mem_kick::?relay (OSAL_Memory)
                                                   osal_memcmp::?relay (OSAL)
                                                   osal_memcpy::?relay (OSAL)
                                                   osal_memdup::?relay (OSAL)
                                                   osal_memset::?relay (OSAL)
                                                   osal_msg_allocate::?relay (OSAL)
                                                   osal_msg_deallocate::?relay (OSAL)
                                                   osal_msg_enqueue::?relay (OSAL)
                                                   osal_msg_enqueue_push::?relay (OSAL)
                                                   osal_msg_extract::?relay (OSAL)
                                                   osal_msg_push::?relay (OSAL)
                                                   osal_msg_receive::?relay (OSAL)
                                                   osal_msg_send::?relay (OSAL)
                                                   osal_next_timeout::?relay (OSAL_Timers)
                                                   osal_pwrmgr_device::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_init::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_powerconserve::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state::?relay (OSAL_PwrMgr)
                                                   osal_rand::?relay (OSAL)
                                                   osal_revmemcpy::?relay (OSAL)
                                                   osal_run_system::?relay (OSAL)
                                                   osal_set_event::?relay (OSAL)
                                                   osal_snv_compact::?relay (osal_snv)
                                                   osal_snv_init::?relay (osal_snv)
                                                   osal_snv_read::?relay (osal_snv)
                                                   osal_snv_write::?relay (osal_snv)
                                                   osal_start_reload_timer::?relay (OSAL_Timers)
                                                   osal_start_system::?relay (OSAL)
                                                   osal_start_timerEx::?relay (OSAL_Timers)
                                                   osal_stop_timerEx::?relay (OSAL_Timers)
                                                   osal_strlen::?relay (OSAL)
                                                   peripheralStateNotificationCB::?relay (betwine)
                                                   phyFindWlEntry::?relay (phy)
                                                   reportStatusChange::?relay (linkdb)
                                                   sendAuthEvent::?relay (gap_linkmgr)
                                                   sendEstLinkEvent::?relay (gap_linkmgr)
                                                   sendTerminateEvent::?relay (gap_linkmgr)
                                                   setActivePage::?relay (osal_snv)
                                                   setXferPage::?relay (osal_snv)
                                                   sizeof_tag::?relay (epb)
                                                   smAuthReqToUint8::?relay (sm_mgr)
                                                   smDetermineKeySize::?relay (sm_pairing)
                                                   smEncrypt::?relay (sm_mgr)
                                                   smEndPairing::?relay (sm_pairing)
                                                   smFreePairingParams::?relay (sm_pairing)
                                                   smGenerateConfirm::?relay (sm_pairing)
                                                   smGeneratePairingReqRsp::?relay (sm_pairing)
                                                   smGenerateRandBuf::?relay (sm_mgr)
                                                   smGenerateRandMsg::?relay (sm_pairing)
                                                   smLinkCheck::?relay (sm_pairing)
                                                   smNextPairingState::?relay (sm_pairing)
                                                   smPairingSendEncInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityAddrInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityInfo::?relay (sm_pairing)
                                                   smPairingSendMasterID::?relay (sm_pairing)
                                                   smPairingSendSingingInfo::?relay (sm_pairing)
                                                   smProcessDataMsg::?relay (sm_pairing)
                                                   smProcessEncryptChange::?relay (sm_pairing)
                                                   smProcessOSALMsg::?relay (sm_task)
                                                   smProcessPairingReq::?relay (sm_pairing)
                                                   smProcessRandComplete::?relay (sm_mgr)
                                                   smRegisterResponder::?relay (sm_pairing)
                                                   smResponderProcessLTKReq::?relay (sm_rsppairing)
                                                   smResponderSendNextKeyInfo::?relay (sm_rsppairing)
                                                   smSavePairInfo::?relay (sm_pairing)
                                                   smSendFailAndEnd::?relay (sm_pairing)
                                                   smSendSMMsg::?relay (smp)
                                                   smSetPairingReqRsp::?relay (sm_pairing)
                                                   smStartEncryption::?relay (sm_pairing)
                                                   smStartRspTimer::?relay (sm_mgr)
                                                   smStopRspTimer::?relay (sm_mgr)
                                                   smTimedOut::?relay (sm_pairing)
                                                   smUint8ToAuthReq::?relay (sm_mgr)
                                                   sm_CMAC::?relay (sm_mgr)
                                                   sm_ah::?relay (sm_mgr)
                                                   sm_c1::?relay (sm_pairing)
                                                   sm_c1new::?relay (sm_mgr)
                                                   sm_s1::?relay (sm_mgr)
                                                   sm_xor::?relay (sm_mgr)
                                                   smpBuildEncInfo::?relay (smp)
                                                   smpBuildIdentityAddrInfo::?relay (smp)
                                                   smpBuildIdentityInfo::?relay (smp)
                                                   smpBuildMasterID::?relay (smp)
                                                   smpBuildPairingConfirm::?relay (smp)
                                                   smpBuildPairingFailed::?relay (smp)
                                                   smpBuildPairingRandom::?relay (smp)
                                                   smpBuildPairingReq::?relay (smp)
                                                   smpBuildPairingReqRsp::?relay (smp)
                                                   smpBuildPairingRsp::?relay (smp)
                                                   smpBuildSecurityReq::?relay (smp)
                                                   smpBuildSigningInfo::?relay (smp)
                                                   smpParseEncInfo::?relay (smp)
                                                   smpParseIdentityAddrInfo::?relay (smp)
                                                   smpParseIdentityInfo::?relay (smp)
                                                   smpParseMasterID::?relay (smp)
                                                   smpParsePairingConfirm::?relay (smp)
                                                   smpParsePairingFailed::?relay (smp)
                                                   smpParsePairingRandom::?relay (smp)
                                                   smpParsePairingReq::?relay (smp)
                                                   smpParseSecurityReq::?relay (smp)
                                                   smpParseSigningInfo::?relay (smp)
                                                   smpResponderProcessIncoming::?relay (sm_rsppairing)
                                                   smpResponderProcessMasterID::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingRandom::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingReq::?relay (sm_rsppairing)
                                                   strlen::?relay (?strlen)
                                                   systemStandby::?relay (betwine)
                                                   timesetChangeCB::?relay (betwine)
                                                   verifyWordM::?relay (osal_snv)
                                                   wechatAuthReqDataFree::?relay (betwine)
                                                   wechatAuthReqDataInit::?relay (betwine)
                                                   wechatChangeCB::?relay (betwine)
                                                   wechatDataDecode::?relay (betwine)
                                                   wechatInitReqDataFree::?relay (betwine)
                                                   wechatInitReqDataInit::?relay (betwine)
                                                   wechatSendData::?relay (betwine)
                                                   wechatSendReqDataFree::?relay (betwine)
                                                   wechatSendReqDataInit::?relay (betwine)
                                                   writeItem::?relay (osal_snv)
                                                   writeWord::?relay (osal_snv)
                                                   xor_128::?relay (sm_mgr)
    -------------------------------------------------------------------------
CSTART
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_30               
           ?BRET_30                
           ?BDISPATCH_30           
    -------------------------------------------------------------------------
CSTART
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_03               
           ?BRET_03                
           ?BDISPATCH_03           
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_07               
           ?BRET_07                
           ?BDISPATCH_07           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_REW               
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003613 - 00003627 (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ                   00003613        epb_get_tag_value_offset (epb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003628 - 0000363C (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 00003628        SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_C_REW             
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_C                 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000363D - 0000364C (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  0000363D        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000364D - 0000365C (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                0000364D        HalLedUpdate (hal_led)
                                                   halSleep (hal_sleep)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000365D - 0000367B (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                0000365D        AppHitpointUpdate (app)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   halSleep (hal_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000367C - 0000367E (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  0000367C        HalLedUpdate (hal_led)
                                                   LL_TxData (ll)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000367F - 000036FB (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              0000367F 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000036FC - 0000376A (0x6f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             000036FC        HalLedUpdate (hal_led)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000376B - 0000376F (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_SHR                 0000376B        wechatDataDecode (betwine)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003770 - 00003784 (0x15 bytes), align: 0
  Segment part 2.             Intra module refs:   ?SL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003785 - 00003789 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 00003785        AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   LL_TxData (ll)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_varint32_pack_size (epb)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000378A - 0000379D (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000379E - 000037A3 (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  0000379E        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_varint32_pack_size (epb)
                                                   halSleep (hal_sleep)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037A4 - 000037A8 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              000037A4 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037A9 - 000037BC (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037BD - 000037CF (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  000037BD        LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037D0 - 000037E2 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                000037D0        HalLedUpdate (hal_led)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   halSleepSetTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037E3 - 000037F5 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             000037E3        AppAccDataReadyHandler (app)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   gapIncSignCounter (gap_configmgr)
                                                   halSleepSetTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000037F6 - 00003809 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  000037F6        LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000380A - 00003821 (0x18 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_X                0000380A        AppHitpointUpdate (app)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003822 - 00003835 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           00003822        llAdjustTimeBackward (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003836 - 00003848 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                00003836        LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   epb_get_varint32_bits (epb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003849 - 0000385B (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             00003849        Segment part 94 (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000385C - 0000386E (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR                  0000385C        epb_get_tag_value_offset (epb)
                                                   epb_get_varint32_bits (epb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_X_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_X                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_XOR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_XOR_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000386F - 00003881 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_XOR                  0000386F        epb_varint32_pack_size (epb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003882 - 00003890 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00003882        AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   HalLedUpdate (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_Init (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 94 (ll_timer2)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_varint32_pack_size (epb)
                                                   findOffset (osal_snv)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   wechatDataDecode (betwine)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003891 - 0000389F (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00003891        GAPBondMgr_SetParameter (gapbondmgr)
                                                   HalLedUpdate (hal_led)
                                                   LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   epb_get_varint32_bits (epb)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_start_reload_timer (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038A0 - 000038AB (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            000038A0        AppAccDataReadyHandler (app)
                                                   Betwine_Init (betwine)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_Reset (ll)
                                                   LL_TxData (ll)
                                                   Segment part 34 (ll_timer2)
                                                   epb_get_uint32 (epb)
                                                   gapGetSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038AC - 000038B7 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           000038AC        GAP_Signable (gap_linkmgr)
                                                   HalLedUpdate (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R0123

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038B8 - 000038C3 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R0123            000038B8        AppHitpointUpdate (app)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   halSleep (hal_sleep)
                                                   initNV (osal_snv)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   wechatDataDecode (betwine)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R0123

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038C4 - 000038CF (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R0123           000038C4        AppHitpointUpdate (app)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedBlink (hal_led)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038D0 - 000038DC (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   000038D0        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038DD - 000038FD (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   000038DD        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   AppHitpointUpdate (app)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GGS_SetParameter (gapgattserver)
                                                   epb_pack_varint32_bits (epb)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendReqDataInit (betwine)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000038FE - 0000393E (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              00003937        HCI_TxDataBufferInsert (hci_data)
                                                   hciTxDataBufferReset (hci_data)
                                                   osal_snv_write (osal_snv)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000393F - 00003997 (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             0000393F        LL_TimeToNextRfEvent (ll_sleep)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003998 - 0000399A (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00003998        HalAdcRead (hal_adc)
                                                   llProcessChanMap (ll_common)
                                                   phyFindWlEntry (phy)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000399B - 000039A7 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000039A8 - 000039AA (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 000039A8        AppAccDataReadyHandler (app)
                                                   HalFlashWrite (hal_flash)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000039AB - 000039B6 (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000039B7 - 000039B9 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  000039B7        ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   HalFlashRead (hal_flash)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   hciTxDataBufferReset (hci_data)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_snv_write (osal_snv)
                                                   phyFindWlEntry (phy)
                                                   smSavePairInfo (sm_pairing)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   smpParsePairingReq (smp)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000039BA - 000039BC (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              000039BA 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000039BD - 000039C9 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000039CA - 000039DF (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          000039CA        ATT_CompareUUID (att_util)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   AppHpReminds (app)
                                                   AppInit (app)
                                                   AppTimeUpdate (app)
                                                   Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_EXT_ClkDivOnHaltCmd (hci)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_ClearWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HalAccActive (hal_acc)
                                                   HalAccClearTapIntr (hal_acc)
                                                   HalAccInit (hal_acc)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAccReset (hal_acc)
                                                   HalAccStandby (hal_acc)
                                                   HalLedUpdate (hal_led)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llProcessPostRfOps (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (betwine)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   systemStandby (betwine)
                                                   verifyWordM (osal_snv)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000039E0 - 000039FA (0x1b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        000039E0        ?Subroutine0 (betwine)
                                                   ?Subroutine0 (epb_WristBand)
                                                   ?Subroutine1 (app)
                                                   ?Subroutine1 (betwine)
                                                   ?Subroutine1 (epb)
                                                   ?Subroutine1 (gapbondmgr)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine1 (peripheral)
                                                   ?Subroutine2 (app)
                                                   ?Subroutine2 (epb_MmBp)
                                                   ?Subroutine2 (gapbondmgr)
                                                   ?Subroutine2 (osal_snv)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppInit (app)
                                                   BT_AddService (battservice)
                                                   BT_SetParameter (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HP_AddService (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HS_SetParameter (historystep)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalLedUpdate (hal_led)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   MR_AddService (motorrun)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   Onboard_rand (OnBoard)
                                                   PM_AddService (pedometer)
                                                   PM_GetParameter (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ST_AddService (systemtest)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 10 (hal_acc)
                                                   Segment part 104 (gattservapp)
                                                   Segment part 127 (hci)
                                                   Segment part 134 (hci)
                                                   Segment part 177 (gattservapp)
                                                   Segment part 19 (sm_mgr)
                                                   Segment part 20 (l2cap_if)
                                                   Segment part 23 (epb)
                                                   Segment part 23 (osal_snv)
                                                   Segment part 35 (att_server)
                                                   Segment part 35 (gapbondmgr)
                                                   Segment part 35 (sm_pairing)
                                                   Segment part 36 (ll_timer2)
                                                   Segment part 41 (epb)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 50 (sm_mgr)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (ll_common)
                                                   Segment part 56 (sm_mgr)
                                                   Segment part 58 (att_util)
                                                   Segment part 61 (epb_MmBp)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 67 (att_util)
                                                   Segment part 79 (gatt_server)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 89 (sm_pairing)
                                                   Segment part 98 (att_util)
                                                   Segment part 98 (hci)
                                                   Segment part 99 (epb)
                                                   TS_AddService (timeset)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_has_tag (epb)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   systemStandby (betwine)
                                                   verifyWordM (osal_snv)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000039FB - 00003A15 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     000039FB        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003A16 - 00003A1F (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00003A16        ?Subroutine0 (epb)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   AppTimeUpdate (app)
                                                   BT_ReadAttrCB (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_EXT_ClkDivOnHaltCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HP_ReadAttrCB (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_ReadAttrCB (historystep)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalLedUpdate (hal_led)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 34 (ll_timer2)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 88 (sm_pairing)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_WriteAttrCB (timeset)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_varint32_pack_size (epb)
                                                   findItem (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llWriteTxData (ll_common)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_revmemcpy (OSAL)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (betwine)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   systemStandby (betwine)
                                                   verifyWordM (osal_snv)
                                                   wechatDataDecode (betwine)
                                                   writeItem (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8_RP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003A20 - 00003A27 (0x8 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP100_8       00003A20        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_unpack_init_response (epb_MmBp)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003A28 - 00003A2F (0x8 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP101_8       00003A28        AppAccDataReadyHandler (app)
                                                   AppHistoryUpdate (app)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   halSleep (hal_sleep)
                                                   verifyWordM (osal_snv)
                                                   wechatSendData (betwine)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003A30 - 00003A37 (0x8 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP102_8       00003A30        AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   epb_pack_varint32_bits (epb)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   initNV (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   peripheralStateNotificationCB (betwine)
                                                   systemStandby (betwine)
                                                   verifyWordM (osal_snv)
                                                   wechatDataDecode (betwine)
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP103_8       

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003A38 - 00003A39 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00003A38        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   HalKeyPoll (hal_key)
                                                   LL_ProcessEvent (ll)
                                                   MR_WriteAttrCB (motorrun)
                                                   ST_WriteAttrCB (systemtest)
                                                   TS_WriteAttrCB (timeset)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   l2capSendCmd (l2cap_util)
                                                   linkDB_PerformFunc (linkdb)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_run_system (OSAL)
                                                   reportStatusChange (linkdb)
                                                   smNextPairingState (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003A3A - 00003AA5 (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00003A3A        ?Subroutine3 (epb_MmBp)
                                                   ATT_BuildErrorRsp (att_util)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   AppHistoryUpdate (app)
                                                   AppHitpointUpdate (app)
                                                   AppInit (app)
                                                   AppMotorRun (app)
                                                   BT_AddService (battservice)
                                                   BT_HandleConnStatusCB (battservice)
                                                   BT_ReadAttrCB (battservice)
                                                   BT_SetParameter (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   Betwine_Init (betwine)
                                                   Betwine_ProcessEvent (betwine)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_Init (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_Init (gap_task)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_FindAttr (gattservapp)
                                                   GATTServApp_Init (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_ReadCharCfg (gattservapp)
                                                   GATTServApp_RegisterService (gattservapp)
                                                   GATTServApp_SendCCCUpdatedEvent (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATTServApp_WriteCharCfg (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Init (gatt_task)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_DataBufferOverflowEvent (hci_event)
                                                   HCI_DisconnectCmd (hci)
                                                   HCI_EXT_ClkDivOnHaltCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HP_AddService (hitpoint)
                                                   HP_HandleConnStatusCB (hitpoint)
                                                   HP_ReadAttrCB (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HS_SetParameter (historystep)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   L2CAP_bm_alloc (l2cap_util)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_Disconnect (ll)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TxData (ll)
                                                   MR_AddService (motorrun)
                                                   MR_HandleConnStatusCB (motorrun)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   PHY_SetCRCInit (phy)
                                                   PHY_SetSyncWord (phy)
                                                   PM_AddService (pedometer)
                                                   PM_GetParameter (pedometer)
                                                   PM_HandleConnStatusCB (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_Init (sm_task)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ST_AddService (systemtest)
                                                   ST_HandleConnStatusCB (systemtest)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 67 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 98 (att_util)
                                                   TS_AddService (timeset)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   TS_WriteAttrCB (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_HandleConnStatusCB (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_get_bytes (epb)
                                                   epb_get_enum (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_get_varint32_bits (epb)
                                                   epb_has_tag (epb)
                                                   epb_init_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_tag (epb)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_set_enum (epb)
                                                   epb_set_uint32 (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   epb_varint32_pack_size (epb)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseAllBondings (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapReadBufSizeCmdStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessReadReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_FindAuthorizeAttrCB (gattservapp)
                                                   gattServApp_FindCharCfgItem (gattservapp)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattServiceLastHandle (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   gattStopTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hciTxDataBufferReset (hci_data)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capBuildParamUpdateReq (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capParseSignalHdr (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   l2capStopTimer (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   linkDB_State (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llConnCleanup (ll_common)
                                                   llConnTerminate (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   motorrunChangeCB (betwine)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   peripheralStateNotificationCB (betwine)
                                                   phyFindWlEntry (phy)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smLinkCheck (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   sm_xor (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003AA6 - 00003B0B (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00003AA6        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003B0C - 00003B51 (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00003B0C        ?Subroutine0 (OnBoard)
                                                   ?Subroutine0 (app)
                                                   ?Subroutine0 (battservice)
                                                   ?Subroutine0 (devinfoservice)
                                                   ?Subroutine0 (epb_WristBand)
                                                   ?Subroutine0 (historystep)
                                                   ?Subroutine0 (hitpoint)
                                                   ?Subroutine0 (motorrun)
                                                   ?Subroutine0 (osal_bufmgr)
                                                   ?Subroutine0 (osal_cbtimer)
                                                   ?Subroutine0 (pedometer)
                                                   ?Subroutine0 (peripheral)
                                                   ?Subroutine0 (systemtest)
                                                   ?Subroutine0 (timeset)
                                                   ?Subroutine1 (OSAL_Timers)
                                                   ?Subroutine1 (battservice)
                                                   ?Subroutine1 (betwine)
                                                   ?Subroutine1 (gapbondmgr)
                                                   ?Subroutine1 (historystep)
                                                   ?Subroutine1 (hitpoint)
                                                   ?Subroutine1 (osal_snv)
                                                   ?Subroutine2 (OSAL)
                                                   ?Subroutine2 (OSAL_Timers)
                                                   ?Subroutine2 (app)
                                                   ?Subroutine2 (epb)
                                                   ?Subroutine3 (OSAL_Timers)
                                                   ?Subroutine3 (betwine)
                                                   ?Subroutine3 (epb_MmBp)
                                                   ?Subroutine4 (OSAL)
                                                   ?Subroutine4 (epb_MmBp)
                                                   ?Subroutine4 (gapbondmgr)
                                                   AppAccDataReadyHandler (app)
                                                   AppBatteryUpdate (app)
                                                   BT_HandleConnStatusCB (battservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   GAP_Init (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HP_HandleConnStatusCB (hitpoint)
                                                   HalAccReadFifoData (hal_acc)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalI2CRead (hal_i2c)
                                                   HalKeyConfig (hal_key)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TxData (ll)
                                                   MR_AddService (motorrun)
                                                   MR_HandleConnStatusCB (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PM_AddService (pedometer)
                                                   PM_HandleConnStatusCB (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   SM_Init (sm_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_StartPairing (sm_pairing)
                                                   ST_AddService (systemtest)
                                                   ST_HandleConnStatusCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 100 (epb)
                                                   Segment part 105 (gattservapp)
                                                   Segment part 11 (sm_mgr)
                                                   Segment part 114 (ll)
                                                   Segment part 116 (ll_common)
                                                   Segment part 120 (gattservapp)
                                                   Segment part 121 (ll_common)
                                                   Segment part 127 (ll)
                                                   Segment part 13 (hci_event)
                                                   Segment part 13 (l2cap_task)
                                                   Segment part 130 (ll)
                                                   Segment part 135 (hci)
                                                   Segment part 14 (sm_rsppairing)
                                                   Segment part 16 (gap_linkmgr)
                                                   Segment part 16 (gatt_task)
                                                   Segment part 16 (hci_event)
                                                   Segment part 16 (l2cap_util)
                                                   Segment part 162 (gattservapp)
                                                   Segment part 168 (gattservapp)
                                                   Segment part 175 (att_util)
                                                   Segment part 177 (gattservapp)
                                                   Segment part 18 (epb)
                                                   Segment part 19 (gatt_task)
                                                   Segment part 20 (gap_task)
                                                   Segment part 20 (sm_mgr)
                                                   Segment part 21 (l2cap_if)
                                                   Segment part 22 (l2cap_util)
                                                   Segment part 220 (phy)
                                                   Segment part 23 (OSAL_ClockBLE)
                                                   Segment part 23 (ll_advEndCauses)
                                                   Segment part 24 (osal_snv)
                                                   Segment part 25 (gap_configmgr)
                                                   Segment part 26 (att_util)
                                                   Segment part 26 (gatt_server)
                                                   Segment part 26 (linkdb)
                                                   Segment part 28 (hci_data)
                                                   Segment part 28 (ll_scheduler)
                                                   Segment part 30 (sm_pairing)
                                                   Segment part 31 (gatt_server)
                                                   Segment part 31 (sm_rsppairing)
                                                   Segment part 34 (gap_configmgr)
                                                   Segment part 34 (gap_peridevmgr)
                                                   Segment part 34 (wechatprofile)
                                                   Segment part 35 (gap_linkmgr)
                                                   Segment part 36 (att_server)
                                                   Segment part 36 (gapbondmgr)
                                                   Segment part 36 (ll_enc)
                                                   Segment part 36 (ll_scheduler)
                                                   Segment part 36 (sm_pairing)
                                                   Segment part 37 (gapgattserver)
                                                   Segment part 38 (hci_event)
                                                   Segment part 42 (epb)
                                                   Segment part 43 (phy)
                                                   Segment part 46 (gattservapp)
                                                   Segment part 46 (smp)
                                                   Segment part 47 (gap_configmgr)
                                                   Segment part 47 (gap_linkmgr)
                                                   Segment part 47 (gapgattserver)
                                                   Segment part 49 (osal_snv)
                                                   Segment part 51 (sm_mgr)
                                                   Segment part 53 (att_util)
                                                   Segment part 53 (gap_linkmgr)
                                                   Segment part 53 (gap_peridevmgr)
                                                   Segment part 55 (epb_MmBp)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (sm_mgr)
                                                   Segment part 57 (peripheral)
                                                   Segment part 59 (att_util)
                                                   Segment part 61 (epb_MmBp)
                                                   Segment part 61 (gap_peridevmgr)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 62 (hci_event)
                                                   Segment part 62 (l2cap_util)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 64 (OSAL)
                                                   Segment part 65 (l2cap_util)
                                                   Segment part 66 (gap_linkmgr)
                                                   Segment part 68 (gapbondmgr)
                                                   Segment part 68 (gatt_server)
                                                   Segment part 68 (ll_common)
                                                   Segment part 71 (sm_mgr)
                                                   Segment part 73 (ll_common)
                                                   Segment part 74 (betwine)
                                                   Segment part 79 (phy)
                                                   Segment part 80 (gatt_server)
                                                   Segment part 81 (l2cap_util)
                                                   Segment part 86 (att_util)
                                                   Segment part 9 (att_util)
                                                   Segment part 90 (sm_pairing)
                                                   Segment part 93 (gattservapp)
                                                   Segment part 98 (hci)
                                                   Segment part 98 (hci_event)
                                                   TS_AddService (timeset)
                                                   TS_WriteAttrCB (timeset)
                                                   WC_HandleConnStatusCB (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   disconnectNext (gap_linkmgr)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_mmopen_wristband_request_pack_size (epb_WristBand)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hciTxDataBufferReset (hci_data)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerInit (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   smProcessOSALMsg (sm_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_c1 (sm_pairing)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpParsePairingReq (smp)
                                                   verifyWordM (osal_snv)
                                                   wechatSendReqDataInit (betwine)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003B52 - 00003B91 (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       00003B52        LL_TimeToNextRfEvent (ll_sleep)
                                                   Segment part 171 (ll_common)
                                                   Segment part 23 (ll_sleep)
                                                   Segment part 90 (ll_timer2)
                                                   Segment part 94 (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003B92 - 00003BF0 (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00003B92        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003BF1 - 00003C48 (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00003BF1        ?Subroutine1 (hal_key)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003C49 - 00003C4C (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00003C49        ?Subroutine4 (epb)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalLedUpdate (hal_led)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_length_delimited_pack_size (epb)
                                                   epb_set_bytes (epb)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C4D - 00003C50 (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00003C4D        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   BT_AddService (battservice)
                                                   BT_SetParameter (battservice)
                                                   BT_WriteAttrCB (battservice)
                                                   DevInfo_AddService (devinfoservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_AddService (gattservapp)
                                                   GATTServApp_ProcessCCCWriteReq (gattservapp)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_AddService (gapgattserver)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HP_AddService (hitpoint)
                                                   HP_SetParameter (hitpoint)
                                                   HP_WriteAttrCB (hitpoint)
                                                   HS_AddService (historystep)
                                                   HS_GetParameter (historystep)
                                                   HS_ReadAttrCB (historystep)
                                                   HS_SetParameter (historystep)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   MR_AddService (motorrun)
                                                   MR_ReadAttrCB (motorrun)
                                                   MR_SetParameter (motorrun)
                                                   MR_WriteAttrCB (motorrun)
                                                   PM_AddService (pedometer)
                                                   PM_GetParameter (pedometer)
                                                   PM_ReadAttrCB (pedometer)
                                                   PM_SetParameter (pedometer)
                                                   PM_WriteAttrCB (pedometer)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ST_AddService (systemtest)
                                                   ST_ReadAttrCB (systemtest)
                                                   ST_WriteAttrCB (systemtest)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 67 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 84 (att_util)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 98 (att_util)
                                                   TS_AddService (timeset)
                                                   TS_GetParameter (timeset)
                                                   TS_ReadAttrCB (timeset)
                                                   TS_SetParameter (timeset)
                                                   WC_AddService (wechatprofile)
                                                   WC_ReadAttrCB (wechatprofile)
                                                   WC_SetParameter (wechatprofile)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   epb_get_bytes (epb)
                                                   epb_get_tag_value_offset (epb)
                                                   epb_get_uint32 (epb)
                                                   epb_has_tag (epb)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)
                                                   epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_init_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_WriteAttrCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatChangeCB (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendData (betwine)
                                                   wechatSendReqDataInit (betwine)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C51 - 00003C52 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      00003C51        ATT_ParsePacket (att_util)
                                                   BT_SetParameter (battservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HP_SetParameter (hitpoint)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   MR_SetParameter (motorrun)
                                                   PM_SetParameter (pedometer)
                                                   WC_SetParameter (wechatprofile)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llProcessPendingTxData (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   sm_c1 (sm_pairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C53 - 00003C5F (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          00003C53 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C60 - 00003C63 (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    00003C60        Betwine_ProcessEvent (betwine)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   epb_auth_request_pack_size (epb_MmBp)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_step_data_item_pack_size (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_set_int32 (epb)
                                                   epb_set_uint32 (epb)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   osal_start_timerEx (OSAL_Timers)
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C64 - 00003C67 (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     00003C64        ?Subroutine0 (epb)
                                                   ?Subroutine5 (epb)
                                                   BT_WriteAttrCB (battservice)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GATTServApp_ProcessCharCfg (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_RegisterService (gatt_server)
                                                   HP_WriteAttrCB (hitpoint)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   PM_WriteAttrCB (pedometer)
                                                   epb_mmopen_pack_step_data_item (epb_WristBand)
                                                   epb_mmopen_pack_wristband_request (epb_WristBand)
                                                   epb_pack_auth_request (epb_MmBp)
                                                   epb_pack_base_request (epb_MmBp)
                                                   epb_pack_init_request (epb_MmBp)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   smEndPairing (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   wechatAuthReqDataInit (betwine)
                                                   wechatDataDecode (betwine)
                                                   wechatInitReqDataInit (betwine)
                                                   wechatSendReqDataInit (betwine)
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C68 - 00003C90 (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00003C68        smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003C91 - 00003C97 (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00003C91        GAPBondMgr_SetParameter (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   PM_ReadAttrCB (pedometer)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   ggs_ReadAttrCB (gapgattserver)
                                                   ggs_WriteAttrCB (gapgattserver)
           ?US_SWITCH_DENSE_CFI_INVALID_BEGINS
                                   00003C91 
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003C98 - 00003CD5 (0x3e bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003CD6 - 00003CD6 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CFI_INVALID_ENDS
                                   00003CD7 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003CD7 - 00003CE0 (0xa bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00003CD7        GATTServApp_ReadAttr (gattservapp)
                                                   MR_WriteAttrCB (motorrun)
                                                   ST_WriteAttrCB (systemtest)
                                                   WC_WriteAttrCB (wechatprofile)
                                                   devInfo_ReadAttrCB (devinfoservice)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   wechatDataDecode (betwine)
           ?US_SWITCH_SPARSE_CFI_INVALID_BEGINS
                                   00003CD7 
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003CE1 - 00003D21 (0x41 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_LEAVE
                                   00003D13        Segment part 0 (?US_JMP_IF_IN_RANGE)
                                                   Segment part 0 (?US_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00003D22 - 00003D22 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CFI_INVALID_ENDS
                                   00003D23 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003D23 - 00003D61 (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00003D23        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)
           ?US_JMP_IF_IN_RANGE_CFI_INVALID_BEGINS
                                   00003D23 
           ?US_JMP_IF_IN_RANGE_CFI_INVALID_ENDS
                                   00003D62 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00003D62 - 00003D8C (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00003D62        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)
           ?US_JMP_IF_VALUE_CFI_INVALID_BEGINS
                                   00003D62 
           ?US_JMP_IF_VALUE_CFI_INVALID_ENDS
                                   00003D8D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0002146D - 000214B2 (0x46 bytes), align: 0
  Segment part 6.             Intra module refs:   memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  0002146D 
               XSTACK = 00000002 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A29 - 00005A2E (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy::?relay          00005A29        epb_pack_varint32_bits (epb)
                                                   epb_set_bytes (epb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000214B3 - 000214DE (0x2c bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  000214B3 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A2F - 00005A34 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          00005A2F        epb_unpack_auth_response (epb_MmBp)
                                                   epb_unpack_base_push (epb_MmBp)
                                                   epb_unpack_base_response (epb_MmBp)
                                                   epb_unpack_recv_data_push (epb_MmBp)
                                                   epb_unpack_send_data_response (epb_MmBp)
                                                   osal_memset (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcat

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FD5 - 00007FF2 (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  00007FD5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00005A35 - 00005A3A (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          00005A35        osal_strlen (OSAL)
                                                   wechatAuthReqDataInit (betwine)

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00003030 - 000030B5 (0x86 bytes), align: 0
  Segment part 9.
    -------------------------------------------------------------------------
?FILL7
  Relative segment, address: CODE 0001FFFB - 0001FFFF (0x5 bytes), align: 0
  Segment part 8.
    -------------------------------------------------------------------------
?FILL6
  Relative segment, address: CODE 00017FF5 - 00017FFF (0xb bytes), align: 0
  Segment part 7.
    -------------------------------------------------------------------------
?FILL5
  Relative segment, address: CODE 0000FFF6 - 0000FFFF (0xa bytes), align: 0
  Segment part 6.
    -------------------------------------------------------------------------
?FILL4
  Relative segment, address: CODE 000214DF - 00025FFF (0x4b21 bytes), align: 0
  Segment part 5.
    -------------------------------------------------------------------------
?FILL3
  Relative segment, address: CODE 00007FF6 - 00007FF7 (0x2 bytes), align: 0
  Segment part 4.
    -------------------------------------------------------------------------
?FILL2
  Relative segment, address: CODE 00005A3B - 00005A3B (0x1 bytes), align: 0
  Segment part 3.
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000042AB - 000042AB (0x1 bytes), align: 0
  Segment part 2.
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00003FFB - 00003FFB (0x1 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00003D8D - 00003D8F (0x3 bytes), align: 0
  Segment part 0.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?CHECKSUM

  SEGMENTS IN THE MODULE
  ======================
CHECKSUM
  Relative segment, address: CODE 00003000 - 00003001 (0x2 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __checksum              00003000 




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                      CODE      DATA      XDATA  IDATA    BIT  CONST
------                      ----      ----      -----  -----    ---  -----
                           (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8             27
?ALLOC_XSTACK8                22
?BANKED_CODE_SUPPORT          30
?BANKED_ENTER_XDATA          108
?BANKED_LEAVE_XDATA           70
?CALL_IND                      2
?CHECKSUM                      2
?DEALLOC_XSTACK8              27
?FILLER_BYTES             19 267
  + common                   134
?FUNC_ENTER_XDATA            102
?FUNC_LEAVE_XDATA             64
?INTERRUPT_ENTER_XSP          95
?INTERRUPT_LEAVE_XSP          88
?L_ADD                        19
?L_ADD_TO_X                   19
?L_ADD_X                      19
?L_AND_TO_X                   19
?L_AND_X                      19
?L_EQ                         21
?L_EQ_X                       21
?L_IOR                        19
?L_MOV_TO_X                   15
?L_MOV_X                      15
?L_MUL                       128
?L_SHL                        31
?L_SUB                        20
?L_SUB_FROM_X                 20
?L_SUB_X                      24
?L_XOR                        19
?MOVE_LONG8_XDATA_IDATA       13
?MOVE_LONG8_XDATA_XDATA       33
?PUSH_XSTACK8_X               49
?PUSH_XSTACK_I                23
?SL_SHR                       26
?SS_SHR                       16
?S_DIV_MOD                   154
?S_SHL                        19
?UL_DIV_MOD                  111
?UL_GE_X                      31
?UL_GT                        16
?UL_GT_X                      16
?UL_SHR                       25
?US_JMP_IF_IN_RANGE           63
?US_JMP_IF_VALUE              43
?US_SHR                       15
?US_SWITCH_DENSE              70
?US_SWITCH_SPARSE             76
?XLOAD_R0123                  12
?XLOAD_R2345                  12
?XSTACK_DISP8                 10
?XSTACK_DISP8_RP              24
?XSTORE_R0123                 12
?XSTORE_R2345                 12
?cexit                         5
?cmain                       132
?memcpy                       76
?memset                       50
?strlen                       36
CSTARTUP                      18
  + common                     3
OSAL                       1 528                    3
OSAL_ClockBLE                256                   10
OSAL_Memory                  535                3 075
OSAL_PwrMgr                  176                    7
OSAL_Timers                1 225                    6
OSAL_betwine                 126                    2                   25
OnBoard                      228                    2
VIRTUAL_REGISTERS                    10                           8
app                        2 944                   49                    8
  + shared                                   6                           8
att_server                   519
att_util                   2 788                                        16
battservice                  524                   56                   13
betwine                    4 307             1    129                   32
  + shared                                   6                           8
betwine_main                  88             1
  + shared                                   1
devinfoservice             1 091                  176                  142
epb                        2 198                                         9
epb_MmBp                   3 288
epb_WristBand              1 307
gap                           77
gap_configmgr              1 377                  104
gap_devmgr                   239                    2
gap_linkmgr                3 881                    7
  + shared                                                               8
gap_peridevmgr             1 893                   13                    4
gap_perilinkmgr              143
gap_task                   1 020                    6
gapbondmgr                 4 862                  178                    6
  + shared                                                               4
gapgattserver              1 458                  134                    9
gatt_server                4 146                   13                   48
gatt_task                    640                    5
gatt_uuid                     26                                        26
gattservapp                6 848                   96                    9
hal_acc                      687
hal_adc                      206             4      1
  + shared                                   1
hal_aes                        9             2
  + shared                                   1
hal_crc
  + shared                                   2
hal_dma                       23             4     40
hal_drivers                  220                    1
hal_flash                    278
  + shared                                   3
hal_i2c                      469                    1
hal_key                      429             4      5
  + shared                   126             3
  + common
hal_led                    1 239                   57
  + shared                                                               4
hal_sleep                    645      1      2      2                   20
  + shared                    46             3                           4
  + common
hal_startup                   11
hci                        1 320                    5
hci_data                   1 040                   34
hci_event                  3 298                    9
hci_tl                       155                    6
historystep                  421                   68                   13
hitpoint                     561                   58                   13
l2cap_if                     301
l2cap_task                 1 145                   37
l2cap_util                 2 272                    1
linkdb                       828                   59
ll                         3 811             3    459      2             8
  + shared                                   2                          12
ll_advEndCauses            3 221
ll_common                  7 044            10                          16
  + shared                                                               8
ll_constData                   8
ll_enc                     3 651             1     44                   32
ll_errorEndCauses              9
ll_halt                        7      2
ll_isr                       688
  + shared                   134            10                           8
  + common
ll_math                       81      6
ll_scheduler               5 135                  447                   16
ll_slaveEndCauses          5 729                                         4
ll_sleep                     757                                        12
  + shared                                                               4
ll_timer2                  1 334             8
ll_timerDrift                304                                        26
motorrun                     749                  106                   15
osal_bufmgr                  399                    2
osal_cbtimer                 645                   62
osal_snv                   2 190                    4                    4
pedometer                    809                  117                   15
peripheral                 3 546                  152
phy                        1 300                    1
sm_mgr                     3 601                    2                   16
sm_pairing                 3 885                    6                   25
sm_rsppairing              2 898                    6                    4
sm_task                      459                    1
smp                        1 959
systemtest                   659                  140                   15
timeset                      585                   50                   13
wechatprofile                892                  186                   17
N/A (command line)                   16           640    192
N/A (alignment)
----------               -------     --     --  -----    ---      -    ---
Total:                   143 180     35     78  6 882    194      8    699
  + common                   134


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
  02    PHY_SetRfFreq
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_GetEndCause
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    PHY_SetEndConnection
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000002
  02    llDisableT2E1
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  02    llDisableT2Ints
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
  05          PHY_ConfigWhitener
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000002
  04        llRfInit
            | Stack used (prev) :  00000000 00000002
            | + function block  :  00000000 00000004
  03      LL_ENC_GenerateTrueRandNum
          | Stack used (prev) :  00000000 00000006
          | + function block  :  00000016 00000000
  03      llExtendRfRange
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000008 00000002
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000015 00000000
                    |  Already listed
  08                osal_msg_push
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000012 00000000
  08                osal_msg_enqueue
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000012 00000000
  09                  osal_mem_free
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  0000000A 00000002
  08                osal_msg_deallocate
                    | Stack used (prev) :  0000000A 00000002
                    | + function block  :  00000009 00000004
  08                osal_msg_deallocate
                    | Stack used (prev) :  0000000A 00000002
                    | + function block  :  00000009 00000004
                    |  Already listed
  07              osal_msg_enqueue_push
                  | Stack used (prev) :  00000015 00000006
                  | + function block  :  0000001B 00000000
  06            osal_msg_send
                | Stack used (prev) :  00000030 00000006
                | + function block  :  00000012 00000000
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
  05          HCI_SendCommandCompleteEvent
              | Stack used (prev) :  00000042 00000006
              | + function block  :  00000034 00000000
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  00000018 00000000
  03      LL_EXT_ExtendRfRangeCback
          | Stack used (prev) :  0000008E 00000006
          | + function block  :  00000006 00000004
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  00000018 00000000
            |  Already listed
  03      LL_EXT_SetTxPowerCback
          | Stack used (prev) :  0000008E 00000006
          | + function block  :  00000006 00000004
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  00000018 00000000
            |  Already listed
  03      LL_EXT_SetRxGainCback
          | Stack used (prev) :  0000008E 00000006
          | + function block  :  00000006 00000004
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          HCI_SendCommandCompleteEvent
              | Stack used (prev) :  00000042 00000006
              | + function block  :  00000034 00000000
              |  Already listed
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  0000002B 00000000
  03      LL_RandCback
          | Stack used (prev) :  000000A1 00000006
          | + function block  :  00000026 00000000
  02    llProcessPostRfOps
        | Stack used (prev) :  000000C7 0000000A
        | + function block  :  00000010 00000004
  01  RF_NormalIsr
      | Stack used (prev) :  000000D7 0000000E
      | + function block  :  00000000 0000001E
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000D7 0000002C


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000D7 0000002C
  01  RF_ErrorIsr
      | Stack used (prev) :  000000D7 0000002C
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000D7 00000030


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000D7 00000030
  04        osalDeleteTimer
            | Stack used (prev) :  000000D7 00000030
            | + function block  :  0000000C 00000002
  04        osalFindTimer
            | Stack used (prev) :  000000D7 00000030
            | + function block  :  0000000F 00000002
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
  03      osal_clear_event
          | Stack used (prev) :  000000D7 00000030
          | + function block  :  00000015 00000000
  03      llSetT2C1Event1
          | Stack used (prev) :  000000D7 00000030
          | + function block  :  00000002 00000002
  03      llGetCurrentTask
          | Stack used (prev) :  000000D7 00000030
          | + function block  :  00000000 00000002
  03      HaltMcuUsingPhyFlag
          | Stack used (prev) :  000000D7 00000030
          | + function block  :  00000000 00000000
  02    llT2OVFC1_ISR
        | Stack used (prev) :  000000FE 00000032
        | + function block  :  00000010 00000000
  01  T2_Isr
      | Stack used (prev) :  0000010E 00000032
      | + function block  :  00000000 00000012
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000010E 00000044


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  0000010E 00000044
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  02    halProcessChrInterrupt
        | Stack used (prev) :  0000010E 00000044
        | + function block  :  0000000E 00000002
  01  halKeyPort0Isr
      | Stack used (prev) :  0000011C 00000046
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000138 00000046


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000138 00000046
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  02    halProcessAccInterrupt
        | Stack used (prev) :  00000138 00000046
        | + function block  :  0000000E 00000002
  01  halKeyPort1Isr
      | Stack used (prev) :  00000146 00000048
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000162 00000048


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 00000048
  01  halSleepTimerIsr
      | Stack used (prev) :  00000162 00000048
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000162 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    gapWriteAdvDataStatus
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000001
  05          osalFindTimer
              | Stack used (prev) :  000000D7 00000030
              | + function block  :  0000000F 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osalAddTimer
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000021 00000001
  03      osal_start_reload_timer
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000028 00000000
  04        osalAddTimer
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000021 00000001
            |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000020 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  05          gapValidADType
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000012 00000000
  04        gapFindADType
            | Stack used (prev) :  00000174 0000004C
            | + function block  :  00000026 00000001
  03      isLimitedDiscoverableMode
          | Stack used (prev) :  0000019A 0000004D
          | + function block  :  0000002E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        gapFreeAdvertState
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  0000002C 00000000
  03      GAP_GetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
  02    gapWriteAdvEnableStatus
        | Stack used (prev) :  000001C8 0000004E
        | + function block  :  00000032 00000000
  05          osal_stop_timerEx
              | Stack used (prev) :  000000E6 00000032
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_clear_event
              | Stack used (prev) :  000000D7 00000030
              | + function block  :  00000015 00000000
              |  Already listed
  05          llGetCurrentTime
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000004 00000003
  05          llDisableT2IntsEvts
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000000 00000000
              |  Already listed
  05          llGetNumTasks
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  05          llGetActiveTasks
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  05          llFreeTask
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  06            llGetCurrentTime
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000004 00000003
                |  Already listed
  05          llAllocTask
              | Stack used (prev) :  00000166 0000004F
              | + function block  :  00000014 00000000
  06            ll24BitTimeDelta
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000017 00000000
  06            ll24BitTimeCompare
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000013 00000000
  06            llGetCurrentTime
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000004 00000003
                |  Already listed
  07              LL_ENC_MoveData
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000000B 00000000
  06            llRestoreConnState
                | Stack used (prev) :  0000016D 0000004C
                | + function block  :  00000038 00000000
  06            llRestoreConnState
                | Stack used (prev) :  0000016D 0000004C
                | + function block  :  00000038 00000000
                |  Already listed
  07              PHY_CommitRxFifo
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000000
  07              PHY_RetryRxFifo
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000000
  06            llSave_rxFIFO
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000001
  06            llSave_rxFIFO
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000001
                |  Already listed
  07              PHY_RetryTxFifo
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000000
  06            llSave_txFIFO
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000001
  06            llSave_txFIFO
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000001
                |  Already listed
  07              ll24BitTimeCompare
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000013 00000000
                  |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000175 0000004C
                | + function block  :  00000040 00000000
  06            llFindNextSecTask
                | Stack used (prev) :  00000175 0000004C
                | + function block  :  00000040 00000000
                |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  00000175 0000004C
                | + function block  :  00000040 00000000
                |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  00000183 0000004D
                  | + function block  :  00000020 00000000
                  |  Already listed
  09                  osal_mem_free
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  0000000A 00000002
                      |  Already listed
  09                  osal_set_event
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000015 00000000
                      |  Already listed
  08                osalTimerUpdate
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  00000023 00000001
  08                ll_McuPrecisionCount
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  00000002 00000003
  07              osalTimeUpdate
                  | Stack used (prev) :  00000185 0000004F
                  | + function block  :  00000020 00000000
  07              PHY_Reset
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              ll24BitTimeDelta
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000017 00000000
                  |  Already listed
  07              llGetCurrentTime
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000004 00000003
                  |  Already listed
  07              llSetT2OVFC2Event2
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000010 00000002
  07              llSetT2LongC1Event1
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000006 00000002
  07              llSetT2LongC1Timeout
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000006 00000002
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  000001A3 0000004F
                | + function block  :  00000040 00000000
                |  Already listed
  06            LL_ENC_MoveData
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000B 00000000
                |  Already listed
  06            llGetNextConn
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              PHY_SetSyncWord
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000010 00000000
  07              PHY_SetAdvChans
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000010 00000000
  07              PHY_SetOwnAddr
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              llSetupScannableAdvEvt
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              llSetupNonConnectableAdvEvt
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  07              llSetupUndirectedAdvEvt
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  08                PHY_SetPeerAddr
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  00000000 00000002
  07              llSetupDirectedAdvEvt
                  | Stack used (prev) :  00000162 0000004E
                  | + function block  :  00000018 00000000
  06            llSetupAdv
                | Stack used (prev) :  0000017A 0000004E
                | + function block  :  00000000 00000004
  06            llProcessPostRfOps
                | Stack used (prev) :  000000C7 0000000A
                | + function block  :  00000010 00000004
                |  Already listed
  05          llScheduler
              | Stack used (prev) :  000001E3 00000052
              | + function block  :  00000030 00000000
  05          llSetupAdv
              | Stack used (prev) :  0000017A 0000004E
              | + function block  :  00000000 00000004
              |  Already listed
  04        LL_SetAdvControl
            | Stack used (prev) :  00000213 00000052
            | + function block  :  00000018 00000000
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000022B 00000052
          | + function block  :  00000014 00000000
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  0000002C 00000000
          |  Already listed
  02    gapSetAdvParamsStatus
        | Stack used (prev) :  0000023F 00000052
        | + function block  :  0000001C 00000000
  01  gapPeriProcessHCICmdCompleteEvt
      | Stack used (prev) :  0000025B 00000052
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000026F 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  04        PHY_SetAdvWlPolicy
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
  03      LL_SetAdvParam
          | Stack used (prev) :  00000162 0000004E
          | + function block  :  00000020 00000000
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000076 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_SetAdvParamCmd
        | Stack used (prev) :  00000182 0000004E
        | + function block  :  0000002C 00000000
  03      linkDB_NumActive
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
  02    GAP_NumActiveConnections
        | Stack used (prev) :  00000162 0000004E
        | + function block  :  00000000 00000004
  02    isLimitedDiscoverableMode
        | Stack used (prev) :  0000019A 0000004D
        | + function block  :  0000002E 00000000
        |  Already listed
  02    gapAddAddrAdj
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000A 00000002
  02    GAP_GetParamValue
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
        |  Already listed
  01  gapSetAdvParams
      | Stack used (prev) :  000001C8 00000052
      | + function block  :  00000028 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001F0 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_stop_timerEx
        | Stack used (prev) :  000000E6 00000032
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000183 0000004D
        | + function block  :  00000020 00000000
        |  Already listed
  02    gapFreeAdvertState
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
        |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
          |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  0000022B 00000052
          | + function block  :  00000014 00000000
          |  Already listed
  02    GAP_EndDiscoverable
        | Stack used (prev) :  0000023F 00000052
        | + function block  :  0000001E 00000000
  01  gapProcessAdvertisingEvt
      | Stack used (prev) :  0000025D 00000052
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000275 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      strlen
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
  02    osal_strlen
        | Stack used (prev) :  00000162 0000004E
        | + function block  :  00000000 00000004
  01  ggs_ReadAttrCB
      | Stack used (prev) :  00000162 00000052
      | + function block  :  0000002A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000018C 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    osal_strlen
        | Stack used (prev) :  00000162 0000004E
        | + function block  :  00000000 00000004
        |  Already listed
  01  ggs_WriteAttrCB
      | Stack used (prev) :  00000162 00000052
      | + function block  :  00000028 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000018A 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  04        osal_stop_timerEx
            | Stack used (prev) :  000000E6 00000032
            | + function block  :  00000018 00000000
            |  Already listed
  03      osal_CbTimerStop
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000C 00000000
  02    gattStopTimer
        | Stack used (prev) :  0000016E 0000004C
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  04        memset
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000017C 0000004E
        | + function block  :  00000026 00000000
  02    gattFindServerInfo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000037 00000000
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  04        osal_bm_free
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000000
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000B 00000001
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  00000164 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            xor_128
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000037 00000002
  06            xor_128
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000037 00000002
                |  Already listed
  06            xor_128
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000037 00000002
                |  Already listed
  06            xor_128
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000037 00000002
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  00000164 0000004E
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000001D 00000001
  07              leftshift_onebit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              leftshift_onebit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000001D 00000001
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000037 00000002
                  |  Already listed
  07              xor_128
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000037 00000002
                  |  Already listed
  08                LL_ENC_AES128_Encrypt
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  0000000B 00000000
  07              LL_Encrypt
                  | Stack used (prev) :  0000016D 0000004C
                  | + function block  :  0000001A 00000000
  06            generate_subkey
                | Stack used (prev) :  00000199 0000004E
                | + function block  :  00000055 00000000
  06            LL_Encrypt
                | Stack used (prev) :  0000016D 0000004C
                | + function block  :  0000001A 00000000
                |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  000001EE 0000004E
              | + function block  :  00000097 00000000
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000015 00000000
                |  Already listed
  05          gapIncSignCounter
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000C 00000000
  05          gapGetSignCounter
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  05          gapGetSRK
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  04        SM_GenerateAuthenSig
            | Stack used (prev) :  00000285 0000004E
            | + function block  :  00000064 00000000
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
  04        linkDB_State
            | Stack used (prev) :  00000176 0000004E
            | + function block  :  00000014 00000000
  06            bm_desc_from_payload
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000C 00000002
  05          osal_bm_adjust_header
              | Stack used (prev) :  0000016E 0000004E
              | + function block  :  00000018 00000000
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            osal_bm_alloc
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000A 00000000
  05          HCI_bm_alloc
              | Stack used (prev) :  0000016C 0000004C
              | + function block  :  00000000 00000004
  04        L2CAP_bm_alloc
            | Stack used (prev) :  00000186 00000050
            | + function block  :  0000002C 00000000
  05          linkDB_State
              | Stack used (prev) :  00000176 0000004E
              | + function block  :  00000014 00000000
              |  Already listed
  06            osal_bm_adjust_header
                | Stack used (prev) :  0000016E 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000030 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  07              LL_ConnActive
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  08                osal_msg_send
                    | Stack used (prev) :  00000030 00000006
                    | + function block  :  00000012 00000000
                    |  Already listed
  08                osal_msg_allocate
                    | Stack used (prev) :  00000018 00000000
                    | + function block  :  00000014 00000000
                    |  Already listed
  07              HCI_NumOfCompletedPacketsEvent
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000012 00000001
  09                  osal_msg_send
                      | Stack used (prev) :  00000030 00000006
                      | + function block  :  00000012 00000000
                      |  Already listed
  09                  osal_msg_allocate
                      | Stack used (prev) :  00000018 00000000
                      | + function block  :  00000014 00000000
                      |  Already listed
  08                HCI_DataBufferOverflowEvent
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  0000000A 00000001
  10                    ll24BitTimeDelta
                        | Stack used (prev) :  00000162 0000004C
                        | + function block  :  00000017 00000000
                        |  Already listed
  10                    ll24BitTimeCompare
                        | Stack used (prev) :  00000162 0000004C
                        | + function block  :  00000013 00000000
                        |  Already listed
  10                    llGetCurrentTime
                        | Stack used (prev) :  00000162 0000004C
                        | + function block  :  00000004 00000003
                        |  Already listed
  10                    llGetCurrentTask
                        | Stack used (prev) :  000000D7 00000030
                        | + function block  :  00000000 00000002
                        |  Already listed
  10                    llScheduleTask
                        | Stack used (prev) :  000001A3 0000004F
                        | + function block  :  00000040 00000000
                        |  Already listed
  10                    llDivide31By16To16
                        | Stack used (prev) :  00000162 0000004C
                        | + function block  :  00000000 00000000
  13                          LL_ENC_LoadEmptyIV
                              | Stack used (prev) :  00000162 0000004C
                              | + function block  :  0000002F 00000002
  12                        LL_ENC_GenerateMIC
                            | Stack used (prev) :  00000191 0000004E
                            | + function block  :  0000007E 00000000
  12                        LL_ENC_EncryptMsg
                            | Stack used (prev) :  00000162 0000004C
                            | + function block  :  00000046 00000001
  11                      LL_ENC_Encrypt
                          | Stack used (prev) :  0000020F 0000004E
                          | + function block  :  0000003A 00000000
  11                      LL_ENC_MoveData
                          | Stack used (prev) :  00000162 0000004C
                          | + function block  :  0000000B 00000000
                          |  Already listed
  10                    llWriteTxData
                        | Stack used (prev) :  00000249 0000004E
                        | + function block  :  0000002A 00000000
  11                      PHY_SetDataChan
                          | Stack used (prev) :  00000162 0000004C
                          | + function block  :  00000000 00000002
  11                      llProcessChanMap
                          | Stack used (prev) :  00000162 0000004C
                          | + function block  :  00000018 00000001
  10                    llSetNextDataChan
                        | Stack used (prev) :  0000017A 0000004C
                        | + function block  :  00000016 00000002
  09                  LL_TxData
                      | Stack used (prev) :  00000273 0000004F
                      | + function block  :  00000027 00000000
  09                  HCI_NumOfCompletedPacketsEvent
                      | Stack used (prev) :  00000162 0000004C
                      | + function block  :  00000012 00000001
                      |  Already listed
  10                    osal_bm_free
                        | Stack used (prev) :  00000162 0000004C
                        | + function block  :  00000009 00000000
                        |  Already listed
  09                  hciTxDataBufferReset
                      | Stack used (prev) :  0000016B 0000004C
                      | + function block  :  00000022 00000000
  09                  hciTxDataBufferReset
                      | Stack used (prev) :  0000016B 0000004C
                      | + function block  :  00000022 00000000
                      |  Already listed
  08                HCI_TxDataSend
                    | Stack used (prev) :  0000029A 0000004F
                    | + function block  :  00000029 00000000
  07              HCI_TxDataBufferInsert
                  | Stack used (prev) :  000002C3 0000004F
                  | + function block  :  00000020 00000000
  06            HCI_SendDataPkt
                | Stack used (prev) :  000002E3 0000004F
                | + function block  :  00000024 00000000
  05          l2capEncapSendData
              | Stack used (prev) :  00000307 0000004F
              | + function block  :  00000038 00000000
  04        L2CAP_SendData
            | Stack used (prev) :  0000033F 0000004F
            | + function block  :  00000014 00000000
  03      attSendMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000032 00000000
  02    ATT_ErrorRsp
        | Stack used (prev) :  00000385 00000050
        | + function block  :  00000018 00000000
  01  gattServerProcessMsgCB
      | Stack used (prev) :  0000039D 00000050
      | + function block  :  0000005A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003F7 00000050


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  gattProcessExchangeMTUReq
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000162 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000D 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000002A 00000001
  04        ATT_ConvertUUIDto128
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000002A 00000001
            |  Already listed
  03      ATT_CompareUUID
          | Stack used (prev) :  0000018C 0000004D
          | + function block  :  0000003C 00000000
  02    GATT_FindHandleUUID
        | Stack used (prev) :  000001C8 0000004D
        | + function block  :  00000064 00000000
  03      attSendMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000032 00000000
          |  Already listed
  02    ATT_FindInfoRsp
        | Stack used (prev) :  00000385 00000050
        | + function block  :  00000018 00000000
  01  gattProcessFindInfoReq
      | Stack used (prev) :  0000039D 00000050
      | + function block  :  0000004C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003E9 00000050


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandleUUID
        | Stack used (prev) :  000001C8 0000004D
        | + function block  :  00000064 00000000
        |  Already listed
  01  gattProcessFindByTypeValueReq
      | Stack used (prev) :  0000022C 0000004D
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000024C 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandleUUID
        | Stack used (prev) :  000001C8 0000004D
        | + function block  :  00000064 00000000
        |  Already listed
  01  gattProcessReadByTypeReq
      | Stack used (prev) :  0000022C 0000004D
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000024C 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandle
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000022 00000000
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  00000018 00000000
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000018E 0000004E
        | + function block  :  00000022 00000000
  01  gattProcessReadReq
      | Stack used (prev) :  000001B0 0000004E
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001C4 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandle
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  0000018E 0000004E
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattProcessReadMultiReq
      | Stack used (prev) :  000001B0 0000004E
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001D0 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandleUUID
        | Stack used (prev) :  000001C8 0000004D
        | + function block  :  00000064 00000000
        |  Already listed
  02    ATT_CompareUUID
        | Stack used (prev) :  0000018C 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  gattProcessReadByGrpTypeReq
      | Stack used (prev) :  0000022C 0000004D
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000258 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATT_FindHandle
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  02    GATT_VerifyWritePermissions
        | Stack used (prev) :  0000018E 0000004E
        | + function block  :  0000001E 00000000
  01  gattProcessWriteReq
      | Stack used (prev) :  000001AC 0000004E
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001C4 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  gattProcessExecuteWriteReq
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000162 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    gattNotifyEvent
        | Stack used (prev) :  0000017C 0000004E
        | + function block  :  00000026 00000000
        |  Already listed
  01  gattServerHandleTimerCB
      | Stack used (prev) :  000001A2 0000004E
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001BE 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    gattStopTimer
        | Stack used (prev) :  0000016E 0000004C
        | + function block  :  00000012 00000000
        |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000017C 0000004E
        | + function block  :  00000026 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000037 00000000
        |  Already listed
  01  gattServerHandleConnStatusCB
      | Stack used (prev) :  000001A2 0000004E
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001C6 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      GATTServApp_SendCCCUpdatedEvent
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000022 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000017 00000000
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000017 00000000
            |  Already listed
  03      GATTServApp_WriteCharCfg
          | Stack used (prev) :  00000179 0000004C
          | + function block  :  00000030 00000001
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000017 00000000
            |  Already listed
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000179 0000004C
          | + function block  :  00000031 00000000
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
  01  gattServApp_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000211 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memset
        | Stack used (prev) :  00000164 0000004E
        | + function block  :  00000018 00000000
        |  Already listed
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  03      gattServApp_FindCharCfgItem
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000017 00000000
          |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
  02    gattServApp_FindPrepareWriteQ
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
  01  gattServApp_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001B7 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    l2capFreeChannel
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000012 00000002
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  02    l2capNotifySignal
        | Stack used (prev) :  0000017C 0000004E
        | + function block  :  00000031 00000000
  01  l2capHandleTimerCB
      | Stack used (prev) :  000001AD 0000004E
      | + function block  :  0000001A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001C7 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  llStartAdvSetup
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000162 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memset
        | Stack used (prev) :  00000164 0000004E
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcmp
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000D 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  05          osal_stop_timerEx
              | Stack used (prev) :  000000E6 00000032
              | + function block  :  00000018 00000000
              |  Already listed
  04        smStopRspTimer
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
  03      smFreePairingParams
          | Stack used (prev) :  00000162 0000004E
          | + function block  :  00000012 00000004
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        osal_memdup
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000010 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
  05          GAP_GetParamValue
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        sendAuthEvent
            | Stack used (prev) :  0000017C 0000004E
            | + function block  :  00000042 00000000
  03      gapPairingCompleteCB
          | Stack used (prev) :  000001BE 0000004E
          | + function block  :  0000003C 00000000
  02    smEndPairing
        | Stack used (prev) :  000001FA 00000052
        | + function block  :  0000002E 00000000
  03      osal_revmemcpy
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000B 00000001
          |  Already listed
  04        LL_Encrypt
            | Stack used (prev) :  0000016D 0000004C
            | + function block  :  0000001A 00000000
            |  Already listed
  03      smEncrypt
          | Stack used (prev) :  00000187 0000004C
          | + function block  :  00000080 00000000
  02    sm_s1
        | Stack used (prev) :  00000207 0000004D
        | + function block  :  00000080 00000000
  02    linkDB_Find
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
        |  Already listed
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000B 00000001
  03      LL_EncLtkNegReply
          | Stack used (prev) :  0000016D 0000004D
          | + function block  :  00000000 00000004
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000076 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqNegReplyCmd
        | Stack used (prev) :  0000016D 00000051
        | + function block  :  00000018 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkReply
          | Stack used (prev) :  0000016D 0000004D
          | + function block  :  00000000 00000004
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000076 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_LE_LtkReqReplyCmd
        | Stack used (prev) :  0000016D 00000051
        | + function block  :  00000018 00000000
  01  smResponderProcessLTKReq
      | Stack used (prev) :  00000287 00000052
      | + function block  :  00000066 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000002ED 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smEndPairing
          | Stack used (prev) :  000001FA 00000052
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smpResponderProcessMasterID
        | Stack used (prev) :  00000228 00000052
        | + function block  :  00000022 00000000
  03      osal_memcmp
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000D 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_bm_free
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000009 00000000
              |  Already listed
  06            osal_start_timerEx
                | Stack used (prev) :  00000183 0000004D
                | + function block  :  00000020 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          smStartRspTimer
              | Stack used (prev) :  000001A3 0000004E
              | + function block  :  00000024 00000000
  05          L2CAP_bm_alloc
              | Stack used (prev) :  00000186 00000050
              | + function block  :  0000002C 00000000
              |  Already listed
  05          L2CAP_SendData
              | Stack used (prev) :  0000033F 0000004F
              | + function block  :  00000014 00000000
              |  Already listed
  04        smSendSMMsg
            | Stack used (prev) :  00000353 00000050
            | + function block  :  00000028 00000000
  03      smGenerateRandMsg
          | Stack used (prev) :  0000037B 00000050
          | + function block  :  00000038 00000000
  06            smAuthReqToUint8
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000000 00000002
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  00000162 0000004E
              | + function block  :  00000016 00000000
  04        smpBuildPairingRsp
            | Stack used (prev) :  00000178 0000004E
            | + function block  :  00000000 00000004
  05          smpBuildPairingReqRsp
              | Stack used (prev) :  00000162 0000004E
              | + function block  :  00000016 00000000
              |  Already listed
  04        smpBuildPairingReq
            | Stack used (prev) :  00000178 0000004E
            | + function block  :  00000000 00000004
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          smUint8ToAuthReq
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000A 00000000
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000017C 0000004E
            | + function block  :  00000043 00000000
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000B 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  00000187 0000004C
              | + function block  :  00000080 00000000
              |  Already listed
  05          smEncrypt
              | Stack used (prev) :  00000187 0000004C
              | + function block  :  00000080 00000000
              |  Already listed
  05          sm_xor
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000071 00000000
  05          sm_xor
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000071 00000000
              |  Already listed
  04        sm_c1new
            | Stack used (prev) :  00000207 0000004E
            | + function block  :  000000DB 00000000
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  04        gapGetDevAddress
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
  04        gapGetDevAddressMode
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
  03      sm_c1
          | Stack used (prev) :  000002E2 00000052
          | + function block  :  00000080 00000000
  02    smpResponderProcessPairingRandom
        | Stack used (prev) :  000003B3 00000052
        | + function block  :  00000042 00000000
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      smSavePairInfo
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000012 00000001
  04        smSendSMMsg
            | Stack used (prev) :  00000353 00000050
            | + function block  :  00000028 00000000
            |  Already listed
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000017C 0000004E
            | + function block  :  00000043 00000000
            |  Already listed
  03      smGeneratePairingReqRsp
          | Stack used (prev) :  0000037B 00000050
          | + function block  :  00000038 00000000
  07              LL_ENC_GeneratePseudoRandNum
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
  06            LL_PseudoRand
                | Stack used (prev) :  00000162 0000004E
                | + function block  :  00000014 00000000
  05          Onboard_rand
              | Stack used (prev) :  00000176 0000004E
              | + function block  :  00000004 00000004
  04        osal_rand
            | Stack used (prev) :  0000017A 00000052
            | + function block  :  00000000 00000004
  03      smGenerateRandBuf
          | Stack used (prev) :  0000017A 00000056
          | + function block  :  00000027 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  04        GAP_GetParamValue
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapPasskeyNeededCB
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  00000024 00000000
  02    smpResponderProcessPairingReq
        | Stack used (prev) :  000003B3 00000056
        | + function block  :  00000022 00000000
  02    smDetermineKeySize
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    smEndPairing
        | Stack used (prev) :  000001FA 00000052
        | + function block  :  0000002E 00000000
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smGenerateConfirm
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  00000042 00000000
  02    sm_c1
        | Stack used (prev) :  000002E2 00000052
        | + function block  :  00000080 00000000
        |  Already listed
  02    smAuthReqToUint8
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapSendPairingReqEvent
        | Stack used (prev) :  0000017C 0000004E
        | + function block  :  0000002C 00000000
  01  smpResponderProcessIncoming
      | Stack used (prev) :  000003F5 00000056
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000411 00000056


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_start_timerEx
        | Stack used (prev) :  00000183 0000004D
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_rand
        | Stack used (prev) :  0000017A 00000052
        | + function block  :  00000000 00000004
        |  Already listed
  02    osal_memset
        | Stack used (prev) :  00000164 0000004E
        | + function block  :  00000018 00000000
        |  Already listed
  02    smDetermineKeySize
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendSingingInfo
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityAddrInfo
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  0000002A 00000000
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityInfo
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  00000018 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendMasterID
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  0000003E 00000000
  03      smSendSMMsg
          | Stack used (prev) :  00000353 00000050
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendEncInfo
        | Stack used (prev) :  0000037B 00000050
        | + function block  :  00000018 00000000
  02    smGenerateRandBuf
        | Stack used (prev) :  0000017A 00000056
        | + function block  :  00000027 00000000
        |  Already listed
  02    linkDB_Find
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
        |  Already listed
  02    gapGetIRK
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
  02    gapGetDevAddress
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetDevAddressMode
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetSRK
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  01  smResponderSendNextKeyInfo
      | Stack used (prev) :  000003B9 00000056
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003DD 00000056


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  02    OnBoard_SendKeys
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000013 00000001
  01  OnBoard_KeyCallback
      | Stack used (prev) :  00000175 0000004D
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000187 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  BT_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000172 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  BT_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000209 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  BT_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          osal_strlen
              | Stack used (prev) :  00000162 0000004E
              | + function block  :  00000000 00000004
              |  Already listed
  05          GATTServApp_ReadCharCfg
              | Stack used (prev) :  00000179 0000004C
              | + function block  :  00000031 00000000
              |  Already listed
  06            gattServApp_FindServiceCBs
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000001D 00000002
  05          gattServApp_FindAuthorizeAttrCB
              | Stack used (prev) :  0000017F 0000004E
              | + function block  :  00000031 00000000
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000001D 00000002
              |  Already listed
  07              GATT_ServiceNumAttrs
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000000A 00000002
  06            gattServiceLastHandle
                | Stack used (prev) :  0000016C 0000004E
                | + function block  :  0000002A 00000000
  06            gattServiceLastHandle
                | Stack used (prev) :  0000016C 0000004E
                | + function block  :  0000002A 00000000
                |  Already listed
  06            GATT_FindHandleUUID
                | Stack used (prev) :  000001C8 0000004D
                | + function block  :  00000064 00000000
                |  Already listed
  06            ATT_CompareUUID
                | Stack used (prev) :  0000018C 0000004D
                | + function block  :  0000003C 00000000
                |  Already listed
  05          GATT_FindNextAttr
              | Stack used (prev) :  0000022C 0000004E
              | + function block  :  0000003C 00000000
  05          GATT_FindHandle
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000022 00000000
              |  Already listed
  05          ATT_CompareUUID
              | Stack used (prev) :  0000018C 0000004D
              | + function block  :  0000003C 00000000
              |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000268 00000052
            | + function block  :  0000007B 00000000
  04        GATTServApp_FindAttr
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000003F 00000000
  05          linkDB_Authen
              | Stack used (prev) :  00000176 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  06            gattFindServerInfo
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000037 00000000
                |  Already listed
  05          gattGetServerStatus
              | Stack used (prev) :  00000199 0000004C
              | + function block  :  00000023 00000000
  06            attSendMsg
                | Stack used (prev) :  00000353 00000050
                | + function block  :  00000032 00000000
                |  Already listed
  05          ATT_HandleValueNoti
              | Stack used (prev) :  00000385 00000050
              | + function block  :  00000018 00000000
  04        GATT_Notification
            | Stack used (prev) :  0000039D 00000050
            | + function block  :  0000001A 00000000
  05          linkDB_Authen
              | Stack used (prev) :  00000176 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  07              osal_start_timerEx
                  | Stack used (prev) :  00000183 0000004D
                  | + function block  :  00000020 00000000
                  |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000001A3 0000004C
                | + function block  :  00000034 00000001
  05          gattStartTimer
              | Stack used (prev) :  000001D7 0000004D
              | + function block  :  00000024 00000000
  05          gattGetServerStatus
              | Stack used (prev) :  00000199 0000004C
              | + function block  :  00000023 00000000
              |  Already listed
  06            attSendMsg
                | Stack used (prev) :  00000353 00000050
                | + function block  :  00000032 00000000
                |  Already listed
  05          ATT_HandleValueInd
              | Stack used (prev) :  00000385 00000050
              | + function block  :  00000018 00000000
  04        GATT_Indication
            | Stack used (prev) :  0000039D 00000050
            | + function block  :  00000042 00000000
  03      GATTServApp_ProcessCharCfg
          | Stack used (prev) :  000003DF 00000052
          | + function block  :  00000069 00000000
  02    WC_SetParameter
        | Stack used (prev) :  00000448 00000052
        | + function block  :  00000022 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPRole_GetParameter
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000018 00000000
  04        osal_start_timerEx
            | Stack used (prev) :  00000183 0000004D
            | + function block  :  00000020 00000000
            |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  000001A3 0000004C
                | + function block  :  00000034 00000001
                |  Already listed
  06            linkDB_State
                | Stack used (prev) :  00000176 0000004E
                | + function block  :  00000014 00000000
                |  Already listed
  06            l2capFreeChannel
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000012 00000002
                |  Already listed
  06            l2capAllocChannel
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000001E 00000001
  07              osal_bm_free
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              L2CAP_bm_alloc
                  | Stack used (prev) :  00000186 00000050
                  | + function block  :  0000002C 00000000
                  |  Already listed
  07              l2capEncapSendData
                  | Stack used (prev) :  00000307 0000004F
                  | + function block  :  00000038 00000000
                  |  Already listed
  06            l2capSendCmd
                | Stack used (prev) :  0000033F 00000050
                | + function block  :  00000046 00000000
  05          l2capSendReq
              | Stack used (prev) :  00000385 00000050
              | + function block  :  00000030 00000000
  04        L2CAP_ConnParamUpdateReq
            | Stack used (prev) :  000003B5 00000050
            | + function block  :  0000001C 00000000
  04        GAP_GetParamValue
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_startConnUpdate
          | Stack used (prev) :  000003D1 00000050
          | + function block  :  0000003E 00000000
  04        osalFindTimer
            | Stack used (prev) :  000000D7 00000030
            | + function block  :  0000000F 00000002
            |  Already listed
  03      osal_get_timeoutEx
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000E 00000000
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000020 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_EndDiscoverable
          | Stack used (prev) :  0000023F 00000052
          | + function block  :  0000001E 00000000
          |  Already listed
  03      GAP_SetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
  02    GAPRole_SetParameter
        | Stack used (prev) :  0000040F 00000052
        | + function block  :  00000020 00000000
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    DevInfo_SetParameter
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000E 00000000
  01  peripheralStateNotificationCB
      | Stack used (prev) :  0000046A 00000052
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000498 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  07              llReplaceCtrlPkt
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000003
  07              llEnqueueCtrlPkt
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000000B 00000001
                  |  Already listed
  06            LL_Disconnect
                | Stack used (prev) :  0000016D 0000004F
                | + function block  :  00000012 00000000
  07              osal_msg_send
                  | Stack used (prev) :  00000030 00000006
                  | + function block  :  00000012 00000000
                  |  Already listed
  07              osal_msg_allocate
                  | Stack used (prev) :  00000018 00000000
                  | + function block  :  00000014 00000000
                  |  Already listed
  09                  osal_msg_send
                      | Stack used (prev) :  00000030 00000006
                      | + function block  :  00000012 00000000
                      |  Already listed
  09                  osal_msg_allocate
                      | Stack used (prev) :  00000018 00000000
                      | + function block  :  00000014 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  08                HCI_SendControllerToHostEvent
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  0000001D 00000001
  07              HCI_SendCommandStatusEvent
                  | Stack used (prev) :  0000017F 0000004C
                  | + function block  :  00000025 00000001
  06            HCI_CommandStatusEvent
                | Stack used (prev) :  000001A4 0000004C
                | + function block  :  00000016 00000001
  05          HCI_DisconnectCmd
              | Stack used (prev) :  000001BA 0000004F
              | + function block  :  00000012 00000000
  06            linkDB_FindFirst
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000000 00000002
  06            HCI_DisconnectCmd
                | Stack used (prev) :  000001BA 0000004F
                | + function block  :  00000012 00000000
                |  Already listed
  05          disconnectNext
              | Stack used (prev) :  000001CC 0000004F
              | + function block  :  0000002A 00000000
  04        GAP_TerminateLinkReq
            | Stack used (prev) :  000001F6 0000004F
            | + function block  :  00000018 00000000
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  0000020E 0000004F
          | + function block  :  00000016 00000004
  03      GAPRole_GetParameter
          | Stack used (prev) :  00000176 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      GAPRole_SetParameter
          | Stack used (prev) :  0000040F 00000052
          | + function block  :  00000020 00000000
          |  Already listed
  05          HalI2CDisable
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  05          HalI2CWrite
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  05          HalI2CRead
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000009 00000001
  05          HalI2CInit
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000000 00000002
  04        HalAccStandby
            | Stack used (prev) :  0000016B 0000004E
            | + function block  :  00000002 00000004
  03      AppStandby
          | Stack used (prev) :  0000016D 00000052
          | + function block  :  00000000 00000004
  02    systemStandby
        | Stack used (prev) :  0000042F 00000056
        | + function block  :  00000012 00000004
  04        osal_GetSystemClock
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
  04        osal_stop_timerEx
            | Stack used (prev) :  000000E6 00000032
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000015 00000000
            |  Already listed
  04        HalLedOnOff
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000001D 00000002
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  0000017F 0000004C
          | + function block  :  0000003E 00000002
  02    AppMotorRun
        | Stack used (prev) :  000001BD 0000004E
        | + function block  :  00000012 00000000
  01  motorrunChangeCB
      | Stack used (prev) :  00000441 0000005A
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000453 0000005A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    AppTimeSet
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000F 00000002
  01  timesetChangeCB
      | Stack used (prev) :  00000171 0000004E
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000171 00000052


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  03      WC_SetParameter
          | Stack used (prev) :  00000448 00000052
          | + function block  :  00000022 00000000
          |  Already listed
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  0000020E 0000004F
          | + function block  :  00000016 00000004
          |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  0000017F 0000004C
          | + function block  :  0000003E 00000002
          |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      epb_unpack_recv_data_push_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
  04        memset
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  05          memset
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000002 00000002
              |  Already listed
  05          epb_unpack_init
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000002 00000002
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        epb_unpack_base_push
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  0000003C 00000000
  06            epb_get_varint32_bits
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000000
  07              epb_get_varint32_bits
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000002C 00000000
                  |  Already listed
  06            epb_get_tag_value_offset
                | Stack used (prev) :  0000018E 0000004C
                | + function block  :  0000004C 00000002
  05          epb_get_bytes
              | Stack used (prev) :  000001DA 0000004E
              | + function block  :  0000002A 00000000
  04        epb_get_message
            | Stack used (prev) :  00000204 0000004E
            | + function block  :  00000006 00000004
  04        epb_get_bytes
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  0000002A 00000000
            |  Already listed
  06            epb_get_varint32_bits
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000002C 00000000
                |  Already listed
  06            epb_get_tag_value_offset
                | Stack used (prev) :  0000018E 0000004C
                | + function block  :  0000004C 00000002
                |  Already listed
  05          epb_get_uint32
              | Stack used (prev) :  000001DA 0000004E
              | + function block  :  00000038 00000000
  04        epb_get_enum
            | Stack used (prev) :  00000212 0000004E
            | + function block  :  00000018 00000000
  05          epb_get_tag_value_offset
              | Stack used (prev) :  0000018E 0000004C
              | + function block  :  0000004C 00000002
              |  Already listed
  04        epb_has_tag
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  00000018 00000000
  04        epb_unpack_init
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_unpack_recv_data_push
          | Stack used (prev) :  0000022A 00000052
          | + function block  :  00000028 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      epb_unpack_send_data_response_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
  04        memset
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  05          memset
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000002 00000002
              |  Already listed
  06            epb_get_bytes
                | Stack used (prev) :  000001DA 0000004E
                | + function block  :  0000002A 00000000
                |  Already listed
  05          epb_get_string
              | Stack used (prev) :  00000204 0000004E
              | + function block  :  00000006 00000004
  06            epb_get_uint32
                | Stack used (prev) :  000001DA 0000004E
                | + function block  :  00000038 00000000
                |  Already listed
  05          epb_get_int32
              | Stack used (prev) :  00000212 0000004E
              | + function block  :  00000000 00000004
  05          epb_has_tag
              | Stack used (prev) :  000001DA 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          epb_unpack_init
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000002 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        epb_unpack_base_response
            | Stack used (prev) :  00000212 00000052
            | + function block  :  00000038 00000000
  04        epb_get_message
            | Stack used (prev) :  00000204 0000004E
            | + function block  :  00000006 00000004
            |  Already listed
  04        epb_get_bytes
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  0000002A 00000000
            |  Already listed
  04        epb_has_tag
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        epb_unpack_init
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_unpack_send_data_response
          | Stack used (prev) :  0000024A 00000052
          | + function block  :  00000028 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      epb_unpack_init_response_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
  04        epb_unpack_base_response
            | Stack used (prev) :  00000212 00000052
            | + function block  :  00000038 00000000
            |  Already listed
  04        epb_get_message
            | Stack used (prev) :  00000204 0000004E
            | + function block  :  00000006 00000004
            |  Already listed
  04        epb_get_string
            | Stack used (prev) :  00000204 0000004E
            | + function block  :  00000006 00000004
            |  Already listed
  04        epb_get_enum
            | Stack used (prev) :  00000212 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        epb_get_int32
            | Stack used (prev) :  00000212 0000004E
            | + function block  :  00000000 00000004
            |  Already listed
  04        epb_get_uint32
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  00000038 00000000
            |  Already listed
  04        epb_has_tag
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        epb_unpack_init
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_unpack_init_response
          | Stack used (prev) :  0000024A 00000052
          | + function block  :  00000028 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  03      epb_unpack_auth_response_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
  04        memset
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  04        epb_unpack_base_response
            | Stack used (prev) :  00000212 00000052
            | + function block  :  00000038 00000000
            |  Already listed
  04        epb_get_message
            | Stack used (prev) :  00000204 0000004E
            | + function block  :  00000006 00000004
            |  Already listed
  04        epb_get_bytes
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  0000002A 00000000
            |  Already listed
  04        epb_has_tag
            | Stack used (prev) :  000001DA 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        epb_unpack_init
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_unpack_auth_response
          | Stack used (prev) :  0000024A 00000052
          | + function block  :  00000028 00000000
  03      AppTimeSet
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000F 00000002
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    wechatDataDecode
        | Stack used (prev) :  0000046A 00000053
        | + function block  :  00000032 00000000
  02    osal_mem_free
        | Stack used (prev) :  00000000 00000000
        | + function block  :  0000000A 00000002
        |  Already listed
  02    osal_mem_alloc
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  wechatChangeCB
      | Stack used (prev) :  0000049C 00000053
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004B0 00000053


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  devInfo_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  0000001E 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000180 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000179 0000004C
          | + function block  :  00000031 00000000
          |  Already listed
  04        GATT_Indication
            | Stack used (prev) :  0000039D 00000050
            | + function block  :  00000042 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  000001C8 0000004D
            | + function block  :  00000064 00000000
            |  Already listed
  03      GATT_ServiceChangedInd
          | Stack used (prev) :  000003DF 00000050
          | + function block  :  00000048 00000000
  02    GATTServApp_SendServiceChangedInd
        | Stack used (prev) :  00000427 00000050
        | + function block  :  00000012 00000000
  01  gapBondMgrSendServiceChange
      | Stack used (prev) :  00000439 00000050
      | + function block  :  0000000C 00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000445 00000054


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  HS_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000174 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  HS_WriteAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000004 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000166 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  HP_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000172 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  HP_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000209 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  HP_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  MR_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000174 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  MR_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000213 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  MR_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  PM_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000016 00000001
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000178 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  PM_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000209 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  PM_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ST_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000174 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  ST_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004D
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000213 0000004D


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  ST_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  TS_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000174 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  01  TS_WriteAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000016F 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  WC_ReadAttrCB
      | Stack used (prev) :  00000162 0000004C
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000176 0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    osal_memset
        | Stack used (prev) :  00000164 0000004E
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  02    GATTServApp_ProcessCCCWriteReq
        | Stack used (prev) :  000001A9 0000004D
        | + function block  :  0000003C 00000000
        |  Already listed
  01  WC_WriteAttrCB
      | Stack used (prev) :  000001E5 0000004E
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000213 0000004E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  00000162 0000004C
  02    linkDB_State
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000014 00000000
        |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000179 0000004C
        | + function block  :  00000022 00000000
        |  Already listed
  01  WC_HandleConnStatusCB
      | Stack used (prev) :  0000019B 0000004E
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001AD 0000004E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ErrorRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ExchangeMTURsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_FindInfoRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_FindByTypeValueRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ReadByTypeRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ReadRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ReadBlobRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ReadMultiRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ReadByGrpTypeRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_WriteRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_PrepareWriteRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_ExecuteWriteRsp::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_HandleValueNoti::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_HandleValueInd::?relay
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0 0000005A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B0 0000005A
  01  ATT_BuildErrorRsp
      | Stack used (prev) :  000004B0 0000005A
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B9 0000005B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004B9 0000005B
  01  ATT_ParseExchangeMTUReq
      | Stack used (prev) :  000004B9 0000005B
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004C6 0000005B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004C6 0000005B
  01  ATT_BuildExchangeMTURsp
      | Stack used (prev) :  000004C6 0000005B
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  000004C6 0000005E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004C6 0000005E
  01  ATT_ParseFindInfoReq
      | Stack used (prev) :  000004C6 0000005E
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004D3 0000005E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004D3 0000005E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildFindInfoRsp
      | Stack used (prev) :  000004D3 0000005E
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000004E7 0000005F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004E7 0000005F
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseFindByTypeValueReq
      | Stack used (prev) :  000004E7 0000005F
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000004FB 00000060


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000004FB 00000060
  01  ATT_BuildFindByTypeValueRsp
      | Stack used (prev) :  000004FB 00000060
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000506 00000061


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000506 00000061
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseReadByTypeReq
      | Stack used (prev) :  00000506 00000061
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000516 00000061


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000516 00000061
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByTypeRsp
      | Stack used (prev) :  00000516 00000061
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000522 00000062


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000522 00000062
  01  ATT_ParseReadReq
      | Stack used (prev) :  00000522 00000062
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000052F 00000062


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000052F 00000062
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadRsp
      | Stack used (prev) :  0000052F 00000062
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000053B 00000062


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000053B 00000062
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParseWriteReq
      | Stack used (prev) :  0000053B 00000062
      | + function block  :  00000012 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000054D 00000063


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000054D 00000063
  01  ATT_ParseReadBlobReq
      | Stack used (prev) :  0000054D 00000063
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000063


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000063
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadBlobRsp
      | Stack used (prev) :  0000055A 00000063
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000566 00000063


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000566 00000063
  01  ATT_ParseReadMultiReq
      | Stack used (prev) :  00000566 00000063
      | + function block  :  0000000E 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000574 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000574 00000064
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadMultiRsp
      | Stack used (prev) :  00000574 00000064
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000580 00000064


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000580 00000064
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildReadByGrpTypeRsp
      | Stack used (prev) :  00000580 00000064
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000058C 00000065


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000058C 00000065
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_ParsePrepareWriteReq
      | Stack used (prev) :  0000058C 00000065
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000059C 00000066


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000059C 00000066
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildPrepareWriteRsp
      | Stack used (prev) :  0000059C 00000066
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000005A8 00000067


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005A8 00000067
  01  ATT_ParseExecuteWriteReq
      | Stack used (prev) :  000005A8 00000067
      | + function block  :  00000004 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  000005AC 0000006A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005AC 0000006A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  ATT_BuildHandleValueInd
      | Stack used (prev) :  000005AC 0000006A
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParsePacket::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildErrorRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseExchangeMTUReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildExchangeMTURsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseFindInfoReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildFindInfoRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseFindByTypeValueReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildFindByTypeValueRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseReadByTypeReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildReadByTypeRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseReadReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildReadRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseWriteReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseReadBlobReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildReadBlobRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseReadMultiReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildReadMultiRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildReadByGrpTypeRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParsePrepareWriteReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildPrepareWriteRsp::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ParseExecuteWriteReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_BuildHandleValueInd::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  attSendMsg::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_CompareUUID::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  ATT_ConvertUUIDto128::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_SetParamValue::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_GetParamValue::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_ParamsInit::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_SecParamsInit::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapReadBD_ADDRStatus::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapReadBufSizeCmdStatus::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessNewAddr::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapAddAddrAdj::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapDetermineAddrType::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessRandomAddrComplete::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapGetSRK::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapGetSignCounter::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapIncSignCounter::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapUpdateConnSignCounter::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapGetDevAddressMode::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapGetDevAddress::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapGetIRK::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSendDeviceInitDoneEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_ResolvePrivateAddr::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapIsAdvertising::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapValidADType::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapFindADType::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_TerminateLinkReq::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_Signable::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_Authenticate::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_TerminateAuth::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_PasscodeUpdate::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_Bond::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessConnectionCompleteEvt::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessConnUpdateCompleteEvt::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessDisconnectCompleteEvt::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  sendEstLinkEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  sendTerminateEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSendLinkUpdateEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  disconnectNext::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  sendAuthEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapFreeAuthLink::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapFreeEstLink::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSendBondCompleteEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSendPairingReqEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapPasskeyNeededCB::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapPairingCompleteCB::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_MakeDiscoverable::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_UpdateAdvertisingData::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_EndDiscoverable::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_PeriDevMgrInit::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapPeriProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSetAdvParams::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSetAdvParamsStatus::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapWriteAdvEnableStatus::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapWriteAdvDataStatus::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapProcessAdvertisingEvt::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapSendMakeDiscEvent::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  gapFreeAdvertState::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  isLimitedDiscoverableMode::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  01  GAP_SendSlaveSecurityRequest::?relay
      | Stack used (prev) :  000005B8 0000006B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B8 0000006B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000005B8 0000006B
  02    osal_stop_timerEx
        | Stack used (prev) :  000000E6 00000032
        | + function block  :  00000018 00000000
        |  Already listed
  03      osal_clear_event
          | Stack used (prev) :  000000D7 00000030
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_msg_extract
          | Stack used (prev) :  000005B8 0000006B
          | + function block  :  0000001A 00000000
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
  02    osal_msg_send
        | Stack used (prev) :  00000030 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      smGenerateRandBuf
          | Stack used (prev) :  0000017A 00000056
          | + function block  :  00000027 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_revmemcpy
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000B 00000001
            |  Already listed
  04        smEncrypt
            | Stack used (prev) :  00000187 0000004C
            | + function block  :  00000080 00000000
            |  Already listed
  03      sm_ah
          | Stack used (prev) :  000005B8 0000006B
          | + function block  :  00000054 00000000
  02    SM_CalcRandomAddr
        | Stack used (prev) :  0000060C 0000006B
        | + function block  :  00000022 00000001
  04        l2capSendCmd
            | Stack used (prev) :  0000033F 00000050
            | + function block  :  00000046 00000000
            |  Already listed
  03      L2CAP_CmdReject
          | Stack used (prev) :  000005B8 0000006B
          | + function block  :  0000000E 00000000
  05          osal_start_reload_timer
              | Stack used (prev) :  00000183 0000004D
              | + function block  :  00000028 00000000
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        gapProcessRandomAddrComplete
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000010 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000030 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  00000018 00000001
  04        gapReadBufSizeCmdStatus
            | Stack used (prev) :  000005D0 0000006C
            | + function block  :  00000012 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_ReadBufSizeCmd
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  00000004 00000002
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  00000018 00000001
              |  Already listed
  04        gapReadBD_ADDRStatus
            | Stack used (prev) :  000005D0 0000006D
            | + function block  :  00000014 00000000
  03      gapProcessHCICmdCompleteEvt
          | Stack used (prev) :  000005E4 0000006D
          | + function block  :  00000028 00000000
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  0000001E 00000000
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Remove
            | Stack used (prev) :  000005D6 0000006B
            | + function block  :  00000014 00000000
  04        gapFreeAuthLink
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  04        disconnectNext
            | Stack used (prev) :  000001CC 0000004F
            | + function block  :  0000002A 00000000
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000024 00000001
  03      gapProcessDisconnectCompleteEvt
          | Stack used (prev) :  000005EA 0000006C
          | + function block  :  0000001C 00000000
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendLinkUpdateEvent
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000021 00000001
  03      gapProcessConnUpdateCompleteEvt
          | Stack used (prev) :  000005D9 0000006C
          | + function block  :  0000001A 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  0000001E 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        linkDB_Add
            | Stack used (prev) :  000005D6 0000006B
            | + function block  :  0000002C 00000001
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  04        gapFreeEstLink
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000016 00000002
  04        disconnectNext
            | Stack used (prev) :  000001CC 0000004F
            | + function block  :  0000002A 00000000
            |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000024 00000001
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        sendEstLinkEvent
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  0000003A 00000001
  04        gapDetermineAddrType
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000000 00000002
  03      gapProcessConnectionCompleteEvt
          | Stack used (prev) :  00000602 0000006D
          | + function block  :  00000034 00000000
  02    gapProcessOSALMsg
        | Stack used (prev) :  00000636 0000006D
        | + function block  :  00000032 00000000
  02    gapIsAdvertising
        | Stack used (prev) :  000005B8 0000006B
        | + function block  :  00000000 00000002
  02    gapGetIRK
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  04        LL_SetRandomAddress
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  00000000 00000002
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  00000076 00000006
            | + function block  :  0000002B 00000000
            |  Already listed
  03      HCI_LE_SetRandomAddressCmd
          | Stack used (prev) :  000005B8 0000006D
          | + function block  :  00000002 00000004
  03      gapAddAddrAdj
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000A 00000002
          |  Already listed
  02    gapProcessNewAddr
        | Stack used (prev) :  000005BA 00000071
        | + function block  :  00000028 00000000
  02    GAP_GetParamValue
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000014 00000002
        |  Already listed
  01  GAP_ProcessEvent
      | Stack used (prev) :  00000668 00000071
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GAP_RegisterForHCIMsgs::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GAP_Init::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GAP_ProcessEvent::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GAP_NumActiveConnections::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gapProcessOSALMsg::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gapProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gapRegisterPeripheral::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GGS_SetParameter::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GGS_AddService::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  ggs_SetAttrWPermit::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  ggs_ReadAttrCB::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  ggs_WriteAttrCB::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_InitServer::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_RegisterService::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_RegisterForReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_VerifyReadPermissions::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_VerifyWritePermissions::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_ServiceChangedInd::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_FindHandleUUID::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_FindHandle::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_FindNextAttr::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_ServiceNumAttrs::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_Indication::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  GATT_Notification::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattServiceLastHandle::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattServerProcessMsgCB::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessExchangeMTUReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessFindInfoReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessReadByTypeReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessReadReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessReadMultiReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessWriteReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattProcessExecuteWriteReq::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattGetServerStatus::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattFindServerInfo::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattServerHandleTimerCB::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  01  gattServerHandleConnStatusCB::?relay
      | Stack used (prev) :  0000068C 00000071
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C 00000071


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000068C 00000071
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
          |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcmp
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000D 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000B 00000001
              |  Already listed
  05          sm_CMAC
              | Stack used (prev) :  000001EE 0000004E
              | + function block  :  00000097 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000030 00000006
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  00000018 00000000
                | + function block  :  00000014 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          gapUpdateConnSignCounter
              | Stack used (prev) :  0000068C 00000071
              | + function block  :  00000018 00000001
  04        SM_VerifyAuthenSig
            | Stack used (prev) :  000006A4 00000071
            | + function block  :  00000081 00000001
  03      ATT_ParsePacket
          | Stack used (prev) :  00000725 00000071
          | + function block  :  00000022 00000001
  03      ATT_ErrorRsp
          | Stack used (prev) :  00000385 00000050
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattProcessRxData
        | Stack used (prev) :  00000747 00000071
        | + function block  :  00000036 00000001
  01  GATT_ProcessEvent
      | Stack used (prev) :  0000077D 00000072
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  gattRegisterServer::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  GATT_Init::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  GATT_ProcessEvent::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  gattProcessRxData::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  gattNotifyEvent::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  gattStartTimer::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  01  gattStopTimer::?relay
      | Stack used (prev) :  00000795 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000795 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000795 00000072
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  00000268 00000052
          | + function block  :  0000007B 00000000
          |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  00000268 00000052
          | + function block  :  0000007B 00000000
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000001D 00000002
              |  Already listed
  05          GATT_FindHandle
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000022 00000000
              |  Already listed
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000795 00000072
            | + function block  :  00000034 00000000
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ExecuteWriteRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessExecuteWriteReq
          | Stack used (prev) :  000007C9 00000072
          | + function block  :  0000004A 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  0000017F 0000004E
            | + function block  :  00000031 00000000
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_PrepareWriteRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessPrepareWriteReq
          | Stack used (prev) :  000007A1 00000072
          | + function block  :  0000003E 00000000
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  00000795 00000072
            | + function block  :  00000034 00000000
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  0000017F 0000004E
            | + function block  :  00000031 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_WriteRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessWriteReq
          | Stack used (prev) :  000007C9 00000072
          | + function block  :  0000004E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000268 00000052
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  0000022C 0000004E
            | + function block  :  0000003C 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  000001C8 0000004D
            | + function block  :  00000064 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000018E 0000004E
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByGrpTypeRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByGrpTypeReq
          | Stack used (prev) :  000007A1 00000072
          | + function block  :  0000004A 00000001
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000268 00000052
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadMultiRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadMultiReq
          | Stack used (prev) :  000007A1 00000072
          | + function block  :  0000003E 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000268 00000052
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  000001C8 0000004D
            | + function block  :  00000064 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  0000018E 0000004E
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByTypeRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessReadByTypeReq
          | Stack used (prev) :  000007A1 00000072
          | + function block  :  00000046 00000001
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000D 00000000
            |  Already listed
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  00000268 00000052
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  0000022C 0000004E
            | + function block  :  0000003C 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  000001C8 0000004D
            | + function block  :  00000064 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_FindByTypeValueRsp
            | Stack used (prev) :  00000795 00000072
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessFindByTypeValueReq
          | Stack used (prev) :  000007A1 00000072
          | + function block  :  00000042 00000000
  03      GATT_FindHandle
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000022 00000000
          |  Already listed
  04        attSendMsg
            | Stack used (prev) :  00000353 00000050
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadBlobRsp
          | Stack used (prev) :  00000795 00000072
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000353 00000050
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadRsp
          | Stack used (prev) :  00000795 00000072
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  00000353 00000050
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ExchangeMTURsp
          | Stack used (prev) :  00000795 00000072
          | + function block  :  0000000C 00000000
  03      ATT_ErrorRsp
          | Stack used (prev) :  00000385 00000050
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattServApp_ProcessMsg
        | Stack used (prev) :  00000817 00000073
        | + function block  :  00000038 00000000
  01  GATTServApp_ProcessEvent
      | Stack used (prev) :  0000084F 00000073
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_RegisterForMsg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_Init::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_ProcessEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_RegisterService::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_SetNumPrepareWrites::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_FindAttr::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_AddService::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_FindServiceCBs::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessMsg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessReadMultiReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessWriteReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessPrepareWriteReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_ProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_FindPrepareWriteQ::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_FindCharCfgItem::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_FindAuthorizeAttrCB::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_WriteAttrCB::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_ReadAttr::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_WriteAttr::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_UpdateCharCfg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_SendServiceChangedInd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_InitCharCfg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_ReadCharCfg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_WriteCharCfg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_ProcessCCCWriteReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_ProcessCharCfg::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  gattServApp_HandleConnStatusCB::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  GATTServApp_SendCCCUpdatedEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_bm_alloc::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_SendDataPkt::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_DisconnectCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_ReadBDADDRCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_ReadRssiCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_ReadBufSizeCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_SetRandomAddressCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_SetAdvParamCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_SetAdvDataCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_SetScanRspDataCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_SetAdvEnableCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_ClearWhiteListCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_AddWhiteListCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_RandCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_LtkReqReplyCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_LE_LtkReqNegReplyCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_EXT_ClkDivOnHaltCmd::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_RandCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EXT_SetRxGainCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EXT_SetTxPowerCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EXT_ExtendRfRangeCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_TxDataBufferInsert::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_TxDataSend::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  hciTxDataBufferReset::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_RxReqDataBufCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_RxDataCompleteCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_TxDataCompleteCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  hciInitEventMasks::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_DataBufferOverflowEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_NumOfCompletedPacketsEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_CommandCompleteEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_VendorSpecifcCommandCompleteEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_CommandStatusEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_SendCommandStatusEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_SendCommandCompleteEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  HCI_SendControllerToHostEvent::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_ConnectionCompleteCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_DisconnectCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_ConnParamUpdateCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_ReadRemoteVersionInfoCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EncLtkReqCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EncChangeCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  LL_EncKeyRefreshCback::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  L2CAP_RegisterApp::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  L2CAP_SendData::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  L2CAP_CmdReject::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  01  L2CAP_ConnParamUpdateReq::?relay
      | Stack used (prev) :  00000867 00000073
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000867 00000073


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000867 00000073
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  03      l2capNotifyData
          | Stack used (prev) :  00000867 00000073
          | + function block  :  00000010 00000000
  04        osal_bm_adjust_header
            | Stack used (prev) :  0000016E 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  03      l2capParsePacket
          | Stack used (prev) :  00000867 00000073
          | + function block  :  0000000E 00000000
  04        l2capHandleRxError
            | Stack used (prev) :  00000867 00000073
            | + function block  :  00000000 00000000
  04        l2capParseSignalHdr
            | Stack used (prev) :  00000867 00000073
            | + function block  :  00000009 00000001
  05          l2capNotifySignal
              | Stack used (prev) :  0000017C 0000004E
              | + function block  :  00000031 00000000
              |  Already listed
  05          L2CAP_ParseParamUpdateReq
              | Stack used (prev) :  00000867 00000073
              | + function block  :  0000000B 00000000
  05          L2CAP_CmdReject
              | Stack used (prev) :  000005B8 0000006B
              | + function block  :  0000000E 00000000
              |  Already listed
  04        l2capProcessReq
            | Stack used (prev) :  00000872 00000073
            | + function block  :  0000005E 00000000
  06            osal_CbTimerStop
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000C 00000000
                |  Already listed
  05          l2capStopTimer
              | Stack used (prev) :  00000867 00000073
              | + function block  :  00000009 00000000
  05          l2capFindLocalId
              | Stack used (prev) :  00000867 00000073
              | + function block  :  0000000A 00000000
  05          l2capFreeChannel
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000012 00000002
              |  Already listed
  05          l2capNotifySignal
              | Stack used (prev) :  0000017C 0000004E
              | + function block  :  00000031 00000000
              |  Already listed
  05          l2capParseParamUpdateRsp
              | Stack used (prev) :  00000867 00000073
              | + function block  :  0000000B 00000000
  05          l2capParseCmdReject
              | Stack used (prev) :  00000867 00000073
              | + function block  :  0000000C 00000000
  04        l2capProcessRsp
            | Stack used (prev) :  00000873 00000073
            | + function block  :  00000054 00000000
  04        L2CAP_CmdReject
            | Stack used (prev) :  000005B8 0000006B
            | + function block  :  0000000E 00000000
            |  Already listed
  03      l2capProcessSignal
          | Stack used (prev) :  000008D0 00000074
          | + function block  :  0000003F 00000000
  02    l2capProcessRxData
        | Stack used (prev) :  0000090F 00000074
        | + function block  :  0000002A 00000000
  01  L2CAP_ProcessEvent
      | Stack used (prev) :  00000939 00000074
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  L2CAP_Init::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  L2CAP_ProcessEvent::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  l2capProcessRxData::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  l2capProcessSignal::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  l2capProcessRsp::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  l2capProcessReq::?relay
      | Stack used (prev) :  00000951 00000074
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000951 00000074


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000951 00000074
  01  L2CAP_BuildCmdReject
      | Stack used (prev) :  00000951 00000074
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  0000095C 00000075


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000095C 00000075
  01  l2capBuildParamUpdateReq
      | Stack used (prev) :  0000095C 00000075
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capParseSignalHdr::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capSendReq::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capSendCmd::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capEncapSendData::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capParsePacket::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  L2CAP_BuildCmdReject::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capParseCmdReject::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capBuildParamUpdateReq::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  L2CAP_ParseParamUpdateReq::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capParseParamUpdateRsp::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capNotifyData::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capNotifySignal::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capAllocChannel::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capFreeChannel::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capFindLocalId::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capStopTimer::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capHandleTimerCB::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  l2capHandleRxError::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  L2CAP_bm_alloc::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Init::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Register::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Add::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Remove::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Find::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_FindFirst::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_State::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_NumActive::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_Authen::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  linkDB_PerformFunc::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  01  reportStatusChange::?relay
      | Stack used (prev) :  00000965 00000076
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000965 00000076


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000965 00000076
  02    osal_start_timerEx
        | Stack used (prev) :  00000183 0000004D
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  00000965 00000076
        | + function block  :  0000000A 00000000
  02    osal_pwrmgr_device
        | Stack used (prev) :  00000965 00000076
        | + function block  :  00000000 00000002
  03      llScheduler
          | Stack used (prev) :  000001E3 00000052
          | + function block  :  00000030 00000000
          |  Already listed
  04        PHY_SetEndConnection
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000000 00000002
            |  Already listed
  04        llFreeTask
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  05          HCI_NumOfCompletedPacketsEvent
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000012 00000001
              |  Already listed
  05          hciTxDataBufferReset
              | Stack used (prev) :  0000016B 0000004C
              | + function block  :  00000022 00000000
              |  Already listed
  05          HCI_TxDataSend
              | Stack used (prev) :  0000029A 0000004F
              | + function block  :  00000029 00000000
              |  Already listed
  04        LL_TxDataCompleteCback
            | Stack used (prev) :  00000965 00000076
            | + function block  :  00000004 00000002
  03      llConnCleanup
          | Stack used (prev) :  00000969 00000078
          | + function block  :  0000001D 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_DisconnectCback
          | Stack used (prev) :  00000965 00000076
          | + function block  :  0000000C 00000001
  02    llConnTerminate
        | Stack used (prev) :  00000986 00000078
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    LL_ConnectionCompleteCback
        | Stack used (prev) :  00000965 00000076
        | + function block  :  00000023 00000001
  01  LL_ProcessEvent
      | Stack used (prev) :  00000988 00000078
      | + function block  :  00000026 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_Init::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_ProcessEvent::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_Reset::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_ReadBDADDR::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_SetRandomAddress::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_ClearWhiteList::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_AddWhiteListDevice::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_Encrypt::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_Rand::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_PseudoRand::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_CtrlToHostFlowControl::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_ReadRssi::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_Disconnect::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_TxData::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_SetAdvParam::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_SetAdvData::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_SetAdvControl::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_SetScanRspData::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_EncLtkReply::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_EncLtkNegReply::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_ConnActive::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  01  LL_EXT_ClkDivOnHalt::?relay
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 00000078


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 00000078
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    llDisableT2IntsEvts
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000000
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  01  llDirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  000009AE 00000078
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  000009AE 0000007A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009AE 0000007A
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000000
  02    PHY_ConfigureAppendRfStatus
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetMaxNack
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000002
  02    PHY_SetSyncWord
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000010 00000000
        |  Already listed
  02    PHY_InitSeqStat
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000002
  02    PHY_SetDataChan
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetCRCInit
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000010 00000000
        |  Already listed
  03      llDivide31By16To16
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcTimerDrift
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000017 00000000
  03      llDivide31By16To16
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcScaFactor
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  0000000D 00000000
  02    llAdjustTimeBackward
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  0000000B 00000000
  02    llGetTimer2Capture
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000003
  02    llFreeTask
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    llAllocTask
        | Stack used (prev) :  00000166 0000004F
        | + function block  :  00000014 00000000
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  02    llConvertCtrlProcTimeoutToEvent
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  0000000A 00000000
  02    llConvertLstoToEvent
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  0000000A 00000000
  02    llConnCleanup
        | Stack used (prev) :  00000969 00000078
        | + function block  :  0000001D 00000000
        |  Already listed
  02    llAllocConnId
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000009 00000001
  02    llGetNextDataChan
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  0000000B 00000001
  02    llProcessChanMap
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000018 00000001
        |  Already listed
  01  llAdvEvt_TaskConnect
      | Stack used (prev) :  000009C5 0000007D
      | + function block  :  00000034 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000009F9 0000007D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000009F9 0000007D
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
  02    llGetTaskState
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  01  llUndirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  000009F9 0000007F
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A19 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A19 0000007F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  01  llDiscoverableAdvEvt_TaskEndOk
      | Stack used (prev) :  00000A19 0000007F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A29 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A29 0000007F
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    PHY_SetAdvChans
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  01  llNonConnAdvEvt_TaskEndOk
      | Stack used (prev) :  00000A29 0000007F
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 0000007F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 0000007F
  02    llGetTaskState
        | Stack used (prev) :  000009F9 0000007D
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  01  llAdvEvt_TaskAbort
      | Stack used (prev) :  00000A39 0000007F
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llDirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llAdvEvt_TaskConnect::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llUndirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llDiscoverableAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llNonConnAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llAdvEvt_TaskAbort::?relay
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A39 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A39 00000083
  01  llStartSlaveSetup
      | Stack used (prev) :  00000A39 00000083
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llRfInit::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetFreqTune::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llClearSetInts::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llProcessPostRfOps::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llFindTxPowerSettings::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llExtendRfRange::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llCheckWhiteListUsage::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupAdv::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupDirectedAdvEvt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupUndirectedAdvEvt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupNonConnectableAdvEvt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupScannableAdvEvt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llStartAdvSetup::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llStartSlaveSetup::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupEncRsp::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupStartEncReq::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupStartEncRsp::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupPauseEncRsp::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupRejectInd::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupFeatureSetRsp::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupVersionIndReq::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupTermInd::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSetupUnknownRsp::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llEnqueueCtrlPkt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llDequeueCtrlPkt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llReplaceCtrlPkt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llProcessChanMap::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llAllocConnId::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llReleaseAllConnId::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llGetNextConn::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llConnCleanup::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llConnTerminate::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llInitFeatureSet::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llConvertLstoToEvent::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llConvertCtrlProcTimeoutToEvent::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llAdjustForMissedEvent::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llProcessPendingTxData::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llWriteTxData::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llMemCopySrc::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_ReverseBytes::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_GeneratePseudoRandNum::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_GenerateTrueRandNum::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_GenDeviceSKD::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_GenDeviceIV::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_AES128_Encrypt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_InitAesDMA::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_MoveData::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_LoadEmptyIV::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_EncryptMsg::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_DecryptMsg::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_GenerateMIC::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_Encrypt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  LL_ENC_Decrypt::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llUnexpectedEndCauseHandler
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llUnexpectedEndCauseHandler::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSchedulerInit::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llScheduler::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llScheduleTask::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llFindNextSecTask::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llAllocTask::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llFreeTask::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llGetCurrentTask::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llGetTaskState::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llGetActiveTasks::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llGetNumTasks::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSave_txFIFO::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llSave_rxFIFO::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  01  llRestoreConnState::?relay
      | Stack used (prev) :  00000A42 00000083
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A42 00000083


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A42 00000083
  02    osal_mem_free
        | Stack used (prev) :  00000000 00000000
        | + function block  :  0000000A 00000002
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000000
        |  Already listed
  02    PHY_RetryRxFifo
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000000
        |  Already listed
  02    llGetTimer2Capture
        | Stack used (prev) :  000009AE 0000007A
        | + function block  :  00000000 00000003
        |  Already listed
  03      LL_ENC_AES128_Encrypt
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000B 00000000
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  00000986 00000078
          | + function block  :  00000012 00000000
          |  Already listed
  03      llReplaceCtrlPkt
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000003
          |  Already listed
  03      llDequeueCtrlPkt
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000A 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupUnknownRsp
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  000009AE 0000007A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupTermInd
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  000009AE 0000007A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupVersionIndReq
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  000009AE 0000007A
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupFeatureSetRsp
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  000009AE 0000007A
            | + function block  :  00000000 00000002
            |  Already listed
  03      llSetupRejectInd
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000009 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupPauseEncRsp
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  0000020F 0000004E
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupStartEncRsp
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000000
  03      llSetupStartEncReq
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000000 00000002
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00000A42 00000083
            | + function block  :  0000000A 00000001
  03      llSetupEncRsp
          | Stack used (prev) :  00000A4C 00000083
          | + function block  :  00000012 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncKeyRefreshCback
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_EncChangeCback
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        LL_EncLtkNegReply
            | Stack used (prev) :  0000016D 0000004D
            | + function block  :  00000000 00000004
            |  Already listed
  03      LL_EncLtkReqCback
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000018 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ReadRemoteVersionInfoCback
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000014 00000001
  02    llProcessSlaveControlProcedures
        | Stack used (prev) :  00000A5E 00000085
        | + function block  :  0000002A 00000000
  03      PHY_SetEndConnection
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000002
          |  Already listed
  03      llCalcTimerDrift
          | Stack used (prev) :  000009AE 0000007A
          | + function block  :  00000017 00000000
          |  Already listed
  03      llAdjustTimeBackward
          | Stack used (prev) :  000009AE 0000007A
          | + function block  :  0000000B 00000000
          |  Already listed
  04        ll24BitTimeCompare
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000013 00000000
            |  Already listed
  04        llGetCurrentTime
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000004 00000003
            |  Already listed
  03      llAdjustForMissedEvent
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000018 00000002
  03      llConvertCtrlProcTimeoutToEvent
          | Stack used (prev) :  000009AE 0000007A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConvertLstoToEvent
          | Stack used (prev) :  000009AE 0000007A
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llEventDelta
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000000 00000000
  03      llEventInRange
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000002 00000002
  03      llConnTerminate
          | Stack used (prev) :  00000986 00000078
          | + function block  :  00000012 00000000
          |  Already listed
  03      llSetNextDataChan
          | Stack used (prev) :  0000017A 0000004C
          | + function block  :  00000016 00000002
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  03      LL_ConnParamUpdateCback
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000014 00000001
  02    llSetupNextSlaveEvent
        | Stack used (prev) :  00000A5A 00000083
        | + function block  :  0000003E 00000002
  02    llScheduler
        | Stack used (prev) :  000001E3 00000052
        | + function block  :  00000030 00000000
        |  Already listed
  03      LL_ENC_GenerateMIC
          | Stack used (prev) :  00000191 0000004E
          | + function block  :  0000007E 00000000
          |  Already listed
  03      LL_ENC_DecryptMsg
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  0000004A 00000001
  02    LL_ENC_Decrypt
        | Stack used (prev) :  00000A8C 00000083
        | + function block  :  0000003E 00000001
  02    LL_ENC_MoveData
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000B 00000000
        |  Already listed
  02    LL_ENC_GenDeviceIV
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  00000000 00000003
  02    LL_ENC_GenDeviceSKD
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  00000000 00000003
  02    LL_ENC_ReverseBytes
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  0000000A 00000001
        |  Already listed
  02    llMemCopySrc
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  00000000 00000003
  03      llWriteTxData
          | Stack used (prev) :  00000249 0000004E
          | + function block  :  0000002A 00000000
          |  Already listed
  03      LL_TxDataCompleteCback
          | Stack used (prev) :  00000965 00000076
          | + function block  :  00000004 00000002
          |  Already listed
  02    llProcessPendingTxData
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  0000000A 00000000
  02    llConnTerminate
        | Stack used (prev) :  00000986 00000078
        | + function block  :  00000012 00000000
        |  Already listed
  02    llEnqueueCtrlPkt
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  0000000B 00000001
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
          |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000030 00000006
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  00000018 00000000
          | + function block  :  00000014 00000000
          |  Already listed
  03      LL_CtrlToHostFlowControl
          | Stack used (prev) :  00000A42 00000083
          | + function block  :  00000000 00000002
  02    LL_RxDataCompleteCback
        | Stack used (prev) :  00000A42 00000085
        | + function block  :  0000001E 00000000
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      HCI_bm_alloc
          | Stack used (prev) :  0000016C 0000004C
          | + function block  :  00000000 00000004
          |  Already listed
  02    LL_RxReqDataBufCback
        | Stack used (prev) :  00000A42 00000083
        | + function block  :  0000000A 00000000
  01  llSlaveEvt_TaskEndOk
      | Stack used (prev) :  00000ACA 00000086
      | + function block  :  00000030 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSlaveEvt_TaskAbort
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSlaveEvt_TaskEndOk::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSlaveEvt_TaskAbort::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSetupNextSlaveEvent::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llProcessSlaveControlProcedures::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llInitTimer2::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llStopTimer2::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llStartTimer2::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSetT2LongC1Timeout::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSetT2C1Event1::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSetT2LongC1Event1::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llSetT2OVFC2Event2::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llDisableT2Ints::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llDisableT2IntsEvts::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llDisableT2E1::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llGetTimer2Capture::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llGetCurrentTime::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  llGetFullCTandST::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  ll_McuPrecisionCount::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_Init::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_Reset::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ClearAllRegsAndFifos::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetOwnAddr::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetPeerAddr::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetCRCInit::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_GetAdvChans::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetAdvChans::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetEndConnection::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ConfigureMD::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_GetEndCause::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_InitSeqStat::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetSyncWord::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetMaxNack::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ClearWhitelist::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_AddWlEntry::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetAdvWlPolicy::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetBlacklistIndex::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ClearBlacklistIndex::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ClearBlacklist::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ClearSavedWhiteList::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ConfigureFifoDataProcessing::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ConfigureAppendRfStatus::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetFifoConfig::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_ConfigWhitener::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_RetryTxFifo::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_RetryRxFifo::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_CommitRxFifo::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_DeallocateRxFifo::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  PHY_SetRfFreq::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  phyFindWlEntry::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  SM_CalcRandomAddr::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  SM_ResolveRandomAddrs::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  SM_GenerateAuthenSig::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  SM_VerifyAuthenSig::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smProcessRandComplete::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smStartRspTimer::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smStopRspTimer::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  sm_ah::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  sm_c1new::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  sm_xor::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  sm_s1::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smGenerateRandBuf::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smAuthReqToUint8::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smUint8ToAuthReq::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  smEncrypt::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  sm_CMAC::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  generate_subkey::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  xor_128::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  01  leftshift_onebit::?relay
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AFA 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AFA 00000086
  02    smFreePairingParams
        | Stack used (prev) :  00000162 0000004E
        | + function block  :  00000012 00000004
        |  Already listed
  01  smLinkCheck
      | Stack used (prev) :  00000AFA 00000086
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  SM_StartPairing::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  SM_PasskeyUpdate::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smRegisterResponder::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smLinkCheck::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smTimedOut::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smProcessDataMsg::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smSendFailAndEnd::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smProcessEncryptChange::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smNextPairingState::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  sm_c1::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smProcessPairingReq::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smStartEncryption::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smGeneratePairingReqRsp::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smGenerateConfirm::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smGenerateRandMsg::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smSavePairInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smPairingSendEncInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smPairingSendMasterID::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smPairingSendIdentityInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smPairingSendIdentityAddrInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smPairingSendSingingInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smFreePairingParams::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smEndPairing::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smDetermineKeySize::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smSetPairingReqRsp::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  SM_ResponderInit::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smResponderProcessLTKReq::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smpResponderProcessIncoming::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smpResponderProcessPairingReq::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smpResponderProcessPairingRandom::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smpResponderProcessMasterID::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  01  smResponderSendNextKeyInfo::?relay
      | Stack used (prev) :  00000B03 00000086
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B03 00000086


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B03 00000086
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_send
        | Stack used (prev) :  00000030 00000006
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000009 00000000
          |  Already listed
  04        smEndPairing
            | Stack used (prev) :  000001FA 00000052
            | + function block  :  0000002E 00000000
            |  Already listed
  04        smEndPairing
            | Stack used (prev) :  000001FA 00000052
            | + function block  :  0000002E 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000030 00000006
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  00000018 00000000
              | + function block  :  00000014 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        gapSendBondCompleteEvent
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  00000010 00000001
  03      smProcessEncryptChange
          | Stack used (prev) :  00000B13 00000087
          | + function block  :  00000018 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000A 00000000
              |  Already listed
  04        smpParseSecurityReq
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  00000000 00000002
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseSigningInfo
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityAddrInfo
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000001
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseIdentityInfo
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseMasterID
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParseEncInfo
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  04        smpParsePairingFailed
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  00000000 00000003
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingRandom
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        smpParsePairingConfirm
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000000C 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000A 00000000
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        smpParsePairingReq
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  00000013 00000001
  05          smSendSMMsg
              | Stack used (prev) :  00000353 00000050
              | + function block  :  00000028 00000000
              |  Already listed
  05          smEndPairing
              | Stack used (prev) :  000001FA 00000052
              | + function block  :  0000002E 00000000
              |  Already listed
  04        smSendFailAndEnd
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000002B 00000000
  04        smStartRspTimer
            | Stack used (prev) :  000001A3 0000004E
            | + function block  :  00000024 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      smProcessDataMsg
          | Stack used (prev) :  00000B2E 00000089
          | + function block  :  0000003E 00000000
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000030 00000006
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  00000018 00000000
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  06            llGetCurrentTask
                | Stack used (prev) :  000000D7 00000030
                | + function block  :  00000000 00000002
                |  Already listed
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  05          LL_Rand
              | Stack used (prev) :  00000B03 00000086
              | + function block  :  0000000C 00000000
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  00000076 00000006
              | + function block  :  0000002B 00000000
              |  Already listed
  04        HCI_LE_RandCmd
            | Stack used (prev) :  00000B0F 00000086
            | + function block  :  00000012 00000004
  03      smProcessRandComplete
          | Stack used (prev) :  00000B21 0000008A
          | + function block  :  00000018 00000000
  02    smProcessOSALMsg
        | Stack used (prev) :  00000B6C 0000008A
        | + function block  :  00000020 00000000
  03      smEndPairing
          | Stack used (prev) :  000001FA 00000052
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smNextPairingState
        | Stack used (prev) :  00000B03 00000086
        | + function block  :  00000000 00000002
  03      smEndPairing
          | Stack used (prev) :  000001FA 00000052
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smTimedOut
        | Stack used (prev) :  00000B03 00000086
        | + function block  :  00000000 00000002
  01  SM_ProcessEvent
      | Stack used (prev) :  00000B8C 0000008A
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BA4 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BA4 0000008A
  01  SM_Init::?relay
      | Stack used (prev) :  00000BA4 0000008A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BA4 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BA4 0000008A
  01  SM_ProcessEvent::?relay
      | Stack used (prev) :  00000BA4 0000008A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BA4 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BA4 0000008A
  01  smProcessOSALMsg::?relay
      | Stack used (prev) :  00000BA4 0000008A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BA4 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BA4 0000008A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingConfirm
      | Stack used (prev) :  00000BA4 0000008A
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BB0 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BB0 0000008A
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildPairingRandom
      | Stack used (prev) :  00000BB0 0000008A
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BBC 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BBC 0000008A
  01  smpBuildPairingFailed
      | Stack used (prev) :  00000BBC 0000008A
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BBC 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BBC 0000008D
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildEncInfo
      | Stack used (prev) :  00000BBC 0000008D
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BC8 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BC8 0000008D
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildMasterID
      | Stack used (prev) :  00000BC8 0000008D
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BD4 0000008E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BD4 0000008E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityInfo
      | Stack used (prev) :  00000BD4 0000008E
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE0 0000008E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE0 0000008E
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildIdentityAddrInfo
      | Stack used (prev) :  00000BE0 0000008E
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BEC 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BEC 0000008F
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  01  smpBuildSigningInfo
      | Stack used (prev) :  00000BEC 0000008F
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF8 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF8 0000008F
  02    smAuthReqToUint8
        | Stack used (prev) :  00000162 0000004C
        | + function block  :  00000000 00000002
        |  Already listed
  01  smpBuildSecurityReq
      | Stack used (prev) :  00000BF8 0000008F
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingReq::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingRsp::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingReqRsp::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParsePairingReq::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingConfirm::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParsePairingConfirm::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingRandom::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParsePairingRandom::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildPairingFailed::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParsePairingFailed::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildEncInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseEncInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildMasterID::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseMasterID::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildIdentityInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildIdentityAddrInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseIdentityInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseIdentityAddrInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildSigningInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseSigningInfo::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpBuildSecurityReq::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smpParseSecurityReq::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  01  smSendSMMsg::?relay
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C01 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C01 00000090
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  HCI_ProcessEvent
      | Stack used (prev) :  00000C01 00000090
      | + function block  :  0000000A 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  HCI_Init::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  HCI_ProcessEvent::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  HCI_GAPTaskRegister::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  HCI_L2CAPTaskRegister::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  HCI_SMPTaskRegister::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_strlen::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_memcpy::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_revmemcpy::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_memdup::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_memcmp::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_memset::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_rand::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_allocate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_deallocate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_send::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_enqueue_push::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_receive::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_enqueue::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_push::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_msg_extract::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_set_event::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_clear_event::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_int_disable::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_init_system::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_start_system::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_run_system::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_isbufset::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalTimeUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_mem_init::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_mem_kick::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_mem_alloc::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_mem_free::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_pwrmgr_init::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_pwrmgr_device::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_pwrmgr_task_state::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_pwrmgr_powerconserve::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalTimerInit::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalAddTimer::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalFindTimer::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalDeleteTimer::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_start_timerEx::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_start_reload_timer::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_stop_timerEx::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_get_timeoutEx::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalTimerUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_next_timeout::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osal_GetSystemClock::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  osalInitTasks::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  InitBoard::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  Onboard_rand::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  RegisterForKeys::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  OnBoard_SendKeys::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  OnBoard_KeyCallback::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppInit::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppStandby::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppActive::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppTimeSet::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppMotorRun::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppTimeUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppHitpointUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppBatteryUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppHistoryUpdate::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppDoubleClickHandler::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppAccDataReadyHandler::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppChargerStateChangeHandler::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppHpReminds::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  AppChargerRemind::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  BT_AddService::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  BT_SetParameter::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  BT_ReadAttrCB::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  BT_WriteAttrCB::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  01  BT_HandleConnStatusCB::?relay
      | Stack used (prev) :  00000C0B 00000090
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C0B 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000C0B 00000090
  05          smRegisterResponder
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000000 00000002
  04        SM_ResponderInit
            | Stack used (prev) :  00000C0B 00000092
            | + function block  :  00000000 00000004
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          gapRegisterPeripheral
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000000 00000002
  04        GAP_PeriDevMgrInit
            | Stack used (prev) :  00000C0B 00000092
            | + function block  :  00000012 00000000
  05          osal_isbufset
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  0000000A 00000000
  05          smGenerateRandBuf
              | Stack used (prev) :  0000017A 00000056
              | + function block  :  00000027 00000000
              |  Already listed
  04        GAP_SecParamsInit
            | Stack used (prev) :  00000C15 00000090
            | + function block  :  00000014 00000000
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  06            LL_ReadBDADDR
                | Stack used (prev) :  00000C0B 00000090
                | + function block  :  00000000 00000003
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_ReadBDADDRCmd
              | Stack used (prev) :  00000C0B 00000093
              | + function block  :  0000000E 00000004
  04        GAP_ParamsInit
            | Stack used (prev) :  00000C19 00000097
            | + function block  :  00000012 00000000
  03      GAP_DeviceInit
          | Stack used (prev) :  00000C29 00000097
          | + function block  :  00000020 00000000
  02    GAPRole_StartDevice
        | Stack used (prev) :  00000C49 00000097
        | + function block  :  0000001C 00000000
  02    GAPRole_GetParameter
        | Stack used (prev) :  00000176 0000004E
        | + function block  :  00000018 00000000
        |  Already listed
  02    GAPRole_SetParameter
        | Stack used (prev) :  0000040F 00000052
        | + function block  :  00000020 00000000
        |  Already listed
  03      GATTServApp_RegisterForMsg
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000002
  03      GAP_SetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
          |  Already listed
  02    GAPBondMgr_Register
        | Stack used (prev) :  00000C0B 00000092
        | + function block  :  00000000 00000004
  03      WC_SetParameter
          | Stack used (prev) :  00000448 00000052
          | + function block  :  00000022 00000000
          |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  0000017F 0000004C
          | + function block  :  0000003E 00000002
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    wechatSendData
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  00000030 00000000
  02    wechatSendData
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  00000030 00000000
        |  Already listed
  02    wechatSendData
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  00000030 00000000
        |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  02    wechatSendReqDataFree
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  00000012 00000002
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      PM_GetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000C 00000001
  07              memcpy
                  | Stack used (prev) :  00000C0B 00000090
                  | + function block  :  0000000C 00000001
  07              epb_pack_buf_remain
                  | Stack used (prev) :  00000C0B 00000090
                  | + function block  :  00000013 00000004
  06            epb_pack_varint32_bits
                | Stack used (prev) :  00000C1E 00000094
                | + function block  :  0000003A 00000000
  07              epb_pack_buf_remain
                  | Stack used (prev) :  00000C0B 00000090
                  | + function block  :  00000013 00000004
                  |  Already listed
  07              sizeof_tag
                  | Stack used (prev) :  00000C0B 00000090
                  | + function block  :  00000010 00000000
  06            epb_pack_tag
                | Stack used (prev) :  00000C1E 00000094
                | + function block  :  0000002E 00000000
  05          epb_set_uint32
              | Stack used (prev) :  00000C58 00000094
              | + function block  :  00000034 00000000
  05          epb_get_packed_size
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000000 00000002
  05          epb_pack_init
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000002 00000002
  04        epb_mmopen_pack_step_data_item
            | Stack used (prev) :  00000C8C 00000094
            | + function block  :  00000048 00000000
  06            sizeof_tag
                | Stack used (prev) :  00000C0B 00000090
                | + function block  :  00000010 00000000
                |  Already listed
  05          epb_varint32_pack_size
              | Stack used (prev) :  00000C1B 00000090
              | + function block  :  00000030 00000000
  04        epb_mmopen_step_data_item_pack_size
            | Stack used (prev) :  00000C4B 00000090
            | + function block  :  0000003A 00000000
  06            memcpy
                | Stack used (prev) :  00000C0B 00000090
                | + function block  :  0000000C 00000001
                |  Already listed
  06            epb_pack_varint32_bits
                | Stack used (prev) :  00000C1E 00000094
                | + function block  :  0000003A 00000000
                |  Already listed
  06            epb_pack_tag
                | Stack used (prev) :  00000C1E 00000094
                | + function block  :  0000002E 00000000
                |  Already listed
  06            epb_pack_buf_remain
                | Stack used (prev) :  00000C0B 00000090
                | + function block  :  00000013 00000004
                |  Already listed
  05          epb_set_bytes
              | Stack used (prev) :  00000C58 00000094
              | + function block  :  0000002C 00000000
  04        epb_set_message
            | Stack used (prev) :  00000C84 00000094
            | + function block  :  0000000C 00000004
  04        epb_set_bytes
            | Stack used (prev) :  00000C58 00000094
            | + function block  :  0000002C 00000000
            |  Already listed
  04        epb_get_packed_size
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000000 00000002
            |  Already listed
  04        epb_pack_init
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_mmopen_pack_wristband_request
          | Stack used (prev) :  00000CD4 00000098
          | + function block  :  0000003A 00000000
  04        epb_mmopen_step_data_item_pack_size
            | Stack used (prev) :  00000C4B 00000090
            | + function block  :  0000003A 00000000
            |  Already listed
  05          epb_varint32_pack_size
              | Stack used (prev) :  00000C1B 00000090
              | + function block  :  00000030 00000000
              |  Already listed
  04        epb_length_delimited_pack_size
            | Stack used (prev) :  00000C4B 00000090
            | + function block  :  00000020 00000000
  03      epb_mmopen_wristband_request_pack_size
          | Stack used (prev) :  00000C85 00000090
          | + function block  :  0000001C 00000000
  03      wechatSendReqDataFree
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000012 00000002
          |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    wechatSendReqDataInit
        | Stack used (prev) :  00000D0E 00000098
        | + function block  :  00000036 00000000
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  02    wechatInitReqDataFree
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  00000010 00000002
  05          epb_get_packed_size
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000000 00000002
              |  Already listed
  05          epb_pack_init
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  00000002 00000002
              |  Already listed
  04        epb_pack_base_request
            | Stack used (prev) :  00000C0D 00000092
            | + function block  :  0000002C 00000004
  04        epb_set_message
            | Stack used (prev) :  00000C84 00000094
            | + function block  :  0000000C 00000004
            |  Already listed
  04        epb_set_bytes
            | Stack used (prev) :  00000C58 00000094
            | + function block  :  0000002C 00000000
            |  Already listed
  04        epb_get_packed_size
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000000 00000002
            |  Already listed
  04        epb_pack_init
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_pack_init_request
          | Stack used (prev) :  00000C90 00000098
          | + function block  :  00000036 00000000
  04        epb_length_delimited_pack_size
            | Stack used (prev) :  00000C4B 00000090
            | + function block  :  00000020 00000000
            |  Already listed
  03      epb_init_request_pack_size
          | Stack used (prev) :  00000C6B 00000090
          | + function block  :  00000018 00000000
  03      wechatInitReqDataFree
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000010 00000002
          |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    wechatInitReqDataInit
        | Stack used (prev) :  00000CC6 00000098
        | + function block  :  00000032 00000000
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  02    wechatAuthReqDataFree
        | Stack used (prev) :  00000C0B 00000090
        | + function block  :  0000000E 00000002
  03      strlen
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
          |  Already listed
  04        epb_pack_base_request
            | Stack used (prev) :  00000C0D 00000092
            | + function block  :  0000002C 00000004
            |  Already listed
  04        epb_set_message
            | Stack used (prev) :  00000C84 00000094
            | + function block  :  0000000C 00000004
            |  Already listed
  05          epb_set_bytes
              | Stack used (prev) :  00000C58 00000094
              | + function block  :  0000002C 00000000
              |  Already listed
  04        epb_set_string
            | Stack used (prev) :  00000C84 00000094
            | + function block  :  0000000C 00000004
  04        epb_set_bytes
            | Stack used (prev) :  00000C58 00000094
            | + function block  :  0000002C 00000000
            |  Already listed
  05          epb_set_uint32
              | Stack used (prev) :  00000C58 00000094
              | + function block  :  00000034 00000000
              |  Already listed
  04        epb_set_enum
            | Stack used (prev) :  00000C8C 00000094
            | + function block  :  00000022 00000000
  05          epb_set_uint32
              | Stack used (prev) :  00000C58 00000094
              | + function block  :  00000034 00000000
              |  Already listed
  04        epb_set_int32
            | Stack used (prev) :  00000C8C 00000094
            | + function block  :  0000000C 00000004
  04        epb_get_packed_size
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000000 00000002
            |  Already listed
  04        epb_pack_init
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000002 00000002
            |  Already listed
  04        osal_mem_free
            | Stack used (prev) :  00000000 00000000
            | + function block  :  0000000A 00000002
            |  Already listed
  04        osal_mem_alloc
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000018 00000000
            |  Already listed
  03      epb_pack_auth_request
          | Stack used (prev) :  00000CAE 00000098
          | + function block  :  00000032 00000000
  04        epb_length_delimited_pack_size
            | Stack used (prev) :  00000C4B 00000090
            | + function block  :  00000020 00000000
            |  Already listed
  04        epb_varint32_pack_size
            | Stack used (prev) :  00000C1B 00000090
            | + function block  :  00000030 00000000
            |  Already listed
  03      epb_auth_request_pack_size
          | Stack used (prev) :  00000C6B 00000090
          | + function block  :  0000001C 00000000
  03      wechatAuthReqDataFree
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000E 00000002
          |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  00000000 00000000
          | + function block  :  0000000A 00000002
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  02    wechatAuthReqDataInit
        | Stack used (prev) :  00000CE0 00000098
        | + function block  :  00000026 00000000
  02    systemStandby
        | Stack used (prev) :  0000042F 00000056
        | + function block  :  00000012 00000004
        |  Already listed
  04        Recursive system consisting of
             | HalLedBlink
             | HalLedSet
            | Stack used (prev) :  0000017F 0000004C
            | + function block  :  0000003E 00000002
            |  Already listed
  03      AppChargerRemind
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000002
  03      AppChargerRemind
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000002
          |  Already listed
  03      AppChargerRemind
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000002
          |  Already listed
  02    AppChargerStateChangeHandler
        | Stack used (prev) :  00000C0B 00000092
        | + function block  :  00000000 00000004
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ProcessCharCfg
            | Stack used (prev) :  000003DF 00000052
            | + function block  :  00000069 00000000
            |  Already listed
  03      PM_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000F 00000000
  04        HalI2CDisable
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000001
            |  Already listed
  04        HalI2CInit
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  03      HalAccReadFifoData
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000A 00000000
  02    AppAccDataReadyHandler
        | Stack used (prev) :  00000C1A 00000090
        | + function block  :  000000B6 00000002
  04        HalI2CDisable
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CWrite
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000001
            |  Already listed
  04        HalI2CInit
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  03      HalAccClearTapIntr
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000001 00000002
  04        HP_GetParameter
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000000 00000003
  04        Recursive system consisting of
             | HalLedBlink
             | HalLedSet
            | Stack used (prev) :  0000017F 0000004C
            | + function block  :  0000003E 00000002
            |  Already listed
  03      AppHpReminds
          | Stack used (prev) :  00000C0B 00000093
          | + function block  :  00000013 00000004
  02    AppDoubleClickHandler
        | Stack used (prev) :  00000C1E 00000097
        | + function block  :  00000000 00000004
  03      PM_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000F 00000000
          |  Already listed
  04        GATTServApp_ProcessCharCfg
            | Stack used (prev) :  000003DF 00000052
            | + function block  :  00000069 00000000
            |  Already listed
  03      HP_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000011 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      HS_GetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      HS_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000E 00000000
  02    AppHistoryUpdate
        | Stack used (prev) :  00000C1C 00000090
        | + function block  :  0000004A 00000001
  03      HalAdcSetReference
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000002
  03      HalAdcRead
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000A 00000000
  04        GATTServApp_ProcessCharCfg
            | Stack used (prev) :  000003DF 00000052
            | + function block  :  00000069 00000000
            |  Already listed
  03      BT_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000011 00000000
  02    AppBatteryUpdate
        | Stack used (prev) :  00000C1C 00000092
        | + function block  :  00000016 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  04        GATTServApp_ProcessCharCfg
            | Stack used (prev) :  000003DF 00000052
            | + function block  :  00000069 00000000
            |  Already listed
  03      MR_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000F 00000000
  03      HP_GetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000000 00000003
          |  Already listed
  03      HP_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000011 00000000
          |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  0000017F 0000004C
          | + function block  :  0000003E 00000002
          |  Already listed
  03      AppHpReminds
          | Stack used (prev) :  00000C0B 00000093
          | + function block  :  00000013 00000004
          |  Already listed
  03      AppHpReminds
          | Stack used (prev) :  00000C0B 00000093
          | + function block  :  00000013 00000004
          |  Already listed
  02    AppHitpointUpdate
        | Stack used (prev) :  00000C1E 00000097
        | + function block  :  00000022 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      TS_GetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      TS_SetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000C 00000000
  02    AppTimeUpdate
        | Stack used (prev) :  00000C17 00000090
        | + function block  :  0000000C 00000004
  04        HalI2CDisable
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CWrite
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000001
            |  Already listed
  04        HalI2CInit
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  03      HalAccActive
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000001 00000002
  04        HalI2CDisable
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CWrite
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000001
            |  Already listed
  04        HalI2CInit
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  03      HalAccReset
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000001 00000002
  04        HalI2CDisable
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CWrite
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalI2CRead
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000009 00000001
            |  Already listed
  04        HalI2CInit
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000000 00000002
            |  Already listed
  03      HalAccInit
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  00000001 00000002
  02    AppActive
        | Stack used (prev) :  00000C0C 00000092
        | + function block  :  00000000 00000004
  03      TS_GetParameter
          | Stack used (prev) :  00000C0B 00000090
          | + function block  :  0000000C 00000000
          |  Already listed
  03      AppTimeSet
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000000F 00000002
          |  Already listed
  02    AppInit
        | Stack used (prev) :  00000C17 00000090
        | + function block  :  0000001E 00000000
  02    osal_start_timerEx
        | Stack used (prev) :  00000183 0000004D
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000015 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  Betwine_ProcessEvent
      | Stack used (prev) :  00000D44 0000009B
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  Betwine_Init::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  Betwine_ProcessEvent::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  peripheralStateNotificationCB::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  systemStandby::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  motorrunChangeCB::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  timesetChangeCB::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatChangeCB::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatAuthReqDataInit::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatAuthReqDataFree::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatInitReqDataInit::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatInitReqDataFree::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatSendReqDataInit::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatSendReqDataFree::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatSendData::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  wechatDataDecode::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  DevInfo_AddService::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  DevInfo_SetParameter::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  devInfo_ReadAttrCB::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  sizeof_tag::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_tag_value_offset::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_varint32_bits::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_init::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_has_tag::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_uint32::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_int32::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_enum::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_bytes::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_string::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_message::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_buf_remain::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_tag::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_varint32_bits::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_init::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_get_packed_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_uint32::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_int32::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_enum::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_bytes::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_string::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_set_message::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_varint32_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_length_delimited_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_base_request::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_base_response::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_base_push::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_auth_request_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_auth_request::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_auth_response::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_auth_response_free::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_init_request_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_pack_init_request::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_init_response::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_init_response_free::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_send_data_response::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_send_data_response_free::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_recv_data_push::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_unpack_recv_data_push_free::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_mmopen_step_data_item_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_mmopen_pack_step_data_item::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_mmopen_wristband_request_pack_size::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  epb_mmopen_pack_wristband_request::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  01  GAP_DeviceInit::?relay
      | Stack used (prev) :  00000D60 0000009B
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D60 0000009B


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000D60 0000009B
  07              HalFlashRead
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  0000000D 00000001
  07              osal_memcmp
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  0000000D 00000000
                  |  Already listed
  06            verifyWordM
                | Stack used (prev) :  00000D6D 0000009C
                | + function block  :  00000040 00000000
  06            HalFlashWrite
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000C 00000000
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  05          findItem
              | Stack used (prev) :  00000D6D 0000009C
              | + function block  :  00000041 00000000
  06            HalFlashErase
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  00000000 00000002
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  05          erasePage
              | Stack used (prev) :  00000D6D 0000009D
              | + function block  :  0000003B 00000000
  06            writeWord
                | Stack used (prev) :  00000DAD 0000009C
                | + function block  :  0000003F 00000000
                |  Already listed
  05          setActivePage
              | Stack used (prev) :  00000DEC 0000009C
              | + function block  :  00000037 00000000
  05          HalFlashRead
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  0000000D 00000001
              |  Already listed
  04        compactPage
            | Stack used (prev) :  00000E23 0000009B
            | + function block  :  0000004B 00000002
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
              |  Already listed
  04        setXferPage
            | Stack used (prev) :  00000DEC 0000009C
            | + function block  :  0000002B 00000000
  03      osal_snv_compact
          | Stack used (prev) :  00000E6E 0000009B
          | + function block  :  00000020 00000004
  04        compactPage
            | Stack used (prev) :  00000E23 0000009B
            | + function block  :  0000004B 00000002
            |  Already listed
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
              |  Already listed
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
              |  Already listed
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
              |  Already listed
  05          writeWord
              | Stack used (prev) :  00000DAD 0000009C
              | + function block  :  0000003F 00000000
              |  Already listed
  05          verifyWordM
              | Stack used (prev) :  00000D6D 0000009C
              | + function block  :  00000040 00000000
              |  Already listed
  05          HalFlashWrite
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  0000000C 00000000
              |  Already listed
  04        writeItem
            | Stack used (prev) :  00000DEC 0000009B
            | + function block  :  0000003F 00000001
  04        findItem
            | Stack used (prev) :  00000D6D 0000009C
            | + function block  :  00000041 00000000
            |  Already listed
  04        setXferPage
            | Stack used (prev) :  00000DEC 0000009C
            | + function block  :  0000002B 00000000
            |  Already listed
  04        HalFlashRead
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  0000000D 00000001
            |  Already listed
  03      osal_snv_write
          | Stack used (prev) :  00000E6E 0000009D
          | + function block  :  00000022 00000000
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  06            smSendFailAndEnd
                | Stack used (prev) :  00000B03 00000086
                | + function block  :  0000002B 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000A 00000000
                |  Already listed
  05          smProcessPairingReq
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  00000013 00000002
  06            osal_mem_alloc
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  00000164 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  06            smFreePairingParams
                | Stack used (prev) :  00000162 0000004E
                | + function block  :  00000012 00000004
                |  Already listed
  06            smGeneratePairingReqRsp
                | Stack used (prev) :  0000037B 00000050
                | + function block  :  00000038 00000000
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          SM_StartPairing
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  00000014 00000001
  05          linkDB_Find
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  05          gapFreeAuthLink
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  00000014 00000002
              |  Already listed
  04        GAP_Authenticate
            | Stack used (prev) :  00000D74 0000009D
            | + function block  :  00000020 00000000
  03      gapBondMgrAuthenticate
          | Stack used (prev) :  00000D94 0000009D
          | + function block  :  0000006C 00000000
  06            findItem
                | Stack used (prev) :  00000D6D 0000009C
                | + function block  :  00000041 00000000
                |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000DAE 0000009C
              | + function block  :  00000018 00000000
  05          osal_snv_write
              | Stack used (prev) :  00000E6E 0000009D
              | + function block  :  00000022 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  04        gapBondMgrEraseBonding
            | Stack used (prev) :  00000E90 0000009D
            | + function block  :  0000008D 00000000
  03      gapBondMgrEraseAllBondings
          | Stack used (prev) :  00000F1D 0000009D
          | + function block  :  00000036 00000000
  04        osal_snv_read
            | Stack used (prev) :  00000DAE 0000009C
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  0000000A 00000000
              |  Already listed
  08                phyFindWlEntry
                    | Stack used (prev) :  00000D60 0000009B
                    | + function block  :  00000017 00000000
  08                PHY_ClearBlacklistIndex
                    | Stack used (prev) :  00000D60 0000009B
                    | + function block  :  00000016 00000000
  08                PHY_SetBlacklistIndex
                    | Stack used (prev) :  00000D60 0000009B
                    | + function block  :  00000016 00000000
  07              PHY_AddWlEntry
                  | Stack used (prev) :  00000D77 0000009B
                  | + function block  :  00000018 00000001
  07              llCheckWhiteListUsage
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  00000000 00000002
  06            LL_AddWhiteListDevice
                | Stack used (prev) :  00000D8F 0000009D
                | + function block  :  00000012 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_AddWhiteListCmd
              | Stack used (prev) :  00000DA1 0000009D
              | + function block  :  00000014 00000000
  07              PHY_ClearWhitelist
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  00000000 00000002
  07              llCheckWhiteListUsage
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            LL_ClearWhiteList
                | Stack used (prev) :  00000D60 0000009D
                | + function block  :  00000000 00000004
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_ClearWhiteListCmd
              | Stack used (prev) :  00000D60 000000A1
              | + function block  :  00000002 00000004
  04        gapBondMgr_SyncWhiteList
            | Stack used (prev) :  00000DB5 000000A5
            | + function block  :  0000002A 00000000
  06            osal_isbufset
                | Stack used (prev) :  00000C0B 00000090
                | + function block  :  0000000A 00000000
                |  Already listed
  05          gapBondMgrBondTotal
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  00000015 00000000
  06            osal_memset
                | Stack used (prev) :  00000164 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            ggs_SetAttrWPermit
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000E 00000002
  06            ggs_SetAttrWPermit
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000E 00000002
                |  Already listed
  06            ggs_SetAttrWPermit
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000E 00000002
                |  Already listed
  05          GGS_SetParameter
              | Stack used (prev) :  00000D6E 0000009D
              | + function block  :  0000001C 00000000
  04        gapBondSetupPrivFlag
            | Stack used (prev) :  00000D8A 0000009D
            | + function block  :  0000001A 00000004
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  03      gapBondMgrReadBonds
          | Stack used (prev) :  00000DDF 000000A5
          | + function block  :  00000036 00000000
  04        osal_snv_write
            | Stack used (prev) :  00000E6E 0000009D
            | + function block  :  00000022 00000000
            |  Already listed
  04        gapBondMgr_SyncWhiteList
            | Stack used (prev) :  00000DB5 000000A5
            | + function block  :  0000002A 00000000
            |  Already listed
  04        gapBondSetupPrivFlag
            | Stack used (prev) :  00000D8A 0000009D
            | + function block  :  0000001A 00000004
            |  Already listed
  05          osal_memcmp
              | Stack used (prev) :  00000162 0000004C
              | + function block  :  0000000D 00000000
              |  Already listed
  04        gapBondMgrFindAddr
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  0000002D 00000000
  04        osal_isbufset
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  0000000A 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  03      gapBondMgrAddBond
          | Stack used (prev) :  00000E90 000000A5
          | + function block  :  0000005E 00000000
  04        osal_snv_read
            | Stack used (prev) :  00000DAE 0000009C
            | + function block  :  00000018 00000000
            |  Already listed
  04        gapBondMgrFindAddr
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  0000002D 00000000
            |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000DAE 0000009C
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  04        gapBondMgrGetPublicAddr
            | Stack used (prev) :  00000DC6 0000009C
            | + function block  :  00000053 00000000
  04        osal_isbufset
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  0000000A 00000000
            |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000D 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  06            osal_memcmp
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000D 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            sm_ah
                | Stack used (prev) :  000005B8 0000006B
                | + function block  :  00000054 00000000
                |  Already listed
  05          SM_ResolveRandomAddrs
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  00000014 00000001
  04        GAP_ResolvePrivateAddr
            | Stack used (prev) :  00000D74 0000009C
            | + function block  :  00000000 00000004
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000E19 000000A0
          | + function block  :  0000009D 00000000
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000E19 000000A0
          | + function block  :  0000009D 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  00000164 0000004E
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  00000162 0000004E
          | + function block  :  00000000 00000004
          |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  05          smGenerateConfirm
              | Stack used (prev) :  0000037B 00000050
              | + function block  :  00000042 00000000
              |  Already listed
  05          sm_c1
              | Stack used (prev) :  000002E2 00000052
              | + function block  :  00000080 00000000
              |  Already listed
  05          smGenerateRandBuf
              | Stack used (prev) :  0000017A 00000056
              | + function block  :  00000027 00000000
              |  Already listed
  04        SM_PasskeyUpdate
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  0000000C 00000000
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_PasscodeUpdate
          | Stack used (prev) :  00000D6C 0000009B
          | + function block  :  00000056 00000001
  04        smSendFailAndEnd
            | Stack used (prev) :  00000B03 00000086
            | + function block  :  0000002B 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_TerminateAuth
          | Stack used (prev) :  00000D60 0000009B
          | + function block  :  0000000D 00000001
  02    GAPBondMgr_ProcessGAPMsg
        | Stack used (prev) :  00000F53 000000A5
        | + function block  :  0000005B 00000000
  04        osal_snv_read
            | Stack used (prev) :  00000DAE 0000009C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  00000E6E 0000009D
            | + function block  :  00000022 00000000
            |  Already listed
  04        gapBondMgrInvertCharCfgItem
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  00000068 00000001
  04        gapBondMgrInvertCharCfgItem
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  00000068 00000001
            |  Already listed
  04        gapBondMgrFindCharCfgItem
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  00000031 00000000
  04        gapBondMgrFindCharCfgItem
            | Stack used (prev) :  00000D60 0000009B
            | + function block  :  00000031 00000000
            |  Already listed
  04        osal_isbufset
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  0000000A 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  03      gapBondMgrUpdateCharCfg
          | Stack used (prev) :  00000E90 0000009D
          | + function block  :  0000005E 00000000
  03      gapBondMgrUpdateCharCfg
          | Stack used (prev) :  00000E90 0000009D
          | + function block  :  0000005E 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000E19 000000A0
          | + function block  :  0000009D 00000000
          |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPBondMgr_UpdateCharCfg
        | Stack used (prev) :  00000EEE 000000A0
        | + function block  :  00000031 00000000
  02    GAPBondMgr_UpdateCharCfg
        | Stack used (prev) :  00000EEE 000000A0
        | + function block  :  00000031 00000000
        |  Already listed
  03      gapBondMgrSendServiceChange
          | Stack used (prev) :  00000439 00000050
          | + function block  :  0000000C 00000004
          |  Already listed
  04        osal_snv_read
            | Stack used (prev) :  00000DAE 0000009C
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  00000E6E 0000009D
            | + function block  :  00000022 00000000
            |  Already listed
  04        osal_isbufset
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  0000000A 00000000
            |  Already listed
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000E90 0000009D
          | + function block  :  00000040 00000000
  03      gapBondMgrChangeState
          | Stack used (prev) :  00000E90 0000009D
          | + function block  :  00000040 00000000
          |  Already listed
  03      GAPBondMgr_ResolveAddr
          | Stack used (prev) :  00000E19 000000A0
          | + function block  :  0000009D 00000000
          |  Already listed
  03      linkDB_PerformFunc
          | Stack used (prev) :  00000D60 0000009B
          | + function block  :  00000000 00000002
  03      linkDB_Find
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAPBondMgr_ServiceChangeInd
        | Stack used (prev) :  00000ED0 000000A0
        | + function block  :  0000002B 00000000
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  02    GATTServApp_ReadAttr
        | Stack used (prev) :  00000268 00000052
        | + function block  :  0000007B 00000000
        |  Already listed
  02    GATT_FindNextAttr
        | Stack used (prev) :  0000022C 0000004E
        | + function block  :  0000003C 00000000
        |  Already listed
  02    GATT_FindHandleUUID
        | Stack used (prev) :  000001C8 0000004D
        | + function block  :  00000064 00000000
        |  Already listed
  01  GAPBondMgr_ProcessEvent
      | Stack used (prev) :  00000FAE 000000A5
      | + function block  :  00000026 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_SetParameter::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_LinkEst::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_ResolveAddr::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_ServiceChangeInd::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_UpdateCharCfg::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_Register::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_ProcessGAPMsg::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrChangeState::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrUpdateCharCfg::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrFindCharCfgItem::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrInvertCharCfgItem::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrAddBond::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrGetPublicAddr::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrFindAddr::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrReadBonds::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrBondTotal::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrEraseAllBondings::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrEraseBonding::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_Init::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  GAPBondMgr_ProcessEvent::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrSendServiceChange::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondSetupPrivFlag::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgrAuthenticate::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  gapBondMgr_SyncWhiteList::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccInit::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccReset::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccActive::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccStandby::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccClearTapIntr::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAccReadFifoData::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAdcInit::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAdcRead::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAdcSetReference::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalAesInit::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  01  HalDmaInit::?relay
      | Stack used (prev) :  00000FD4 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FD4 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FD4 000000A5
  02    halRestoreSleepLevel
        | Stack used (prev) :  00000FD4 000000A5
        | + function block  :  00000000 00000000
  03      HalLedOnOff
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000001D 00000002
          |  Already listed
  03      HalLedOnOff
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  0000001D 00000002
          |  Already listed
  03      Recursive system consisting of
           | HalLedBlink
           | HalLedSet
          | Stack used (prev) :  0000017F 0000004C
          | + function block  :  0000003E 00000002
          |  Already listed
  03      osal_GetSystemClock
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000000 00000002
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000020 00000000
          |  Already listed
  02    HalLedUpdate
        | Stack used (prev) :  00000FD4 000000A5
        | + function block  :  00000021 00000001
  02    HalKeyPoll
        | Stack used (prev) :  00000FD4 000000A5
        | + function block  :  00000000 00000002
  02    osal_stop_timerEx
        | Stack used (prev) :  000000E6 00000032
        | + function block  :  00000018 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  00000965 00000076
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_clear_event
        | Stack used (prev) :  000000D7 00000030
        | + function block  :  00000015 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  01  Hal_ProcessEvent
      | Stack used (prev) :  00000FF5 000000A7
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  Hal_Init::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalDriverInit::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  Hal_ProcessEvent::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  Hal_ProcessPoll::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalFlashRead::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalFlashWrite::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalFlashErase::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalI2CInit::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalI2CRead::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalI2CWrite::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalI2CDisable::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalKeyInit::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalKeyConfig::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalKeyPoll::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halProcessAccInterrupt::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halProcessChrInterrupt::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalLedInit::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalLedSet::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalLedBlink::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalLedUpdate::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HalLedOnOff::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halSetSleepMode::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halSleep::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halSleepSetTimer::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halSleepReadTimer::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  halRestoreSleepLevel::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HS_AddService::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HS_SetParameter::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HS_GetParameter::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HS_ReadAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HS_WriteAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_AddService::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_SetParameter::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_GetParameter::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_ReadAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_WriteAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  HP_HandleConnStatusCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_AddService::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_RegisterAppCBs::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_SetParameter::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_ReadAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_WriteAttrCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  MR_HandleConnStatusCB::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  osal_bm_alloc::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  osal_bm_free::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  osal_bm_adjust_header::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  bm_desc_from_payload::?relay
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001009 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001009 000000A7
  01  osal_CbTimerProcessEvent
      | Stack used (prev) :  00001009 000000A7
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_CbTimerInit::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_CbTimerProcessEvent::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_CbTimerStart::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_CbTimerStop::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  initNV::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  setActivePage::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  setXferPage::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  erasePage::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  cleanErasedPage::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  findOffset::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  findItem::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  writeItem::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  compactPage::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  verifyWordM::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  writeWord::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_snv_init::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_snv_write::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_snv_read::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  osal_snv_compact::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_AddService::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_SetParameter::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_GetParameter::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_ReadAttrCB::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_WriteAttrCB::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  01  PM_HandleConnStatusCB::?relay
      | Stack used (prev) :  00001019 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001019 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001019 000000A7
  03      gapRole_startConnUpdate
          | Stack used (prev) :  000003D1 00000050
          | + function block  :  0000003E 00000000
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
          |  Already listed
  02    GAPRole_SendUpdateParam
        | Stack used (prev) :  00001019 000000A7
        | + function block  :  00000026 00000000
  02    gapRole_startConnUpdate
        | Stack used (prev) :  000003D1 00000050
        | + function block  :  0000003E 00000000
        |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  00000E6E 0000009D
            | + function block  :  00000022 00000000
            |  Already listed
  04        GAPBondMgr_ProcessGAPMsg
            | Stack used (prev) :  00000F53 000000A5
            | + function block  :  0000005B 00000000
            |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  00000DAE 0000009C
              | + function block  :  00000018 00000000
              |  Already listed
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  00000068 00000001
              |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000E19 000000A0
              | + function block  :  0000009D 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  00000C0B 00000090
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          GATTServApp_SendServiceChangedInd
              | Stack used (prev) :  00000427 00000050
              | + function block  :  00000012 00000000
              |  Already listed
  06            GATTServApp_WriteAttr
                | Stack used (prev) :  00000795 00000072
                | + function block  :  00000034 00000000
                |  Already listed
  05          GATTServApp_UpdateCharCfg
              | Stack used (prev) :  00001019 000000A7
              | + function block  :  00000014 00000001
  06            smSendSMMsg
                | Stack used (prev) :  00000353 00000050
                | + function block  :  00000028 00000000
                |  Already listed
  06            smUint8ToAuthReq
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  0000000A 00000000
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_SendSlaveSecurityRequest
              | Stack used (prev) :  00001019 000000A7
              | + function block  :  00000010 00000000
  06            osal_mem_free
                | Stack used (prev) :  00000000 00000000
                | + function block  :  0000000A 00000002
                |  Already listed
  06            osal_memdup
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000010 00000000
                |  Already listed
  06            smStartEncryption
                | Stack used (prev) :  00001019 000000A7
                | + function block  :  00000016 00000000
  06            linkDB_Find
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_Bond
              | Stack used (prev) :  0000102F 000000A7
              | + function block  :  00000029 00000000
  06            osal_memcpy
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000019 00000001
                |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000014 00000002
                |  Already listed
  05          GAP_Signable
              | Stack used (prev) :  00001019 000000A7
              | + function block  :  00000010 00000000
  04        GAPBondMgr_LinkEst
            | Stack used (prev) :  00001058 000000A8
            | + function block  :  000000C1 00000000
  04        osal_get_timeoutEx
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  0000000E 00000000
            |  Already listed
  04        osal_stop_timerEx
            | Stack used (prev) :  000000E6 00000032
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_start_timerEx
            | Stack used (prev) :  00000183 0000004D
            | + function block  :  00000020 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000015 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  00000164 0000004E
            | + function block  :  00000018 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  00000000 00000000
            | + function block  :  00000019 00000001
            |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000019 00000001
              |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetScanRspData
                | Stack used (prev) :  00001019 000000A7
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetScanRspDataCmd
              | Stack used (prev) :  00001025 000000A7
              | + function block  :  00000014 00000001
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  06            LL_SetAdvData
                | Stack used (prev) :  00001019 000000A7
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  00000076 00000006
                | + function block  :  0000002B 00000000
                |  Already listed
  05          HCI_LE_SetAdvDataCmd
              | Stack used (prev) :  00001025 000000A7
              | + function block  :  00000014 00000001
  04        GAP_UpdateAdvertisingData
            | Stack used (prev) :  00001039 000000A7
            | + function block  :  00000024 00000001
  04        GAP_GetParamValue
            | Stack used (prev) :  00000162 0000004C
            | + function block  :  00000014 00000002
            |  Already listed
  03      gapRole_ProcessGAPMsg
          | Stack used (prev) :  00001119 000000A7
          | + function block  :  0000002E 00000001
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  0000020E 0000004F
          | + function block  :  00000016 00000004
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000000E6 00000032
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000020 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    gapRole_ProcessOSALMsg
        | Stack used (prev) :  00001147 000000A8
        | + function block  :  0000002E 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  0000020E 0000004F
        | + function block  :  00000016 00000004
        |  Already listed
  02    osal_snv_write
        | Stack used (prev) :  00000E6E 0000009D
        | + function block  :  00000022 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000183 0000004D
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  000005D2 0000006B
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000000A 00000002
        | + function block  :  00000009 00000004
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000019 00000001
        |  Already listed
  03      LL_ReadRssi
          | Stack used (prev) :  00001019 000000A7
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  00000076 00000006
          | + function block  :  0000002B 00000000
          |  Already listed
  02    HCI_ReadRssiCmd
        | Stack used (prev) :  00001019 000000AA
        | + function block  :  0000001A 00000000
  03      osal_start_reload_timer
          | Stack used (prev) :  00000183 0000004D
          | + function block  :  00000028 00000000
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000019 00000001
          |  Already listed
  03      GAP_NumActiveConnections
          | Stack used (prev) :  00000162 0000004E
          | + function block  :  00000000 00000004
          |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  03      gapSetAdvParams
          | Stack used (prev) :  000001C8 00000052
          | + function block  :  00000028 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  00000162 0000004C
          | + function block  :  00000014 00000002
          |  Already listed
  02    GAP_MakeDiscoverable
        | Stack used (prev) :  00001019 000000A7
        | + function block  :  00000010 00000001
  01  GAPRole_ProcessEvent
      | Stack used (prev) :  00001175 000000AA
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_SetParameter::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_GetParameter::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_StartDevice::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_TerminateConnection::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_Init::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_ProcessEvent::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  gapRole_ProcessOSALMsg::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  gapRole_ProcessGAPMsg::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  gapRole_startConnUpdate::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  GAPRole_SendUpdateParam::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  ST_AddService::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  ST_ReadAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  ST_WriteAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  ST_HandleConnStatusCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_AddService::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_RegisterAppCBs::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_SetParameter::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_GetParameter::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_ReadAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  TS_WriteAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_AddService::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_RegisterAppCBs::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_SetParameter::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_ReadAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_WriteAttrCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  01  WC_HandleConnStatusCB::?relay
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  02    exit
        | Stack used (prev) :  000011A1 000000AA
        | + function block  :  00000000 00000000
  01  ?cmain
      | Stack used (prev) :  000011A1 000000AA
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011A1 000000AA


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011A1 000000AA
  02    __low_level_init
        | Stack used (prev) :  000011A1 000000AA
        | + function block  :  00000000 00000000
  05          compactPage
              | Stack used (prev) :  00000E23 0000009B
              | + function block  :  0000004B 00000002
              |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  05          findOffset
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000022 00000000
  05          findOffset
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000022 00000000
              |  Already listed
  06            erasePage
                | Stack used (prev) :  00000D6D 0000009D
                | + function block  :  0000003B 00000000
                |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  0000001F 00000000
  05          cleanErasedPage
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  0000001F 00000000
              |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  0000001F 00000000
              |  Already listed
  05          erasePage
              | Stack used (prev) :  00000D6D 0000009D
              | + function block  :  0000003B 00000000
              |  Already listed
  05          setActivePage
              | Stack used (prev) :  00000DEC 0000009C
              | + function block  :  00000037 00000000
              |  Already listed
  05          HalFlashRead
              | Stack used (prev) :  00000D60 0000009B
              | + function block  :  0000000D 00000001
              |  Already listed
  04        initNV
            | Stack used (prev) :  000011C3 000000AA
            | + function block  :  00000020 00000000
  03      osal_snv_init
          | Stack used (prev) :  000011E3 000000AA
          | + function block  :  00000000 00000004
  05          Recursive system consisting of
               | HalLedBlink
               | HalLedSet
              | Stack used (prev) :  0000017F 0000004C
              | + function block  :  0000003E 00000002
              |  Already listed
  04        HalLedInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000002
  04        HalKeyInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000002
  04        HalDmaInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000000
  04        HalAesInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000000
  04        HalAdcInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000002
  04        HalAccInit
            | Stack used (prev) :  00000C0B 00000090
            | + function block  :  00000001 00000002
            |  Already listed
  03      HalDriverInit
          | Stack used (prev) :  000011A1 000000AC
          | + function block  :  00000000 00000004
  04        Recursive system consisting of
             | HalLedBlink
             | HalLedSet
            | Stack used (prev) :  0000017F 0000004C
            | + function block  :  0000003E 00000002
            |  Already listed
  05          osal_stop_timerEx
              | Stack used (prev) :  000000E6 00000032
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_set_event
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000015 00000000
              |  Already listed
  04        HalKeyConfig
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000009 00000000
  04        osal_int_disable
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000000
  03      InitBoard
          | Stack used (prev) :  000011AA 000000AA
          | + function block  :  00000012 00000000
  03      osal_pwrmgr_device
          | Stack used (prev) :  00000965 00000076
          | + function block  :  00000000 00000002
          |  Already listed
  05          Hal_ProcessPoll
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000000 00000000
  07              halSleepReadTimer
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  0000001C 00000003
  07              halSleepSetTimer
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  0000002C 00000000
  07              halSleepSetTimer
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  0000002C 00000000
                  |  Already listed
  07              halSetSleepMode
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000018 00000000
  08                osal_pwrmgr_task_state
                    | Stack used (prev) :  00000965 00000076
                    | + function block  :  0000000A 00000000
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000015 00000000
                    |  Already listed
  08                PHY_Reset
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStartTimer2
                    | Stack used (prev) :  000011A1 000000AA
                    | + function block  :  00000000 00000000
  08                llGetCurrentTask
                    | Stack used (prev) :  000000D7 00000030
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llExtendRfRange
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000008 00000002
                    |  Already listed
  08                llSetFreqTune
                    | Stack used (prev) :  000011A1 000000AA
                    | + function block  :  00000000 00000002
  07              LL_PowerOnReq
                  | Stack used (prev) :  000011A1 000000AC
                  | + function block  :  00000012 00000000
  08                PHY_Reset
                    | Stack used (prev) :  00000162 0000004C
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStopTimer2
                    | Stack used (prev) :  000011A1 000000AA
                    | + function block  :  00000000 00000000
  07              LL_PowerOffReq
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000012 00000000
  08                llGetFullCTandST
                    | Stack used (prev) :  000011A1 000000AA
                    | + function block  :  00000000 00000003
  08                llGetCurrentTask
                    | Stack used (prev) :  000000D7 00000030
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              LL_TimeToNextRfEvent
                  | Stack used (prev) :  000011A1 000000AD
                  | + function block  :  00000036 00000000
  06            halSleep
                | Stack used (prev) :  000011D7 000000AD
                | + function block  :  00000030 00000000
  06            osal_next_timeout
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000010 00000000
  05          osal_pwrmgr_powerconserve
              | Stack used (prev) :  00001207 000000AD
              | + function block  :  00000018 00000000
  05          osalTimeUpdate
              | Stack used (prev) :  00000185 0000004F
              | + function block  :  00000020 00000000
              |  Already listed
  04        osal_run_system
            | Stack used (prev) :  0000121F 000000AD
            | + function block  :  00000018 00000000
  03      osal_start_system
          | Stack used (prev) :  00001237 000000AD
          | + function block  :  00000000 00000004
  06            osal_snv_read
                | Stack used (prev) :  00000DAE 0000009C
                | + function block  :  00000018 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  00000164 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  06            GAP_RegisterForHCIMsgs
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  05          GAPRole_Init
              | Stack used (prev) :  000011A1 000000AC
              | + function block  :  00000012 00000000
  06            osal_memset
                | Stack used (prev) :  00000164 0000004E
                | + function block  :  00000018 00000000
                |  Already listed
  05          osal_CbTimerInit
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000009 00000000
  05          Hal_Init
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000000 00000002
  06            gapBondMgrReadBonds
                | Stack used (prev) :  00000DDF 000000A5
                | + function block  :  00000036 00000000
                |  Already listed
  05          GAPBondMgr_Init
              | Stack used (prev) :  000011A1 000000AA
              | + function block  :  00000009 00000000
  06            WC_RegisterAppCBs
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  08                osal_mem_alloc
                    | Stack used (prev) :  00000000 00000000
                    | + function block  :  00000018 00000000
                    |  Already listed
  09                  osal_mem_alloc
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000018 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  00000000 00000000
                      | + function block  :  00000019 00000001
                      |  Already listed
  09                  ATT_CompareUUID
                      | Stack used (prev) :  0000018C 0000004D
                      | + function block  :  0000003C 00000000
                      |  Already listed
  08                GATT_RegisterService
                    | Stack used (prev) :  000011A1 000000AA
                    | + function block  :  00000012 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
  06            WC_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            TS_RegisterAppCBs
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            TS_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            ST_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            GAPRole_SetParameter
                | Stack used (prev) :  0000040F 00000052
                | + function block  :  00000020 00000000
                |  Already listed
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            PM_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            MR_RegisterAppCBs
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            MR_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            HP_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            HS_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            Recursive system consisting of
                 | HalLedBlink
                 | HalLedSet
                | Stack used (prev) :  0000017F 0000004C
                | + function block  :  0000003E 00000002
                |  Already listed
  07              osal_snv_compact
                  | Stack used (prev) :  00000E6E 0000009B
                  | + function block  :  00000020 00000004
                  |  Already listed
  07              gapBondMgrEraseAllBondings
                  | Stack used (prev) :  00000F1D 0000009D
                  | + function block  :  00000036 00000000
                  |  Already listed
  07              gapBondMgrReadBonds
                  | Stack used (prev) :  00000DDF 000000A5
                  | + function block  :  00000036 00000000
                  |  Already listed
  07              gapBondMgrReadBonds
                  | Stack used (prev) :  00000DDF 000000A5
                  | + function block  :  00000036 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000019 00000001
                  |  Already listed
  07              GAP_NumActiveConnections
                  | Stack used (prev) :  00000162 0000004E
                  | + function block  :  00000000 00000004
                  |  Already listed
  07              GAP_SetParamValue
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            GAPBondMgr_SetParameter
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  0000000E 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            DevInfo_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  00000018 00000000
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              GATTServApp_InitCharCfg
                  | Stack used (prev) :  00000179 0000004C
                  | + function block  :  00000022 00000000
                  |  Already listed
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            BT_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            RegisterForKeys
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000015 00000000
                |  Already listed
  07              LL_EXT_ClkDivOnHalt
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              HCI_VendorSpecifcCommandCompleteEvent
                  | Stack used (prev) :  00000076 00000006
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            HCI_EXT_ClkDivOnHaltCmd
                | Stack used (prev) :  000011A1 000000AC
                | + function block  :  00000018 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GATTServApp_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  07              GATTServApp_RegisterService
                  | Stack used (prev) :  000011B3 000000AA
                  | + function block  :  00000032 00000000
                  |  Already listed
  06            GGS_AddService
                | Stack used (prev) :  000011E5 000000AA
                | + function block  :  0000001C 00000000
  06            GGS_SetParameter
                | Stack used (prev) :  00000D6E 0000009D
                | + function block  :  0000001C 00000000
                |  Already listed
  06            GAP_SetParamValue
                | Stack used (prev) :  00000162 0000004C
                | + function block  :  00000000 00000002
                |  Already listed
  05          Betwine_Init
              | Stack used (prev) :  00001201 000000AC
              | + function block  :  0000003A 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  00000164 0000004E
              | + function block  :  00000018 00000000
              |  Already listed
  06            hciInitEventMasks
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  05          HCI_Init
              | Stack used (prev) :  000011A1 000000AC
              | + function block  :  00000012 00000000
  06            HCI_SMPTaskRegister
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  06            linkDB_Register
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000009 00000000
                |  Already listed
  06            L2CAP_RegisterApp
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000003
  05          SM_Init
              | Stack used (prev) :  000011AA 000000AD
              | + function block  :  00000012 00000000
  06            HalFlashRead
                | Stack used (prev) :  00000D60 0000009B
                | + function block  :  0000000D 00000001
                |  Already listed
  06            osal_pwrmgr_task_state
                | Stack used (prev) :  00000965 00000076
                | + function block  :  0000000A 00000000
                |  Already listed
  06            osal_set_event
                | Stack used (prev) :  00000000 00000000
                | + function block  :  00000015 00000000
                |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_Reset
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            PHY_Init
                | Stack used (prev) :  000011A1 000000AC
                | + function block  :  00000000 00000004
  06            llInitTimer2
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000000
  06            LL_ENC_InitAesDMA
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  00000000 00000006
                | + function block  :  00000016 00000000
                |  Already listed
  07              HalFlashWrite
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  0000000C 00000000
                  |  Already listed
  06            llFindTxPowerSettings
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000022 00000002
  07              PHY_SetFifoConfig
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureFifoDataProcessing
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_ClearSavedWhiteList
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_ClearBlacklist
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_ClearWhitelist
                  | Stack used (prev) :  00000D60 0000009B
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureMD
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  00000162 0000004C
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              llDisableT2IntsEvts
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000000 00000000
                  |  Already listed
  07              llSchedulerInit
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              llInitFeatureSet
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              llReleaseAllConnId
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              llClearSetInts
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  07              llRfInit
                  | Stack used (prev) :  00000000 00000002
                  | + function block  :  00000000 00000004
                  |  Already listed
  06            LL_Reset
                | Stack used (prev) :  000011A1 000000AC
                | + function block  :  0000000C 00000004
  05          LL_Init
              | Stack used (prev) :  000011C3 000000B0
              | + function block  :  00000018 00000000
  06            HCI_L2CAPTaskRegister
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  05          L2CAP_Init
              | Stack used (prev) :  000011A1 000000AC
              | + function block  :  00000014 00000000
  06            linkDB_Register
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000009 00000000
                |  Already listed
  06            GATTServApp_InitCharCfg
                | Stack used (prev) :  00000179 0000004C
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  0000000A 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  00000000 00000000
                  | + function block  :  00000018 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  00000164 0000004E
                  | + function block  :  00000018 00000000
                  |  Already listed
  06            gattServApp_SetNumPrepareWrites
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000017 00000000
  06            GATT_RegisterForReq
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  05          GATTServApp_Init
              | Stack used (prev) :  000011B8 000000AC
              | + function block  :  00000012 00000000
  06            L2CAP_RegisterApp
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000003
                |  Already listed
  07              linkDB_Register
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              gattRegisterServer
                  | Stack used (prev) :  000011A1 000000AA
                  | + function block  :  00000000 00000002
  06            GATT_InitServer
                | Stack used (prev) :  000011AA 000000AC
                | + function block  :  00000014 00000000
  05          GATT_Init
              | Stack used (prev) :  000011BE 000000AD
              | + function block  :  00000012 00000000
  06            HCI_GAPTaskRegister
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  06            linkDB_Init
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000002
  06            L2CAP_RegisterApp
                | Stack used (prev) :  000011A1 000000AA
                | + function block  :  00000000 00000003
                |  Already listed
  05          GAP_Init
              | Stack used (prev) :  000011A1 000000AD
              | + function block  :  00000012 00000000
  04        osalInitTasks
            | Stack used (prev) :  0000123B 000000B0
            | + function block  :  00000000 00000004
  04        osalTimerInit
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000009 00000000
  04        osal_pwrmgr_init
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000002
  05          osal_mem_free
              | Stack used (prev) :  00000000 00000000
              | + function block  :  0000000A 00000002
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  00000000 00000000
              | + function block  :  00000018 00000000
              |  Already listed
  04        osal_mem_kick
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  0000000A 00000000
  04        osal_mem_init
            | Stack used (prev) :  000011A1 000000AA
            | + function block  :  00000000 00000002
  03      osal_init_system
          | Stack used (prev) :  0000123B 000000B4
          | + function block  :  00000000 00000004
  02    main
        | Stack used (prev) :  0000123B 000000B8
        | + function block  :  00000000 00000000
  01  ?call_main
      | Stack used (prev) :  0000123B 000000B8
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000123B 000000B8


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000123B 000000B8
  01  __program_start
      | Stack used (prev) :  0000123B 000000B8
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000123B 000000B8


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000123B 000000B8
  01  memcpy::?relay
      | Stack used (prev) :  0000123B 000000B8
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000123B 000000B8


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000123B 000000B8
  01  memset::?relay
      | Stack used (prev) :  0000123B 000000B8
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000123B 000000B8


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000123B 000000B8
  01  strlen::?relay
      | Stack used (prev) :  0000123B 000000B8
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000123B 000000B8




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
CHECKSUM             CODE          00003000 - 00003001           2   rel    0
INTVEC               CODE          00003030 - 000030B5          86   com    0
BDATA_ID             CODE               000030B6                     dse    0
BIT_ID               CODE               000030B6                     dse    0
DATA_ID              CODE          000030B6 - 000030B6           1   rel    0
IDATA_ID             CODE               000030B7                     dse    0
PDATA_ID             CODE               000030B7                     dse    0
IXDATA_ID            CODE               000030B7                     dse    0
XDATA_ID             CODE          000030B7 - 0000354E         498   rel    0
CSTART               CODE          0000354F - 00003612          C4   rel    0
RCODE                CODE          00003613 - 00003D8C         77A   rel    0
DIFUNCT              CODE               00003D8D                     dse    0
?FILL1               CODE          00003D8D - 00003D8F           3   rel    0
NEAR_CODE            CODE          00003D90 - 000048BE         B2F   rel    2
BANK_RELAYS          CODE          000048BF - 00005A3A        117C   rel    0
?FILL2               CODE          00005A3B - 00005A3B           1   rel    0
CODE_C               CODE          00005A3C - 00005A43           8   rel    2
<BANKED_CODE> 1      CODE          00005A44 - 00007FF5        25B2   rel    0
?FILL3               CODE          00007FF6 - 00007FF7           2   rel    0
SLEEP_CODE           CODE          00007FF8 - 00007FFF           8   rel    0
<BANKED_CODE> 2      CODE          00008000 - 0000FFF5        7FF6   rel    0
?FILL5               CODE          0000FFF6 - 0000FFFF           A   rel    0
<BANKED_CODE> 3      CODE          00010000 - 00017FF4        7FF5   rel    0
?FILL6               CODE          00017FF5 - 00017FFF           B   rel    0
<BANKED_CODE> 4      CODE          00018000 - 0001FFFA        7FFB   rel    0
?FILL7               CODE          0001FFFB - 0001FFFF           5   rel    0
<BANKED_CODE,XDATA_ROM_C_FLASH> 1
                     CODE          00020000 - 000214DE        14DF   rel    2
?FILL4               CODE          000214DF - 00025FFF        4B21   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          0000000A - 00000019          10   rel    0
PSP                  DATA               0000001A                     dse    0
XSP                  DATA          0000001A - 0000001B           2   rel    0
DATA_I               DATA          0000001C - 0000001C           1   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
DATA_Z               DATA          00000021 - 00000028           8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000087 - 0000008A           4 
                     DATA          0000008C - 0000008D           2 
                     DATA          0000008F - 00000091           3 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 000000A9          10 
                     DATA          000000AB - 000000AF           5 
                     DATA          000000B1 - 000000B4           4 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000C0           9 
                     DATA          000000C3 - 000000C3           1 
                     DATA          000000C6 - 000000C7           2 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000D1 - 000000D7           7 
                     DATA          000000D9 - 000000DB           3 
                     DATA          000000E1 - 000000E5           5 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F2 - 000000F2           1 
                     DATA          000000F2 - 000000F5           4 
                     DATA          000000FD - 000000FF           3 
XSTACK               XDATA         00000000 - 0000027F         280   rel    0
XDATA_Z              XDATA         00000280 - 00000A47         7C8   rel    0
XDATA_I              XDATA         00000A48 - 00000EDF         498   rel    0
<XDATA_N> 1          XDATA         00000EE0 - 00001AE1         C02   rel    0
<XDATA_ROM_C> 1      CONST         00008000 - 000082BA         2BB   rel    2
IDATA_I              IDATA              00000029                     dse    0
IDATA_Z              IDATA         00000029 - 0000002A           2   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0


                ****************************************
                *                                      *
                *              CHECKSUMS               *
                *                                      *
                ****************************************

Symbol      Checksum  Memory  Start      End       Initial value
------      --------  ------  -----      ---       -------------
__checksum    0x3080   CODE   00003030 - 00007FFF  0x0000 (#0x0000)
                       CODE   00008000 - 0000FFFF
                       CODE   00010000 - 00017FFF
                       CODE   00018000 - 0001FFFF
                       CODE   00020000 - 00025FFF

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 124 049 bytes of CODE  memory (+             19 265 range fill )
      35 bytes of DATA  memory (+ 78 absolute )
   6 882 bytes of XDATA memory
     194 bytes of IDATA memory
       8 bits  of BIT   memory
     699 bytes of CONST memory

Errors: none
Warnings: none

